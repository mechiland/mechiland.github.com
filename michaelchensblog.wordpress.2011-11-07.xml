<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.2.1" created="2011-11-07 12:12" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>Michael Chen's Blog</title>
	<link>http://michael.nona.name</link>
	<description>World in my view is a word of my view.</description>
	<pubDate>Mon, 07 Nov 2011 12:12:26 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://michael.nona.name</wp:base_site_url>
	<wp:base_blog_url>http://michael.nona.name</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>mechiland@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Michael Chen]]></wp:author_display_name><wp:author_first_name><![CDATA[Michael]]></wp:author_first_name><wp:author_last_name><![CDATA[Chen]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>amowa</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Amowa]]></wp:cat_name><wp:category_description><![CDATA[Amowa-面向异步消息的Web应用]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>12</wp:term_id><wp:category_nicename>product</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[产品设计]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>11</wp:term_id><wp:category_nicename>%e5%92%a8%e8%af%a2</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[咨询]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>tech</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[技术]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename>agile</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[敏捷]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>general</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[杂谈]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>13</wp:term_id><wp:category_nicename>%e7%ae%a1%e7%90%86</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[管理]]></wp:cat_name></wp:category>

	<generator>http://wordpress.org/?v=3.2.1</generator>

	<item>
		<title>西工大追忆录(1)</title>
		<link>http://michael.nona.name/archives/28</link>
		<pubDate>Fri, 16 Apr 2004 01:30:14 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/28</guid>
		<description></description>
		<content:encoded><![CDATA[<p>在超市买书的时候，我突然想起小崔来，脑海中总是不断的浮现出小崔紧紧搂着他的小女朋友在校园内旁若无人的快步行走的情景。</p>
<p>小崔是我在大学生活中分量比较重的一个人。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date>2004-04-16 09:30:14</wp:post_date>
		<wp:post_date_gmt>2004-04-16 01:30:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%a5%bf%e5%b7%a5%e5%a4%a7%e8%bf%bd%e5%bf%86%e5%bd%951</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>新发现一个blog: Mike Spille&#039;s Blog</title>
		<link>http://michael.nona.name/archives/77</link>
		<pubDate>Tue, 09 Nov 2004 02:54:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/77</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.pyrasun.com/mike/mt/">http://www.pyrasun.com/mike/mt/</a></p> <p>Mike Spille's Blog, 愤世疾俗，言词锋利，言之有物，让我一下子想起两个人，一个是javaeye的readonly, 一个就是raimudo. :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date>2004-11-09 10:54:03</wp:post_date>
		<wp:post_date_gmt>2004-11-09 02:54:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%96%b0%e5%8f%91%e7%8e%b0%e4%b8%80%e4%b8%aablog-mike-spilles-blog</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>125</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email>4@see.it</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>200.30.79.126</wp:comment_author_IP>
			<wp:comment_date>2005-08-04 22:19:49</wp:comment_date>
			<wp:comment_date_gmt>2005-08-04 14:19:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hallo thank you for a lovely web site I enjoyed]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>128</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email>0x73@mail.me</wp:comment_author_email>
			<wp:comment_author_url>http://www.poker-stadium.com/poker-games.html</wp:comment_author_url>
			<wp:comment_author_IP>148.244.150.57</wp:comment_author_IP>
			<wp:comment_date>2005-08-06 00:05:05</wp:comment_date>
			<wp:comment_date_gmt>2005-08-05 16:05:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Super Informationen verpackt in einem tollen Design.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>190</wp:comment_id>
			<wp:comment_author><![CDATA[poker party Online forums]]></wp:comment_author>
			<wp:comment_author_email>xewk3worieqg@usmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.bitlocker.net/</wp:comment_author_url>
			<wp:comment_author_IP>196.192.64.3</wp:comment_author_IP>
			<wp:comment_date>2005-09-25 23:38:54</wp:comment_date>
			<wp:comment_date_gmt>2005-09-25 15:38:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You may find it interesting to check out some relevant pages in the field of...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>193</wp:comment_id>
			<wp:comment_author><![CDATA[winners playground casino online com]]></wp:comment_author>
			<wp:comment_author_email>kp5wmg@work.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.knowtax.net/</wp:comment_author_url>
			<wp:comment_author_IP>68.46.204.83</wp:comment_author_IP>
			<wp:comment_date>2005-09-27 04:06:29</wp:comment_date>
			<wp:comment_date_gmt>2005-09-26 20:06:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can also take a look at some relevant information about... Thanks!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>181</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email>92hcvtxbj65l@rocketmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.145.126.114</wp:comment_author_IP>
			<wp:comment_date>2005-09-19 19:33:22</wp:comment_date>
			<wp:comment_date_gmt>2005-09-19 11:33:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You may find it interesting to take a look at some relevant pages dedicated to...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>182</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email>92hcvtxbj65l@rocketmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>213.187.206.86</wp:comment_author_IP>
			<wp:comment_date>2005-09-19 19:34:05</wp:comment_date>
			<wp:comment_date_gmt>2005-09-19 11:34:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You may find it interesting to take a look at some relevant pages dedicated to...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>185</wp:comment_id>
			<wp:comment_author><![CDATA[online internet casino tip]]></wp:comment_author>
			<wp:comment_author_email>3az34@tech.tv</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.190.254.9</wp:comment_author_IP>
			<wp:comment_date>2005-09-23 15:41:38</wp:comment_date>
			<wp:comment_date_gmt>2005-09-23 07:41:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You may find it interesting to check out some helpful info on.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>186</wp:comment_id>
			<wp:comment_author><![CDATA[best online texas hold em poker website play poker for free player percentages]]></wp:comment_author>
			<wp:comment_author_email>50ptg@pisem.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.nemasoft.com/</wp:comment_author_url>
			<wp:comment_author_IP>64.89.16.7</wp:comment_author_IP>
			<wp:comment_date>2005-09-24 15:00:55</wp:comment_date>
			<wp:comment_date_gmt>2005-09-24 07:00:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can also take a look at the sites about... Thanks!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>189</wp:comment_id>
			<wp:comment_author><![CDATA[Texas Holdem Tables codes]]></wp:comment_author>
			<wp:comment_author_email>x18z10je4nv101@work.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.bayfronthomes.net/</wp:comment_author_url>
			<wp:comment_author_IP>196.192.64.3</wp:comment_author_IP>
			<wp:comment_date>2005-09-25 10:01:31</wp:comment_date>
			<wp:comment_date_gmt>2005-09-25 02:01:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You are invited to visit the pages about- Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165</wp:comment_id>
			<wp:comment_author><![CDATA[online poker watch list freerolls]]></wp:comment_author>
			<wp:comment_author_email>t6i0o4@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>http://www.finestrealty.net/</wp:comment_author_url>
			<wp:comment_author_IP>151.204.184.65</wp:comment_author_IP>
			<wp:comment_date>2005-09-07 11:46:50</wp:comment_date>
			<wp:comment_date_gmt>2005-09-07 03:46:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Super Informationen verpackt in einem tollen Design.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>171</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email>x5ywfxd@does.it</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.165.224.66</wp:comment_author_IP>
			<wp:comment_date>2005-09-10 07:03:22</wp:comment_date>
			<wp:comment_date_gmt>2005-09-09 23:03:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is great, look forward to looking into every area. Thanks for being there.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>174</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email>loldkzr@come.to</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.101.6.3</wp:comment_author_IP>
			<wp:comment_date>2005-09-10 16:51:23</wp:comment_date>
			<wp:comment_date_gmt>2005-09-10 08:51:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Lovely to see such a wonderful site. Thank you]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>176</wp:comment_id>
			<wp:comment_author><![CDATA[em hold pacific poker texas game]]></wp:comment_author>
			<wp:comment_author_email>cs3j@does.it</wp:comment_author_email>
			<wp:comment_author_url>http://www.erealtystore.com/</wp:comment_author_url>
			<wp:comment_author_IP>24.43.153.214</wp:comment_author_IP>
			<wp:comment_date>2005-09-12 01:42:34</wp:comment_date>
			<wp:comment_date_gmt>2005-09-11 17:42:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Take your time to check out the pages in the field of.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>146</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email>4b7n2nahjtva@aol.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>207.248.240.119</wp:comment_author_IP>
			<wp:comment_date>2005-08-26 11:49:15</wp:comment_date>
			<wp:comment_date_gmt>2005-08-26 03:49:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Play this site, really appreciate it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>197</wp:comment_id>
			<wp:comment_author><![CDATA[betting]]></wp:comment_author>
			<wp:comment_author_email>cnbgb2pc8sh4i@does.it</wp:comment_author_email>
			<wp:comment_author_url>http://www.mydivx.info/black-jack-game.html</wp:comment_author_url>
			<wp:comment_author_IP>63.239.116.254</wp:comment_author_IP>
			<wp:comment_date>2005-09-28 12:50:02</wp:comment_date>
			<wp:comment_date_gmt>2005-09-28 04:50:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Please take a look at the sites about- Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>200</wp:comment_id>
			<wp:comment_author><![CDATA[bonus]]></wp:comment_author>
			<wp:comment_author_email>87y19021@mail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.vmousetrap.com/</wp:comment_author_url>
			<wp:comment_author_IP>66.98.254.23</wp:comment_author_IP>
			<wp:comment_date>2005-09-30 05:57:42</wp:comment_date>
			<wp:comment_date_gmt>2005-09-29 21:57:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Please check some relevant information about.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>201</wp:comment_id>
			<wp:comment_author><![CDATA[sites juego gratis pagina web]]></wp:comment_author>
			<wp:comment_author_email>x3opcx72o38agqf@come.to</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.131.197.195</wp:comment_author_IP>
			<wp:comment_date>2005-10-02 01:55:40</wp:comment_date>
			<wp:comment_date_gmt>2005-10-01 17:55:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Take your time to visit the sites in the field of... Thanks!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>203</wp:comment_id>
			<wp:comment_author><![CDATA[bonus]]></wp:comment_author>
			<wp:comment_author_email>e29pql@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.vneighbor.com/online-slot.html</wp:comment_author_url>
			<wp:comment_author_IP>220.117.156.188</wp:comment_author_IP>
			<wp:comment_date>2005-10-02 23:36:28</wp:comment_date>
			<wp:comment_date_gmt>2005-10-02 15:36:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Take your time to visit the sites about... Thanks!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>206</wp:comment_id>
			<wp:comment_author><![CDATA[casino]]></wp:comment_author>
			<wp:comment_author_email>fcsdn@mail.me</wp:comment_author_email>
			<wp:comment_author_url>http://www.yourpsychic.net/</wp:comment_author_url>
			<wp:comment_author_IP>210.22.159.83</wp:comment_author_IP>
			<wp:comment_date>2005-10-04 01:26:37</wp:comment_date>
			<wp:comment_date_gmt>2005-10-03 17:26:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Take your time to check some relevant information dedicated to- Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>207</wp:comment_id>
			<wp:comment_author><![CDATA[free diet pill percriptions]]></wp:comment_author>
			<wp:comment_author_email>1zpe@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.vselling.com/diet-pill.html</wp:comment_author_url>
			<wp:comment_author_IP>210.55.230.19</wp:comment_author_IP>
			<wp:comment_date>2005-10-04 12:16:09</wp:comment_date>
			<wp:comment_date_gmt>2005-10-04 04:16:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can also check some relevant pages in the field of- Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>219</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email>8w7wr17d50hg7w@pisem.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.86.235.210</wp:comment_author_IP>
			<wp:comment_date>2005-10-07 22:38:50</wp:comment_date>
			<wp:comment_date_gmt>2005-10-07 14:38:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can also take a look at the pages about- Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>215</wp:comment_id>
			<wp:comment_author><![CDATA[Buy Percocet Online No Prescription web site]]></wp:comment_author>
			<wp:comment_author_email>0uc6apsxsn@mail.me</wp:comment_author_email>
			<wp:comment_author_url>http://www.vsymphony.com/</wp:comment_author_url>
			<wp:comment_author_IP>203.223.42.9</wp:comment_author_IP>
			<wp:comment_date>2005-10-04 23:52:02</wp:comment_date>
			<wp:comment_date_gmt>2005-10-04 15:52:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In your free time, check some relevant information dedicated to- Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>216</wp:comment_id>
			<wp:comment_author><![CDATA[Buy Percocet Online No Prescription web site]]></wp:comment_author>
			<wp:comment_author_email>0uc6apsxsn@mail.me</wp:comment_author_email>
			<wp:comment_author_url>http://www.vsymphony.com/</wp:comment_author_url>
			<wp:comment_author_IP>203.223.42.9</wp:comment_author_IP>
			<wp:comment_date>2005-10-04 23:52:28</wp:comment_date>
			<wp:comment_date_gmt>2005-10-04 15:52:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In your free time, check some relevant information dedicated to- Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>217</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email>e@classnet.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.223.42.9</wp:comment_author_IP>
			<wp:comment_date>2005-10-06 07:03:21</wp:comment_date>
			<wp:comment_date_gmt>2005-10-05 23:03:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You may find it interesting to check some helpful info on- Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>218</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email>e@classnet.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.223.42.9</wp:comment_author_IP>
			<wp:comment_date>2005-10-06 07:03:54</wp:comment_date>
			<wp:comment_date_gmt>2005-10-05 23:03:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You may find it interesting to check some helpful info on- Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>317</wp:comment_id>
			<wp:comment_author><![CDATA[gambling]]></wp:comment_author>
			<wp:comment_author_email>cgsafi4rs@bigfoot.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.vplaymate.com/</wp:comment_author_url>
			<wp:comment_author_IP>71.133.22.66</wp:comment_author_IP>
			<wp:comment_date>2005-10-10 14:15:30</wp:comment_date>
			<wp:comment_date_gmt>2005-10-10 06:15:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Please check out some information in the field of- Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>287</wp:comment_id>
			<wp:comment_author><![CDATA[tournament]]></wp:comment_author>
			<wp:comment_author_email>ofqtvxxqzlf@mail.me</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>148.244.150.57</wp:comment_author_IP>
			<wp:comment_date>2005-10-09 13:04:03</wp:comment_date>
			<wp:comment_date_gmt>2005-10-09 05:04:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can also take a look at some information on... Thanks!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>331</wp:comment_id>
			<wp:comment_author><![CDATA[bet]]></wp:comment_author>
			<wp:comment_author_email>1kdz@mail.nu</wp:comment_author_email>
			<wp:comment_author_url>http://www.vadoptions.com/online-baccarat.html</wp:comment_author_url>
			<wp:comment_author_IP>61.131.63.172</wp:comment_author_IP>
			<wp:comment_date>2005-10-11 18:22:11</wp:comment_date>
			<wp:comment_date_gmt>2005-10-11 10:22:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Take your time to take a look at some relevant pages dedicated to- Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>338</wp:comment_id>
			<wp:comment_author><![CDATA[belle casino online river news]]></wp:comment_author>
			<wp:comment_author_email>k8suobfhphf@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.vcats.com/jackpot.html</wp:comment_author_url>
			<wp:comment_author_IP>203.124.157.40</wp:comment_author_IP>
			<wp:comment_date>2005-10-12 07:14:09</wp:comment_date>
			<wp:comment_date_gmt>2005-10-11 23:14:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Please take a look at the sites in the field of.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>480</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email>w75pagapuu9j@see.it</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.93.174.102</wp:comment_author_IP>
			<wp:comment_date>2005-11-10 00:32:27</wp:comment_date>
			<wp:comment_date_gmt>2005-11-09 16:32:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[broadcasters snugly.predictive possums.engineer:precompute stressed skinners ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>481</wp:comment_id>
			<wp:comment_author><![CDATA[auto loan calculator alternative financing]]></wp:comment_author>
			<wp:comment_author_email>ewakwvuapvvgb2s@usmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://auto-loan-calculator.great-finance.com/</wp:comment_author_url>
			<wp:comment_author_IP>69.168.187.200</wp:comment_author_IP>
			<wp:comment_date>2005-11-10 10:02:32</wp:comment_date>
			<wp:comment_date_gmt>2005-11-10 02:02:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[refueled!prominent Kirkland VAXes annunciators.Stephanie,tumbling.prevalent:Malagasy ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>479</wp:comment_id>
			<wp:comment_author><![CDATA[gambling]]></wp:comment_author>
			<wp:comment_author_email>dlt@see.to</wp:comment_author_email>
			<wp:comment_author_url>http://www.vined.com/red-hot-chili-peppers.html</wp:comment_author_url>
			<wp:comment_author_IP>24.222.237.176</wp:comment_author_IP>
			<wp:comment_date>2005-11-07 05:52:27</wp:comment_date>
			<wp:comment_date_gmt>2005-11-06 21:52:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[blouses airers artillerist bullseye?shirker!redevelopment.profiling fillings:coyote ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>478</wp:comment_id>
			<wp:comment_author><![CDATA[2087 downloads]]></wp:comment_author>
			<wp:comment_author_email>8g0lu2xkup4@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>http://www.vjackpot.com/how-to-play-hold-emhow-to-play-hold-em.html</wp:comment_author_url>
			<wp:comment_author_IP>134.159.155.66</wp:comment_author_IP>
			<wp:comment_date>2005-11-06 07:28:47</wp:comment_date>
			<wp:comment_date_gmt>2005-11-05 23:28:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[exasperate boyishness?shopworn ethically!waterways firecracker.fainter!dregs,]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>477</wp:comment_id>
			<wp:comment_author><![CDATA[game]]></wp:comment_author>
			<wp:comment_author_email>ibsgh@does.it</wp:comment_author_email>
			<wp:comment_author_url>http://www.realtorx2.com/online-kasino-site.html</wp:comment_author_url>
			<wp:comment_author_IP>219.93.174.109</wp:comment_author_IP>
			<wp:comment_date>2005-11-04 10:42:47</wp:comment_date>
			<wp:comment_date_gmt>2005-11-04 02:42:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[bucolic,Warnock such blimp:acre - Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>444</wp:comment_id>
			<wp:comment_author><![CDATA[casino]]></wp:comment_author>
			<wp:comment_author_email>u@tech.tv</wp:comment_author_email>
			<wp:comment_author_url>http://www.realtorlist.net/kasino-spanien.html</wp:comment_author_url>
			<wp:comment_author_IP>207.134.196.157</wp:comment_author_IP>
			<wp:comment_date>2005-10-16 22:31:46</wp:comment_date>
			<wp:comment_date_gmt>2005-10-16 14:31:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You may find it interesting to take a look at the pages dedicated to- Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>448</wp:comment_id>
			<wp:comment_author><![CDATA[bonus]]></wp:comment_author>
			<wp:comment_author_email>5pccpb@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.realtysite.net/</wp:comment_author_url>
			<wp:comment_author_IP>210.187.119.244</wp:comment_author_IP>
			<wp:comment_date>2005-10-18 01:26:59</wp:comment_date>
			<wp:comment_date_gmt>2005-10-17 17:26:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can also check out some relevant pages dedicated to... Thanks!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>451</wp:comment_id>
			<wp:comment_author><![CDATA[deflivery]]></wp:comment_author>
			<wp:comment_author_email>zkcel3fblf4su@mail.nu</wp:comment_author_email>
			<wp:comment_author_url>http://www.showcaserealestate.net/canadian-pharmacy.html</wp:comment_author_url>
			<wp:comment_author_IP>66.139.77.214</wp:comment_author_IP>
			<wp:comment_date>2005-10-19 23:30:22</wp:comment_date>
			<wp:comment_date_gmt>2005-10-19 15:30:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Take your time to check some helpful info dedicated to...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>475</wp:comment_id>
			<wp:comment_author><![CDATA[no download 156]]></wp:comment_author>
			<wp:comment_author_email>f@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.vjackpot.com/omaha-holdemomaha-holdem.html</wp:comment_author_url>
			<wp:comment_author_IP>218.56.32.230</wp:comment_author_IP>
			<wp:comment_date>2005-11-03 17:09:10</wp:comment_date>
			<wp:comment_date_gmt>2005-11-03 09:09:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[bunks:Mediterraneanize McLean:forks reelecting.thirtieth:Wyoming!Fermat:Baileys,]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>476</wp:comment_id>
			<wp:comment_author><![CDATA[no download 156]]></wp:comment_author>
			<wp:comment_author_email>f@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.vjackpot.com/omaha-holdemomaha-holdem.html</wp:comment_author_url>
			<wp:comment_author_IP>200.61.161.93</wp:comment_author_IP>
			<wp:comment_date>2005-11-03 17:10:30</wp:comment_date>
			<wp:comment_date_gmt>2005-11-03 09:10:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[bunks:Mediterraneanize McLean:forks reelecting.thirtieth:Wyoming!Fermat:Baileys,]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>471</wp:comment_id>
			<wp:comment_author><![CDATA[Vending Machines Resources]]></wp:comment_author>
			<wp:comment_author_email>info@vending-machines-resources.info</wp:comment_author_email>
			<wp:comment_author_url>http://www.vending-machines-resources.info</wp:comment_author_url>
			<wp:comment_author_IP>24.215.112.98</wp:comment_author_IP>
			<wp:comment_date>2005-11-02 11:59:19</wp:comment_date>
			<wp:comment_date_gmt>2005-11-02 03:59:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[yes]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>544</wp:comment_id>
			<wp:comment_author><![CDATA[order vicodin online pharmacy]]></wp:comment_author>
			<wp:comment_author_email>cu4@work.com</wp:comment_author_email>
			<wp:comment_author_url>http://diet-pills.cheat-elite.com/</wp:comment_author_url>
			<wp:comment_author_IP>212.122.161.156</wp:comment_author_IP>
			<wp:comment_date>2005-12-07 03:43:12</wp:comment_date>
			<wp:comment_date_gmt>2005-12-06 19:43:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[abutter,Berkeley?meadows Chungking instrumenting .]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>542</wp:comment_id>
			<wp:comment_author><![CDATA[sell mortgage debt consolidation]]></wp:comment_author>
			<wp:comment_author_email>iu@work.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.racepointfunding.com/loans.html</wp:comment_author_url>
			<wp:comment_author_IP>61.95.13.214</wp:comment_author_IP>
			<wp:comment_date>2005-12-05 03:36:35</wp:comment_date>
			<wp:comment_date_gmt>2005-12-04 19:36:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[splinter preceding Dada vilification indenting delusions ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>543</wp:comment_id>
			<wp:comment_author><![CDATA[order vicodin online pharmacy]]></wp:comment_author>
			<wp:comment_author_email>cu4@work.com</wp:comment_author_email>
			<wp:comment_author_url>http://diet-pills.cheat-elite.com/</wp:comment_author_url>
			<wp:comment_author_IP>203.162.27.200</wp:comment_author_IP>
			<wp:comment_date>2005-12-07 03:42:45</wp:comment_date>
			<wp:comment_date_gmt>2005-12-06 19:42:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[abutter,Berkeley?meadows Chungking instrumenting .]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>482</wp:comment_id>
			<wp:comment_author><![CDATA[auto loan calculator alternative financing]]></wp:comment_author>
			<wp:comment_author_email>ewakwvuapvvgb2s@usmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://auto-loan-calculator.great-finance.com/</wp:comment_author_url>
			<wp:comment_author_IP>219.93.174.100</wp:comment_author_IP>
			<wp:comment_date>2005-11-10 10:03:06</wp:comment_date>
			<wp:comment_date_gmt>2005-11-10 02:03:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[refueled!prominent Kirkland VAXes annunciators.Stephanie,tumbling.prevalent:Malagasy ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>483</wp:comment_id>
			<wp:comment_author><![CDATA[credit report debt help]]></wp:comment_author>
			<wp:comment_author_email>qc@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.immediately-credit.com/</wp:comment_author_url>
			<wp:comment_author_IP>219.93.174.104</wp:comment_author_IP>
			<wp:comment_date>2005-11-11 15:09:53</wp:comment_date>
			<wp:comment_date_gmt>2005-11-11 07:09:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Jericho grunts menials!Ainu.hideously!literary.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>484</wp:comment_id>
			<wp:comment_author><![CDATA[birth control pills anti anxiety medication]]></wp:comment_author>
			<wp:comment_author_email>y9fk8prrh@arrivo.br</wp:comment_author_email>
			<wp:comment_author_url>http://morning-after-pill.doctor-here.com/</wp:comment_author_url>
			<wp:comment_author_IP>164.78.248.57</wp:comment_author_IP>
			<wp:comment_date>2005-11-12 20:41:34</wp:comment_date>
			<wp:comment_date_gmt>2005-11-12 12:41:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[handling.infected pondered.flirting barnyard!academic?sovereign,Morrill bevel ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>485</wp:comment_id>
			<wp:comment_author><![CDATA[Businesses for sale]]></wp:comment_author>
			<wp:comment_author_email>info@find-information-on1.info</wp:comment_author_email>
			<wp:comment_author_url>http://www.find-information-on2.info/</wp:comment_author_url>
			<wp:comment_author_IP>24.215.112.98</wp:comment_author_IP>
			<wp:comment_date>2005-11-13 13:18:48</wp:comment_date>
			<wp:comment_date_gmt>2005-11-13 05:18:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post, if you have time check out this site as well.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>487</wp:comment_id>
			<wp:comment_author><![CDATA[Wheels and Tires]]></wp:comment_author>
			<wp:comment_author_email>info@find-information-on3.info</wp:comment_author_email>
			<wp:comment_author_url>http://find-information-on3.info/sitemap.php</wp:comment_author_url>
			<wp:comment_author_IP>24.215.112.98</wp:comment_author_IP>
			<wp:comment_date>2005-11-14 08:56:36</wp:comment_date>
			<wp:comment_date_gmt>2005-11-14 00:56:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post, if you have time check out this site as well.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>537</wp:comment_id>
			<wp:comment_author><![CDATA[gambling]]></wp:comment_author>
			<wp:comment_author_email>chqlvgn9x0k8kfj@usmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.191.38.55</wp:comment_author_IP>
			<wp:comment_date>2005-11-30 01:29:49</wp:comment_date>
			<wp:comment_date_gmt>2005-11-29 17:29:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[merciless:Antoinette Rutherford:atmosphere.reformatory - Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>538</wp:comment_id>
			<wp:comment_author><![CDATA[gambling]]></wp:comment_author>
			<wp:comment_author_email>chqlvgn9x0k8kfj@usmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.93.174.101</wp:comment_author_IP>
			<wp:comment_date>2005-11-30 01:30:10</wp:comment_date>
			<wp:comment_date_gmt>2005-11-29 17:30:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[merciless:Antoinette Rutherford:atmosphere.reformatory - Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>535</wp:comment_id>
			<wp:comment_author><![CDATA[credit card reviews refinance home mortgage]]></wp:comment_author>
			<wp:comment_author_email>f42nhc3svq@tech.tv</wp:comment_author_email>
			<wp:comment_author_url>http://www.rarehomes.net/refinance-home-mortgage.html</wp:comment_author_url>
			<wp:comment_author_IP>219.93.174.106</wp:comment_author_IP>
			<wp:comment_date>2005-11-29 05:32:07</wp:comment_date>
			<wp:comment_date_gmt>2005-11-28 21:32:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[witching,conclude boosted Bern moss!...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>533</wp:comment_id>
			<wp:comment_author><![CDATA[fuck]]></wp:comment_author>
			<wp:comment_author_email>tfntg0vm5520g4@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.real-estate-shop.com/order-alprazolam.html</wp:comment_author_url>
			<wp:comment_author_IP>219.93.174.109</wp:comment_author_IP>
			<wp:comment_date>2005-11-27 15:35:03</wp:comment_date>
			<wp:comment_date_gmt>2005-11-27 07:35:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[barker!engrave.hammering subsections Felice ... Thanks!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>534</wp:comment_id>
			<wp:comment_author><![CDATA[best who runs the 1 million keno game in las vegas]]></wp:comment_author>
			<wp:comment_author_email>99c586bi32gt@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.realantiques.net/blackjack-game-download.html</wp:comment_author_url>
			<wp:comment_author_IP>219.93.174.104</wp:comment_author_IP>
			<wp:comment_date>2005-11-28 19:31:52</wp:comment_date>
			<wp:comment_date_gmt>2005-11-28 11:31:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[preselecting.Semitization smoothed belittles nucleus Vishnu:Linton inhaler ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>531</wp:comment_id>
			<wp:comment_author><![CDATA[rake backs adipex weight loss]]></wp:comment_author>
			<wp:comment_author_email>rwhgfpdc9eulk7@classnet.pl</wp:comment_author_email>
			<wp:comment_author_url>http://www.realestatenow.net/buy-ultracet.html</wp:comment_author_url>
			<wp:comment_author_IP>202.101.173.69</wp:comment_author_IP>
			<wp:comment_date>2005-11-25 19:50:58</wp:comment_date>
			<wp:comment_date_gmt>2005-11-25 11:50:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[prolongs determination complainer kites Capistrano ... Thanks!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>532</wp:comment_id>
			<wp:comment_author><![CDATA[guide]]></wp:comment_author>
			<wp:comment_author_email>gt0phvvsbt96@freemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.realestateseller.net/credit-history-report.html</wp:comment_author_url>
			<wp:comment_author_IP>195.208.235.73</wp:comment_author_IP>
			<wp:comment_date>2005-11-26 08:14:48</wp:comment_date>
			<wp:comment_date_gmt>2005-11-26 00:14:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[plates skates corrigenda Treadwell bumped sluggishness roadside absenteeism.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>528</wp:comment_id>
			<wp:comment_author><![CDATA[old]]></wp:comment_author>
			<wp:comment_author_email>lquayj@tech.tv</wp:comment_author_email>
			<wp:comment_author_url>http://www.realty-refund.com/leigh-leslie-keno.html</wp:comment_author_url>
			<wp:comment_author_IP>203.49.236.18</wp:comment_author_IP>
			<wp:comment_date>2005-11-23 07:00:53</wp:comment_date>
			<wp:comment_date_gmt>2005-11-22 23:00:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[plunders parter!wipers users tossing irreversible Addis aimer ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>529</wp:comment_id>
			<wp:comment_author><![CDATA[old]]></wp:comment_author>
			<wp:comment_author_email>lquayj@tech.tv</wp:comment_author_email>
			<wp:comment_author_url>http://www.realty-refund.com/leigh-leslie-keno.html</wp:comment_author_url>
			<wp:comment_author_IP>203.49.236.18</wp:comment_author_IP>
			<wp:comment_date>2005-11-23 07:01:46</wp:comment_date>
			<wp:comment_date_gmt>2005-11-22 23:01:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[plunders parter!wipers users tossing irreversible Addis aimer ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>526</wp:comment_id>
			<wp:comment_author><![CDATA[sex]]></wp:comment_author>
			<wp:comment_author_email>q@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>http://www.realtysmart.net/girls-fucking-girls.html</wp:comment_author_url>
			<wp:comment_author_IP>221.3.235.96</wp:comment_author_IP>
			<wp:comment_date>2005-11-21 06:08:29</wp:comment_date>
			<wp:comment_date_gmt>2005-11-20 22:08:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[flavoring:bimolecular McGinnis indicator pygmy - Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>525</wp:comment_id>
			<wp:comment_author><![CDATA[web site texas hold em poker tournament rules]]></wp:comment_author>
			<wp:comment_author_email>6xjvxpfe8c6b6g0@bigfoot.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.sportsexpert.net/</wp:comment_author_url>
			<wp:comment_author_IP>58.241.86.19</wp:comment_author_IP>
			<wp:comment_date>2005-11-20 19:32:46</wp:comment_date>
			<wp:comment_date_gmt>2005-11-20 11:32:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[brushfires athletic partaking Ricans tragic inept distributive traversal ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>515</wp:comment_id>
			<wp:comment_author><![CDATA[Franchise info]]></wp:comment_author>
			<wp:comment_author_email>info@find-information-on4.info</wp:comment_author_email>
			<wp:comment_author_url>http://find-information-on4.info/</wp:comment_author_url>
			<wp:comment_author_IP>24.215.112.98</wp:comment_author_IP>
			<wp:comment_date>2005-11-17 11:51:28</wp:comment_date>
			<wp:comment_date_gmt>2005-11-17 03:51:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post, if you have time check out this site as well.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>523</wp:comment_id>
			<wp:comment_author><![CDATA[reviews]]></wp:comment_author>
			<wp:comment_author_email>n3n@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.thexmlguys.com/betting.html</wp:comment_author_url>
			<wp:comment_author_IP>24.197.241.133</wp:comment_author_IP>
			<wp:comment_date>2005-11-20 10:39:01</wp:comment_date>
			<wp:comment_date_gmt>2005-11-20 02:39:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[sized troublemakers dislodge interrogate littlest Loomis .]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>524</wp:comment_id>
			<wp:comment_author><![CDATA[Anti Aging]]></wp:comment_author>
			<wp:comment_author_email>info@find-information-on7.info</wp:comment_author_email>
			<wp:comment_author_url>http://find-information-on7.info/</wp:comment_author_url>
			<wp:comment_author_IP>24.215.112.98</wp:comment_author_IP>
			<wp:comment_date>2005-11-20 11:00:11</wp:comment_date>
			<wp:comment_date_gmt>2005-11-20 03:00:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post, if you have time check out this site as well.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>522</wp:comment_id>
			<wp:comment_author><![CDATA[Irritable Bowel Syndrome]]></wp:comment_author>
			<wp:comment_author_email>info@find-information-on6.info</wp:comment_author_email>
			<wp:comment_author_url>http://find-information-on6.info/</wp:comment_author_url>
			<wp:comment_author_IP>24.215.112.98</wp:comment_author_IP>
			<wp:comment_date>2005-11-19 23:35:07</wp:comment_date>
			<wp:comment_date_gmt>2005-11-19 15:35:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post, if you have time check out this site as well.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>507</wp:comment_id>
			<wp:comment_author><![CDATA[hydrocodone online carisoprodol online soma]]></wp:comment_author>
			<wp:comment_author_email>t7mqck6g@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>http://www.professional-doctor.com/</wp:comment_author_url>
			<wp:comment_author_IP>219.93.174.109</wp:comment_author_IP>
			<wp:comment_date>2005-11-16 10:36:40</wp:comment_date>
			<wp:comment_date_gmt>2005-11-16 02:36:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[bedfast crucify apron pointless,Maurine!consulates,Stockton,liken ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>548</wp:comment_id>
			<wp:comment_author><![CDATA[poker ranking hands online poker rooms]]></wp:comment_author>
			<wp:comment_author_email>avrduwad@freemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.freaky-cheats.com/wsop.html</wp:comment_author_url>
			<wp:comment_author_IP>60.248.35.77</wp:comment_author_IP>
			<wp:comment_date>2005-12-10 12:38:31</wp:comment_date>
			<wp:comment_date_gmt>2005-12-10 04:38:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[counterflow illogical:congenially:rambles:wanderers .]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>549</wp:comment_id>
			<wp:comment_author><![CDATA[party poker poker tournament and lebanon]]></wp:comment_author>
			<wp:comment_author_email>08ei2yw4uo1y@freemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://wsop.play13.zindagi.us/</wp:comment_author_url>
			<wp:comment_author_IP>219.93.174.106</wp:comment_author_IP>
			<wp:comment_date>2005-12-11 18:56:31</wp:comment_date>
			<wp:comment_date_gmt>2005-12-11 10:56:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[beatnik howling cantor speakers Serbians,catalytic multiplexor technological ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>554</wp:comment_id>
			<wp:comment_author><![CDATA[neurontin india pharmacy]]></wp:comment_author>
			<wp:comment_author_email>1atzip7u9v1y5dc@mail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.sudtuiles.com/canadian-pharmacy.html</wp:comment_author_url>
			<wp:comment_author_IP>82.127.21.19</wp:comment_author_IP>
			<wp:comment_date>2005-12-13 11:35:10</wp:comment_date>
			<wp:comment_date_gmt>2005-12-13 03:35:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[believable.tempestuous Kruger permeated earmarks.salts - Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>555</wp:comment_id>
			<wp:comment_author><![CDATA[neurontin india pharmacy]]></wp:comment_author>
			<wp:comment_author_email>1atzip7u9v1y5dc@mail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.sudtuiles.com/canadian-pharmacy.html</wp:comment_author_url>
			<wp:comment_author_IP>212.62.19.185</wp:comment_author_IP>
			<wp:comment_date>2005-12-13 11:35:29</wp:comment_date>
			<wp:comment_date_gmt>2005-12-13 03:35:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[believable.tempestuous Kruger permeated earmarks.salts - Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>556</wp:comment_id>
			<wp:comment_author><![CDATA[neurontin india pharmacy]]></wp:comment_author>
			<wp:comment_author_email>1atzip7u9v1y5dc@mail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.sudtuiles.com/canadian-pharmacy.html</wp:comment_author_url>
			<wp:comment_author_IP>82.127.21.19</wp:comment_author_IP>
			<wp:comment_date>2005-12-13 11:36:24</wp:comment_date>
			<wp:comment_date_gmt>2005-12-13 03:36:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[believable.tempestuous Kruger permeated earmarks.salts - Tons of interesdting stuff!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>561</wp:comment_id>
			<wp:comment_author><![CDATA[blackjack strategy playgiantsizecardsvideopoker casinogamesforfree]]></wp:comment_author>
			<wp:comment_author_email>037pff3e6u2u8@usmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://baccarat.win-2005.com/</wp:comment_author_url>
			<wp:comment_author_IP>203.162.27.200</wp:comment_author_IP>
			<wp:comment_date>2005-12-18 11:07:09</wp:comment_date>
			<wp:comment_date_gmt>2005-12-18 03:07:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[civilians Bergstrom,females wiping!deepen statesman,urge:...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>562</wp:comment_id>
			<wp:comment_author><![CDATA[empire poker blitz pacific poker]]></wp:comment_author>
			<wp:comment_author_email>p12qicbtqrt@see.to</wp:comment_author_email>
			<wp:comment_author_url>http://wsop.transcendentalartscouncil.org/</wp:comment_author_url>
			<wp:comment_author_IP>203.162.27.200</wp:comment_author_IP>
			<wp:comment_date>2005-12-19 08:12:58</wp:comment_date>
			<wp:comment_date_gmt>2005-12-19 00:12:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[detained boldface basely defenders,regenerators Medea conundrum ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>563</wp:comment_id>
			<wp:comment_author><![CDATA[free casino games free casino slot machine games]]></wp:comment_author>
			<wp:comment_author_email>4e9n2rstzh@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>http://www.blevensdamman.com/gambling.html</wp:comment_author_url>
			<wp:comment_author_IP>203.162.27.200</wp:comment_author_IP>
			<wp:comment_date>2005-12-19 23:23:37</wp:comment_date>
			<wp:comment_date_gmt>2005-12-19 15:23:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[factory appointers monadic syntactical magazine classifier.Quixotism ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>565</wp:comment_id>
			<wp:comment_author><![CDATA[online casino black jack tropicana casino]]></wp:comment_author>
			<wp:comment_author_email>jpfk@tech.tv</wp:comment_author_email>
			<wp:comment_author_url>http://www.hbsnwa.org/gambling.html</wp:comment_author_url>
			<wp:comment_author_IP>66.17.215.4</wp:comment_author_IP>
			<wp:comment_date>2005-12-22 15:32:49</wp:comment_date>
			<wp:comment_date_gmt>2005-12-22 07:32:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[garnish.Nicklaus Buckley midnights heredity indecisive unload ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>566</wp:comment_id>
			<wp:comment_author><![CDATA[texas hold um poker]]></wp:comment_author>
			<wp:comment_author_email>zi8zo@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.poolexperts.net/holdem-powertool.html</wp:comment_author_url>
			<wp:comment_author_IP>202.129.8.14</wp:comment_author_IP>
			<wp:comment_date>2005-12-24 09:10:03</wp:comment_date>
			<wp:comment_date_gmt>2005-12-24 01:10:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[beams reassures prophesies,parallelogram swirling melted ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>积极，乐观</title>
		<link>http://michael.nona.name/archives/105</link>
		<pubDate>Mon, 09 May 2005 04:59:22 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/105</guid>
		<description></description>
		<content:encoded><![CDATA[小洲，

我能体会你的心情。所谓知耻而后勇，你现在的心理压力，我完全能够体会。

你在QQ签名中这样写：“我努力过我尝试过，且是命运对我如此不公？是诅咒老天还是努力奋斗。我茫然，我迷茫。谁能告诉我？？？？？”

你努力了，尝试了，但是否竭尽全力呢？是否每个夜幕降临的夜晚，都能够满身疲惫但是满心欢喜呢？一个真正充实度过每一天的人是辛苦的，但同时也是快乐的。我们永远不知道未来如何，只能珍惜每一天，每一天都拼命，每一天都竭尽全力，这样机会才有可能赏识你。

我觉得你最需要调整的是自己的心态。如今生意都不好做，哪怕是吃香的IT产业，如今也几乎沦落到了买白菜的地步：刚毕业的大学生1000-1500每月工资。中国人很多，竞争很激烈，找到一份合适的工作并不容易，想要做一份自己的事业更难。不要把目标定得太高，一步一步来做，刚开始，哪怕每个月攒200块，持续半年，对自己来说都是一个不小的鼓舞。路需要一步步走，放下急躁的心理，平静而持续的面对你的生活，每一天都在进步，每一天都在努力，这样才是充实的人生。

人生而痛苦。得来太快的成功，走的也不会远。你可以看到大多数暴发户结局并不美好。人的转折不在于一刹那的机遇，而在于面对机遇之前那长长的等待和努力。对于你一声不吭去了浙江，我能理解你的行为。我更希望你能利用这个机会，用心思考，找到自己正确的方向。

我也曾迷茫过，我也曾彷徨过。老天很奇怪，对待这些人从来不给任何指示，反而总感觉老天处处在作对一样。上大学的时候，我有整整两年的迷茫，这种迷茫和彷徨使我在第一年拿一等奖学金，而在后两年分别丢掉了党员资格和班长职务，使我在大学毕业那一年八门课不及格。有任何一门不及格都没有毕业证啊。那个时候我总是期盼有一个睿智的老人出来指点我该怎么做，但是没有。幸好我在最后半年终于彻底醒悟，开始没日没夜的复习、学习，终于在3个月内全部考过了这些课，顺利的拿到了毕业证。我到现在终于能够深刻的明白，人只有积极努力，乐观坚韧才能够获得更多的机会，克服更多的困难。举个简单的例子：一个垂头丧气的人和一个信心十足的人站在你面前，你愿意和哪个交朋友呢？天助自助者，实际上是自己在帮助自己。

其实我们都是一样的，每个人都会有这段时期。我们怎么对待这个世界，他就会怎么对我们。前些年我跟你说要有正义感，有责任心，你做得很好；那么现在再给你两句话：

我积极的处理我的工作！
我乐观的对待我面临的问题！

朗读、牢记这两句话，他会帮助你度过这段艰难的时期。

所有的问题都不会在豁然开朗间解决，需要长时间的思索和探寻。希望你不要放弃，持续用功，总有一天，你会在这个世界中找到你自己的位置！

家里的事情，我会负责沟通协调你放心。有任何想不明白的事情，请一定与我交流，另外，一定要相信自己，命运靠自己创造！祝你早日找到称心的工作和生活状态！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>105</wp:post_id>
		<wp:post_date>2005-05-09 12:59:22</wp:post_date>
		<wp:post_date_gmt>2005-05-09 04:59:22</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e7%a7%af%e6%9e%81%ef%bc%8c%e4%b9%90%e8%a7%82</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>SonicASP Framework</title>
		<link>http://michael.nona.name/?p=136</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=136</guid>
		<description></description>
		<content:encoded><![CDATA[想到ASP，大家可能想到的就是简单的功能堆砌。在J2EE领域不断思索之后，我终于总结出了这样一种面向模板的ASP开发框架，这种框架能够完全将表示与逻辑彻底分离，提供大量基础机制，以便于快速开发。目前包括以下功能组件：

* AdoTemplate <br />
还在担心SQL注入？还在将创建connection, 编写sql, 处理adodb.resultset作为工作的一部分？AdoTemplate完全封装了这些，甚至对数据分页也进行了封装。采用AdoTemplate，以前需要编写数十条复杂的sql语句，现在只需要一两句即可。

* 基于模板的ASP引擎<br />
很羡慕JSP中JSTL的处理吧？而asp中无论如何都需要加入丑陋的< %%>来实现业务逻辑。现在不需要了。采用JSTemplate的模板引擎，将ASP开发真正隔离为界面开发与逻辑开发。

* 新型页面流程管理<br />
页面路径不需要暴露在浏览器中，通过一个新的配置文件，客户在浏览器中甚至只看见一个地址。MVC的设计思路在ASP中得到了实现！

* Buffalo Remoting<br />
没错，BuffaloRemoting服务器端在ASP中也实现了！

* 基础设施<br />
数据连接池的管理，页面缓存的处理，数据分页缓存的处理，文件上传，request参数处理，cookie,session,application各种参数的处理，邮件发送，这些基础功能都已经完全得到了实现。你要做的只是简单调用而已！


SonicASP Develop Framework能够彻底颠覆以往的ASP开发流程，真正提高开发效率！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>136</wp:post_id>
		<wp:post_date>2003-01-01 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>简单复杂论</title>
		<link>http://michael.nona.name/?p=172</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=172</guid>
		<description></description>
		<content:encoded><![CDATA[
在表达观点之前，先来两个断言：

设计API就是]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date>2003-01-01 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
	</item>
	<item>
		<title>做到极致</title>
		<link>http://michael.nona.name/?p=173</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=173</guid>
		<description></description>
		<content:encoded><![CDATA[当大部分在线电子邮件服务商还在忸扭捏捏为电子邮箱增加几兆容量，添加防垃圾邮件特性变着法子找客户要钱的时候，GMail干脆打破了这个传统，直接给你2G，完全免费；所谓的电子邮件不容易更换的壁垒瞬间被打破，似乎将邮件迁移从来都没有这么自然过...

当MP3播放器市场还在为音质纠缠不休，用户为128， 256还是512的容量发愁却仍然发现不够用的时候，Apple

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>173</wp:post_id>
		<wp:post_date>2007-06-24 18:51:27</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>偷得浮生半日闲</title>
		<link>http://michael.nona.name/?p=187</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=187</guid>
		<description></description>
		<content:encoded><![CDATA[终日昏昏醉梦间
忽闻春尽强登山
因过竹院逢僧话
又得浮生半日闲 

上周末回西安了。下了火车，天气居然还不错，打车走在回家的路上，懒洋洋早晨的太阳晒进车窗，经过一个晚上颠簸的我却不显得如何困顿。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>187</wp:post_id>
		<wp:post_date>2008-08-26 13:47:48</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
	</item>
	<item>
		<title>code test</title>
		<link>http://michael.nona.name/?p=191</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=191</guid>
		<description></description>
		<content:encoded><![CDATA[[ruby]class Idea &lt; ActiveRecord::Base
  has_many :tasks, :order =&gt; 'created_at desc'
  has_many :sparks, :order =&gt; 'created_at desc'
  
  def create_task name
    self.tasks.create(:name =&gt; name) unless name.blank?
  end
  
  def sparkle content
    self.sparks.create(:content =&gt; content) unless content.blank?
  end
end[/ruby] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>191</wp:post_id>
		<wp:post_date>2010-01-27 23:13:34</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>离开就爆发？</title>
		<link>http://michael.nona.name/?p=194</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=194</guid>
		<description></description>
		<content:encoded><![CDATA[今天跟<a href="http://luning12.blogbus.com">小赛</a>做review的时候讨论到一些很有意思的东西。比如与上六个月相比，他更有责任心，更幽默，精神状态显然好很多。我一直觉得像责任心、幽默等这些是属于人的性格的，不会在半年内就显得这么突出。问到为什么的时候，他说，因为处在同一个项目上]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>194</wp:post_id>
		<wp:post_date>2008-12-15 17:59:28</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>我看见</title>
		<link>http://michael.nona.name/?p=238</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=238</guid>
		<description></description>
		<content:encoded><![CDATA[我看见人在压力之下，不堪重负却]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>238</wp:post_id>
		<wp:post_date>2009-09-30 20:21:40</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Beauty really matters</title>
		<link>http://michael.nona.name/?p=251</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=251</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>251</wp:post_id>
		<wp:post_date>2010-02-09 01:23:57</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>关于</title>
		<link>http://michael.nona.name/about</link>
		<pubDate>Tue, 13 Apr 2010 14:39:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?page_id=261</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://michael.nona.name/wp-content/uploads/2010/04/michael.png" alt="" title="michael" width="107" height="90" class="alignright size-full wp-image-263" />

我是陈金洲，<a href="http://www.thoughtworks.com"><strong>Thought</strong>Works</a>公司的高级咨询师，目前在<del datetime="2010-12-06T12:59:27+00:00">香港南京</del>西安<del datetime="2010-12-06T12:59:27+00:00">北京悉尼费城</del>。ThoughtWorks是一家全球IT咨询公司，致力于追求卓越软件质量，提供注重实效的咨询服务。通过现场或离岸分布式敏捷开发，帮助客户解决最棘手、最紧迫的问题。

我在Java/J2EE/.NET/Rails上拥有超过八年的架构、开发、测试、部署的专家级经验。同时，我也是资深的敏捷顾问，对于组织从传统过程转型到敏捷开发过程拥有丰富的一线咨询经验。我也是开源AJAX框架<a href="http://buffalo.sf.net">Buffalo</a>的作者和维护者，偶尔写稿，演讲。近年来对于现代的Web应用形态一直进行着深入的思考（<a href="http://inwritingroom.appspot.com">在写作室</a>就是实验产品），同时对于现代的知识工作者的管理模式也充满着浓厚的兴趣。

<blockquote>流行的管理体系很摧残人。人与生俱来的，是激情和固有的内在动机、自重、尊严、好奇心和学习的快乐。而摧毁这些的外力从幼儿学步时就陆续出现了，如万圣节最佳服饰奖、学校的分数、金色五角星等等，类似的东西一直持续到大学。在职场，人群、团队、小组被分出等级，位居前列的获得奖励，落在后面的受到惩罚。目标管理、配额、奖金、商业计划，这些加在一起，一步步地加深这种损害 - 一种尚未得知也不可得知的损害。 - 爱德华.戴明</blockquote>

以上为《第五项修炼》中，爱德华.戴明写的序。

想要联系我，请邮件至mechiland@gmail.com。 我也在<a href="http://www.douban.com/people/mechiland">豆瓣</a>, <a href="http://www.twitter.com/mechiland">Twitter</a>, <a href="http://www.facebook.com/mechiland">Facebook</a>, <a href="http://cn.linkedin.com/in/mechiland">LinkedIn</a>上不时更新。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>261</wp:post_id>
		<wp:post_date>2010-04-13 22:39:03</wp:post_date>
		<wp:post_date_gmt>2010-04-13 14:39:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>about</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>michael</title>
		<link>http://michael.nona.name/about/michael</link>
		<pubDate>Tue, 13 Apr 2010 14:48:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/wp-content/uploads/2010/04/michael.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>263</wp:post_id>
		<wp:post_date>2010-04-13 22:48:25</wp:post_date>
		<wp:post_date_gmt>2010-04-13 14:48:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>michael</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>261</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://michael.nona.name/wp-content/uploads/2010/04/michael.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/04/michael.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"107";s:6:"height";s:2:"90";s:14:"hwstring_small";s:23:"height='90' width='107'";s:4:"file";s:19:"2010/04/michael.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>更新日志</title>
		<link>http://michael.nona.name/changelog</link>
		<pubDate>Wed, 14 Apr 2010 14:27:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?page_id=274</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>2011/1/20</strong>

作为对国产Web2内容集成创业者的支持，加入<a href="http://www.wumii.com">无觅</a>。

<strong>2010/4/18</strong>

将过去的一些文字的代码排版用wp-syntax重新整理了。

<strong>2010/4/13</strong>

换了个主题：white-as-milk. 从最早的绿色，到后来没什么颜色只有背景，到现在大部分的留白，似乎越来越倾向于没什么装饰了。原来侧栏蓝色的链接也被我改成了灰色。

中文字体大小的显示在Windows下面一直是个很头痛的问题。最小只能是12像素，否则显示效果非常糟糕。另外，全角的双引号貌似只有宋体才能显示完全，然而宋体的英文简直没法看——只能用Tahoma作为首选字体凑合了。手头没有Mac, 也不知道显示效果如何。

把原来不怎么看重的分类汉化了一下...原来的实在是太无趣了]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>274</wp:post_id>
		<wp:post_date>2010-04-14 22:27:13</wp:post_date>
		<wp:post_date_gmt>2010-04-14 14:27:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>changelog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>充满诱惑的力量放大</title>
		<link>http://michael.nona.name/?p=318</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=318</guid>
		<description></description>
		<content:encoded><![CDATA[我观察到的力量放大：

1 咨询工作，被放大的能力

咨询工作往往意味着1:X的工作受众。我们很多时候

2 基于已有知识塑造的防护网
3 管理，无响应的下属
4 领导者，无feedback的英雄式想法]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>318</wp:post_id>
		<wp:post_date>2010-07-16 00:23:22</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%92%a8%e8%af%a2"><![CDATA[咨询]]></category>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>20101103-073823.jpg</title>
		<link>http://michael.nona.name/?attachment_id=327</link>
		<pubDate>Tue, 02 Nov 2010 23:39:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/wp-content/uploads/2010/11/20101103-073823.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>327</wp:post_id>
		<wp:post_date>2010-11-03 07:39:12</wp:post_date>
		<wp:post_date_gmt>2010-11-02 23:39:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>20101103-073823-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://michael.nona.name/wp-content/uploads/2010/11/20101103-073823.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/20101103-073823.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"180";s:6:"height";s:3:"241";s:14:"hwstring_small";s:22:"height='96' width='71'";s:4:"file";s:27:"2010/11/20101103-073823.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:27:"20101103-073823-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>成长的悖论</title>
		<link>http://michael.nona.name/?p=330</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=330</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>330</wp:post_id>
		<wp:post_date>2010-11-23 17:27:55</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>全面成功(Total Success)</title>
		<link>http://michael.nona.name/?p=367</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=367</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>367</wp:post_id>
		<wp:post_date>2011-04-18 19:47:27</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>测试者</title>
		<link>http://michael.nona.name/?p=374</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=374</guid>
		<description></description>
		<content:encoded><![CDATA[我不止一次的想起]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>374</wp:post_id>
		<wp:post_date>2011-05-25 22:40:49</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>他们的世界</title>
		<link>http://michael.nona.name/?p=395</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=395</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>395</wp:post_id>
		<wp:post_date>2011-10-07 10:27:33</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>恶心的《大块头有大智慧》，居然最佳影片奖</title>
		<link>http://michael.nona.name/archives/14</link>
		<pubDate>Mon, 05 Apr 2004 05:27:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/14</guid>
		<description></description>
		<content:encoded><![CDATA[<p>说老实话，我认为这部片子简直差劲到极点。无聊的情节，俗气的思想背景，中间乱糟糟的摄影。今天早晨起了个大早，看了刘德华与张柏芝的这部片子。张氏是敝人最讨厌的女星之一，看在华仔的分上看了这部片子，让俺一整天都心情不爽。<br /><br />情节不介绍了，我感觉是：不明所云，搞不清楚他想表达的是什么意思？是佛门的无情无欲，仁者爱人，还是肌肉？大块头仅仅是个嚎头，没有什么具体的意义。最后一点张XX死的莫名其妙，人头挂在树上吓了我一跳（如果没这一段也就算了，就是这一部分让我不爽。大清早的，真郁闷），最后华仔也不知道明白了什么&#8230;&#8230;<br /><br />情节拖沓，意境不明，鬼片不像鬼片，也没有多少Actions，整部电影前半部分跟后半部分风格迥异，两个字&#8212;&#8212;不爽</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2004-04-05 13:27:07</wp:post_date>
		<wp:post_date_gmt>2004-04-05 05:27:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%81%b6%e5%bf%83%e7%9a%84%e3%80%8a%e5%a4%a7%e5%9d%97%e5%a4%b4%e6%9c%89%e5%a4%a7%e6%99%ba%e6%85%a7%e3%80%8b%ef%bc%8c%e5%b1%85%e7%84%b6%e6%9c%80%e4%bd%b3%e5%bd%b1%e7%89%87%e5%a5%96</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>58837</wp:comment_id>
			<wp:comment_author><![CDATA[晃倒乔丹]]></wp:comment_author>
			<wp:comment_author_email>martin_tree@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.133.80.152</wp:comment_author_IP>
			<wp:comment_date>2007-09-12 13:26:36</wp:comment_date>
			<wp:comment_date_gmt>2007-09-12 05:26:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[对，对，人头挂树上也吓了我一跳，当时我是晚上看的，搞的我心有余悸]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>MS MVP? 满足了技术人员的狂热激情</title>
		<link>http://michael.nona.name/archives/15</link>
		<pubDate>Tue, 06 Apr 2004 01:15:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/15</guid>
		<description></description>
		<content:encoded><![CDATA[<p>应该说微软此举获得了不少技术人员的心。技术人员渴望被承认，渴望助人&#8212;&#8212;或许这是因为地球上有雄性以来的英雄主义在作祟。然而，这个动作投资不大，却satisfy很多高手，并将这些高手牢牢的捆在微软阵营。也许MS感受到了来自开源世界的声音。</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date>2004-04-06 09:15:08</wp:post_date>
		<wp:post_date_gmt>2004-04-06 01:15:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ms-mvp-%e6%bb%a1%e8%b6%b3%e4%ba%86%e6%8a%80%e6%9c%af%e4%ba%ba%e5%91%98%e7%9a%84%e7%8b%82%e7%83%ad%e6%bf%80%e6%83%85</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>Mozilla中XSLTProsessor的问题</title>
		<link>http://michael.nona.name/archives/16</link>
		<pubDate>Tue, 06 Apr 2004 01:16:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/16</guid>
		<description></description>
		<content:encoded><![CDATA[<p>果然不出我所料，在Mozilla中处理xml的转换是如此麻烦。如果在xsl头部加入了如下的一行，那么，呵呵，你惨了：</p>
<p><font face="Courier New">xmlns="</font><a href="http://www.w3.org/TR/REC-html40"><font face="Courier New">http://www.w3.org/TR/REC-html40</font></a><font face="Courier New">"</font></p>
<p><font face="Times New Roman">无论在下面的&lt;xsl:output&gt;元素中的method元素如何指定，<strong>永远</strong>都不可能生成正确的Html&#8212;&#8212;XSLTProsessor在每一个标签前面都加入了&lt;a0:XXX&gt;&#8230;&#8230;</font></p>
<p>解决的办法很简单，将xmlns该成其他值，或者干脆去掉。于是一个能够工作的XSL应该如下所示：</p>
<p>&lt;?xml version="1.0" encoding="gbk"?&gt;<br />&lt;xsl:stylesheet version="1.0" xmlns:xsl="<a href="http://www.w3.org/1999/XSL/Transform">http://www.w3.org/1999/XSL/Transform</a>"&gt;<br />&lt;xsl:output indent="yes" method="xml" encoding="GBK" omit-xml-declaration="yes"/&gt;<br />...其他部分略</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date>2004-04-06 09:16:30</wp:post_date>
		<wp:post_date_gmt>2004-04-06 01:16:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mozilla%e4%b8%adxsltprosessor%e7%9a%84%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>行了，5drush，停止你的谩骂，为你的MVP留点面子吧</title>
		<link>http://michael.nona.name/archives/17</link>
		<pubDate>Tue, 06 Apr 2004 01:19:19 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/17</guid>
		<description></description>
		<content:encoded><![CDATA[<p>先看看这篇文章：</p>
<p><a href="http://www.csdn.net/develop/article/26/26399.shtm">http://www.csdn.net/develop/article/26/26399.shtm</a></p>
<p>留意一下这个5drusn的评论。我不禁怀疑，这样的人就是MVP? 思想境界上只能到达这样的层次？技术好坏暂且不论，就求实的技术探索精神，是否这样的标准就是MS 选择MVP的标准？难道离开OpenSource的土壤，对待与己不同的思想就是这样的令人窒息？我不禁想起了<a href="http://www.jfree.org/jfreereport/">JFreeReport</a>的Team Leader, Thomas Morgner。老实说Thomas并非顶尖高手&#8212;&#8212;却引领这个JFreeReport到达Reader's Choise最喜爱的报表工具第四名，却让人不得不肃然起敬。然而，在我跟他讨教相关问题的时候，永远都是那么谦虚，并对我跟他提的哪怕是一点小意见满怀感激，反而弄得我不好意思。相形之下，两者的层次一眼便知。</p>
<p>5drush对Java，对Sun的攻击不止一次了（可笑的是他认为Java=Sun）。用一句很俗的话来说，有奶便是娘，这么做的目的是什么？在对Java相关体系毫无了解的基础上，如此的不顾身份，犹如泼妇骂街！</p>
<p>套用<a href="http://gigix.blogdriver.com/">gigix</a>的一句话，MS 不需要他的用户思考。也许这句话是对的。套用我的一句话：<span id=Edit_dgrItems__ctl2_Label2 NAME="Label1">我喜欢Java甚于其他。Java给我自由，Java让我呼吸，Java让我手舞足蹈，并提供足够空间，使我头顶蓝天，脚踏大地，放眼望去，满眼都是&#8212;&#8212;无边的喜悦。</span> （确切地说，这里的Java泛指OpenSource世界）</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date>2004-04-06 09:19:19</wp:post_date>
		<wp:post_date_gmt>2004-04-06 01:19:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%a1%8c%e4%ba%86%ef%bc%8c5drush%ef%bc%8c%e5%81%9c%e6%ad%a2%e4%bd%a0%e7%9a%84%e8%b0%a9%e9%aa%82%ef%bc%8c%e4%b8%ba%e4%bd%a0%e7%9a%84mvp%e7%95%99%e7%82%b9%e9%9d%a2%e5%ad%90%e5%90%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>Rich Green离开Sun...</title>
		<link>http://michael.nona.name/archives/18</link>
		<pubDate>Wed, 07 Apr 2004 01:20:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/18</guid>
		<description></description>
		<content:encoded><![CDATA[<p>昨天才看到CSDN的这篇文章（<a href="http://www.csdn.net/news/newstopic/15/15189.shtml">驱动微软与Sun和解的根本原因：Linux和IBM </a>）。老实说前些日子看过英文版，但是没看完。看完后我心里舒了口气，却预感会发生什么事情。果然，今天早上TheServerSide的News就毫不留情的告诉我，Rich Green，Sun公司副总裁，离开了Sun公司。TheServerSide的全文如下：</p>
<p>Rich Green, former VP of developer platforms and Java advocate has quit Sun. During the US Microsoft antitrust trial, Green was one of Sun's key witnesses, arguing that Microsoft tried to undermine Java by shipping an incompatible version of the JVM. Green's exit is said to be just one of several that have come as a result of the Microsoft deal.</p>
<p>我在今年的Sun科技日上见到Richard Green。他风趣幽默而又才智过人，在此次大会上他演讲了Java体系的整体架构，以及足以令所有Java人骄傲的&#8220;勇气号&#8221;登上火星。然而，却因为MS的原因，他却离开了Sun。。。（我虽然不太喜欢微软，但还没有到为了反对而干脆跳槽的地步^_^）</p>
<p><font color=#ff1493>附：Rich Green的资料：</font></p>
<p>
<table cellSpacing=0 cellPadding=0 width="100%" border=0>
<tbody>
<tr vAlign=top>
<td width="88%"><span class=TEXT>Richard Green<br />Vice President, Sun Developer Tools and Java Software <br />Sun公司副总裁<br />Sun开发者工具和Java 软件部<br />Sun Microsystems公司</span></td></tr>
<tr>
<td colSpan=3><span class=TEXT><br />Richard L. Green先生是Sun Microsystems公司负责Sun开发者工具和Java软件的副总裁，他的主要职责是推动Sun的开发者工具系列产品策略的实施；监督产品的高效生产和交付；以及协调和管理Sun在Java Community的各种活动，确保所有活动的协调一致。</span> 
<p class=TEXT>此外他还负责监督<span class=TEXT>Sun</span>在Java Community Process之中发挥有效的作用，以便协助数以百计的许可证持有者和合作伙伴以及数以百万计的开发者相互协作，共同推动Java平台的发展。</p>
<p class=TEXT>在此之前，Green先生担任Java和XML软件部副总裁，负责将<span class=TEXT>Sun</span>的Java 平台和XML技术成功推向不同市场，包括在智能卡和掌上设备以及台式机和服务器等广泛多样的市场上创下佳绩。 在领导Java 部门之前，Green先生担任Solaris 产品部副总裁，负责<span class=TEXT>Sun</span>的Solaris操作系统的战略制定、产品设计和市场营销。</p>
<p class=TEXT>自1989年加入<span class=TEXT>Sun</span>以来，Green先生在许多不同的领域显示了卓越才能，他曾经负责管理的领域包括分布式目标系统、网络通信产品、桌面集成技术、软件开发工具和数据库系统的设计和开发。</p>
<p class=TEXT>加入<span class=TEXT>Sun</span>之前，Green先生负责管理CAD/CAM和图形设计项目并设计了用于运输研究的仿真软件。</p>
<p><span class=TEXT><strong>Green先生毕业于奥尔巴尼的纽约州立大学，拥有文学学士和文学硕士学位。</strong></span></p></td></tr></tbody></table></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date>2004-04-07 09:20:21</wp:post_date>
		<wp:post_date_gmt>2004-04-07 01:20:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rich-green%e7%a6%bb%e5%bc%80sun</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>昨晚装Linux，结论是……</title>
		<link>http://michael.nona.name/archives/19</link>
		<pubDate>Thu, 08 Apr 2004 01:21:53 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/19</guid>
		<description></description>
		<content:encoded><![CDATA[昨天本打算从此放弃使用Windows，开始用Linux了。费了1个多小时，装上了Redhat Linux 9.0，天，那个慢。我的768M内存只剩7M了……
<br /><br />

那抗锯齿的字体开始看看还行，看着看着越看越累，最后眼睛都开始疼了。这还不算什么，运行什么都慢，甚至一个OpenOffice文档，上网也很慢。本想用Linux写一篇Blog，发现智能拼音实在是不爽，索性放弃。

<br /><br />

后来花两个小时重新安装Windows, 恢复数据。哎，不是我不用Linux，而是无法忍受他的速度。（Ps.如果有人知道怎么让他跑快一点，请告诉我。我使用的完全安装，5G，一个半小时装完。进去后用进程察看器，发现有81个进程）

<br /><br />
结论就是，我对Linux还是不能忍受。不能忍受其慢，以及自以为是的抗锯齿美观字体。毕竟吃一次山珍海味和永远都吃是两种概念。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2004-04-08 09:21:53</wp:post_date>
		<wp:post_date_gmt>2004-04-08 01:21:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%98%a8%e6%99%9a%e8%a3%85linux%ef%bc%8c%e7%bb%93%e8%ae%ba%e6%98%af%e2%80%a6%e2%80%a6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>553</wp:comment_id>
			<wp:comment_author><![CDATA[pk]]></wp:comment_author>
			<wp:comment_author_email>diuacuo@g.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.133.148.114</wp:comment_author_IP>
			<wp:comment_date>2005-12-13 00:20:42</wp:comment_date>
			<wp:comment_date_gmt>2005-12-12 16:20:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你扑街啦，学人用linux]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>HTTP POST数据中中文（或者称东方文字）的解决办法</title>
		<link>http://michael.nona.name/archives/20</link>
		<pubDate>Fri, 09 Apr 2004 01:22:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/20</guid>
		<description></description>
		<content:encoded><![CDATA[<p>这个问题让我郁闷一天。</p>
<p>先描述以下这个问题：在很多情况下，客户端并非是Browser。所以我设计了这个只能处理POST数据的Servlet&#8212;&#8212;有点像XMLRPC和WebService，这样在客户端（无论是任何客户端，Browser也罢，Desktop Application也罢）只能通过某些特定API如XMLHTTP来POST数据。然而，在处理中文字符的时候遇到了大麻烦。英文当然是没问题的了&#8230;&#8230;</p>
<p>首先，我要找到处理Post数据的方法。request.getParameter肯定不能用&#8212;&#8212;那是处理标准HTML Form的方法。找到了request.getServletInputStream，呵呵，不错不错。</p>
<p>一堆老套的代码，参考javax.servlet.http.HttpUtils.parsePostData将String从Stream取得。然后，Post一堆英文，Log一看，没有任何问题；Post一堆中文&#8230;&#8230;出现了该死而又熟悉的???????。这次问题稍微有点不同。在Console上，每一个中文表现为三个问号，而在前台的页面上，中文回显正常。用常规的ISO8859_1解码，然后用GBK编码，没用&#8230;&#8230;晕&amp;郁闷</p>
<p>中午吃饭没心情，5分钟搞定</p>
<p>下午问了问<a href="http://gigix.blogdriver.com">gigix</a>，他给了我一个Filter, 虽然我清楚这根本不是Filter的问题，但还是抱着死马活马医的心态试了试，还是不行。万般无奈之下，我想到了Axis。Axis也是自己处理Post数据的。于是我一头扎进了Axis的源代码。&#8230;&#8230;</p>
<p>天知道Axis的代码多么庞大。好辛苦我找到了位置。他处理InputStream的方法比我的巧妙，干脆把它的代码搬过来，retry&#8230;&#8230;Fail Again&#8230;&#8230;继续找，终于找到了一句令我茅塞顿开的语句：</p>
<p>...new String(buf, &#8220;UTF-8&#8221;)</p>
<p>看来我真是个笨蛋&#8230;&#8230;用这句话重新编码那一堆该死的byte，OK, 漂亮的中文出现在Console和前台页面上！</p>
<p>附注：在普通编码不起作用的情况下，不妨试试Unicode。特别是当application可能处理多种字符集的时候，utf-8有着得天独厚的优势。我还不是很明白为什么每一个中文出现的是三个问号而不是两个。用了UTF-8之后我猜想，是不是前台页面Post的数据就是UTF-8编码的？</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2004-04-09 09:22:47</wp:post_date>
		<wp:post_date_gmt>2004-04-09 01:22:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>http-post%e6%95%b0%e6%8d%ae%e4%b8%ad%e4%b8%ad%e6%96%87%ef%bc%88%e6%88%96%e8%80%85%e7%a7%b0%e4%b8%9c%e6%96%b9%e6%96%87%e5%ad%97%ef%bc%89%e7%9a%84%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[shawnsun]]></wp:comment_author>
			<wp:comment_author_email>shawn@henu.edu.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.64.224.105</wp:comment_author_IP>
			<wp:comment_date>2005-04-25 10:42:08</wp:comment_date>
			<wp:comment_date_gmt>2005-04-25 02:42:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[请教你是在axis中的那个文件中找到那个“…new String(buf, “UTF-8”)”的？我这里也遇到同样的问题。想知道该如何解决呀？请指教。谢谢了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>希望这段话能够振奋自己，还有你</title>
		<link>http://michael.nona.name/archives/21</link>
		<pubDate>Sat, 10 Apr 2004 01:23:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/21</guid>
		<description></description>
		<content:encoded><![CDATA[<p>要像无人注目一样起舞，</p>
<p>要像无人倾听一样歌唱，</p>
<p>要像从未受过伤害一样去爱，</p>
<p>要像地球就是天堂一样生活。</p>
<p>&#8212;&#8212;《Being Better Than Your Best》</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2004-04-10 09:23:29</wp:post_date>
		<wp:post_date_gmt>2004-04-10 01:23:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b8%8c%e6%9c%9b%e8%bf%99%e6%ae%b5%e8%af%9d%e8%83%bd%e5%a4%9f%e6%8c%af%e5%a5%8b%e8%87%aa%e5%b7%b1%ef%bc%8c%e8%bf%98%e6%9c%89%e4%bd%a0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>我与开源的另一个故事</title>
		<link>http://michael.nona.name/archives/22</link>
		<pubDate>Sun, 11 Apr 2004 01:24:14 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/22</guid>
		<description></description>
		<content:encoded><![CDATA[<p>最近看来确实情绪不太受控。前几天为5drush的一句所谓的&#8221;玩笑&#8221;话生气了；今天在群里面讨论51js的未来的时候又跟<a href="http://www.iecn.net">钟钟</a>吵了起来。</p>
<p>事情起因很简单：我想表达的是，希望51JS能够成为一个技术平台+技术服务团队，以及背后支持的一个大型论坛。显然，技术平台部分，我希望是能够统一做一个开源的JavaScript API库，就像dyapi或者bindows那种体系。Javascript虽然是弱语言，但是在实际的商业开发中，却远远没有形成体系。（附带一句，将设计模式中的最佳实践应用在JavaScript上，虽然牵强，但也能构形成规整严密而又灵活的JavaScript类库包。）随着BS系统的盛行，JavaScript的需要将会很迫切。我的意见是同过这个平台（项目）的运作发展，最终形成一个系统的，权威的，灵活的客户端框架体系，使得这个项目真正对商业B/S Application产生较大的推动力，并且参与这个项目的开发人员人人受益，无论是在技术上还是在声誉上。</p>
<p>然而，就在我想赞美Open Source多么美好的时候，钟钟毫不留情的说，开源在中国行不通。我很冲动（我承认，是我这句话说得冲动，对此向钟钟表示道歉）的说了一句不该说得话－－&#8220;拜托，你对开源有没有认识 &#8220;。然而，以下他说的这段话可能代表了很多人的心声：</p>
<p>这样说吧：如果你不愁生计，有足够的时间和兴趣，你做开原代码我想大家都会支持的。（※略去我认为可能对我含有感情色彩的语句若干※）</p>
<p>Well, 在gigix身上的事情在我身上重演了（我没那么多人攻击，呵呵）。文章<a href="http://www.csdn.net/develop/article/25/25146.shtm">新一轮FUD：停止相信自由软件？</a>&nbsp;&nbsp;&nbsp; 以下的评论足以看出当时的争执多么激烈；这篇<a href="http://www.csdn.net/develop/Read_Article.asp?Id=25523">G-Roller的开源故事</a>&nbsp; 。关于开源的好处我已经不再重复。我想补充的一点是，我认为开源给人带来的更是那种开放的心态，无狭隘的思想。开放在我看来，包含两重意思：首先是开放你的大脑，同一问题的解决方案可以有很多种，开源使得自己以极低的成本学习到了在同一领域不同精彩的解决方法，这些解决方法至少在不同方面开放了自己的眼界；其次，我认为最重要的是开放了你的胸襟。开始以一种Open的心态来学习，来工作，来交流，这样才是Global的编程观念，才会从XXX公司的狭隘桎梏中跳出，面对更为广阔的技术世界。从这个意义上讲，我认为，一个程序员不参与或者贡献一个开源项目，他的程序人生是不完整的。</p>
<p>坏处在我看来只有一点，可能你需要放弃自己的休息时间，为你的项目或者使用你项目的朋友作出一些看似额外的工作。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date>2004-04-11 09:24:14</wp:post_date>
		<wp:post_date_gmt>2004-04-11 01:24:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e4%b8%8e%e5%bc%80%e6%ba%90%e7%9a%84%e5%8f%a6%e4%b8%80%e4%b8%aa%e6%95%85%e4%ba%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>今天比较开心，XMLHTTP和服务器Servlet框架还是很好用的</title>
		<link>http://michael.nona.name/archives/23</link>
		<pubDate>Mon, 12 Apr 2004 01:25:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/23</guid>
		<description></description>
		<content:encoded><![CDATA[<p>将Request和Response对象在客户端和服务器端都封装了一份，确实很方便。原来的服务器端的大段代码被分割。本想用Command模式重新封装一下，后来想到这个应用中过程并不复杂，算了，就不给自己找麻烦了，干脆用几个静态方法了事。</p>
<p>明天重新设计以下消息格式，这个消息格式并不是太健壮。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date>2004-04-12 09:25:52</wp:post_date>
		<wp:post_date_gmt>2004-04-12 01:25:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bb%8a%e5%a4%a9%e6%af%94%e8%be%83%e5%bc%80%e5%bf%83%ef%bc%8cxmlhttp%e5%92%8c%e6%9c%8d%e5%8a%a1%e5%99%a8servlet%e6%a1%86%e6%9e%b6%e8%bf%98%e6%98%af%e5%be%88%e5%a5%bd%e7%94%a8%e7%9a%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>恋家之犬多次被弃 女主人下杀手爱犬含泪而亡</title>
		<link>http://michael.nona.name/archives/24</link>
		<pubDate>Tue, 13 Apr 2004 01:27:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/24</guid>
		<description></description>
		<content:encoded><![CDATA[<p>看看这篇新闻：<a href="http://news.sina.com.cn/s/2004-04-13/01113120441.shtml">恋家之犬多次被弃 女主人下杀手爱犬含泪而亡 </a></p>
<p>感人之深<!--StartFragment --></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date>2004-04-13 09:27:30</wp:post_date>
		<wp:post_date_gmt>2004-04-13 01:27:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%81%8b%e5%ae%b6%e4%b9%8b%e7%8a%ac%e5%a4%9a%e6%ac%a1%e8%a2%ab%e5%bc%83-%e5%a5%b3%e4%b8%bb%e4%ba%ba%e4%b8%8b%e6%9d%80%e6%89%8b%e7%88%b1%e7%8a%ac%e5%90%ab%e6%b3%aa%e8%80%8c%e4%ba%a1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>有人要加入LiveChat项目</title>
		<link>http://michael.nona.name/archives/25</link>
		<pubDate>Tue, 13 Apr 2004 01:27:54 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/25</guid>
		<description></description>
		<content:encoded><![CDATA[<p>说来惭愧，2月份我将这个项目在G(??，好像是湖北某软件平台)&#8212;&#8212;一个我现在连名字都记不起来的地方注册了，并加入了一大段激动人心的注释，然后便没了下文。不是我不想继续，而是那个时候一直在徘徊是否该将他OpenSource。LiveChat的Demo经过我很长时间的思考，服务器端架构更是经过多次优化，使得50人同时在线时用普通HTTP协议用Modern拨号的延时在2秒以内，服务器端CPU占用率不超过10%&#8212;&#8212;服务器端可是用最没有效率的ASP写的。</p>
<p>LiveChat代表了<strong>我自己</strong>能够驾驭的JavaScript技术，OO以及性能优化的最高水平，一下要开源，心中自然有点不舍。另外，自己开始着手公司的新项目的技术探索和分析了，用JavaScript的机会少了，观念，模式都在发生本质变化。在这种情况下，如果真的开源，时间倒是其次，关键是切换不同的开发框架，我还不能适应这种快速的改变&#8212;&#8212;结果很可能是耽误了两个项目的时间。我还是要靠公司吃饭的，所以，LiveChat就耽搁了下来。</p>
<p>工作进度排到了8月底，也就是说估计半年内LiveChat不会有动作了。抱歉，对它感兴趣的同仁们。</p>
<p>PS. 前段时间发神经，想摆脱Windows，装了Redhat9, 慢得受不了，安装后半小时就卸掉了。结果是&#8230;&#8230;我丢掉了未备份的Outlook邮件和联系人，所以连项目的确认信也找不到了&#8230;&#8230;</p>
<p>再说一句：为什么Outlook的备份/恢复如此难用？</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date>2004-04-13 09:27:54</wp:post_date>
		<wp:post_date_gmt>2004-04-13 01:27:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9c%89%e4%ba%ba%e8%a6%81%e5%8a%a0%e5%85%a5livechat%e9%a1%b9%e7%9b%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>67490</wp:comment_id>
			<wp:comment_author><![CDATA[hbliao]]></wp:comment_author>
			<wp:comment_author_email>hbliao@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.kf81.cn</wp:comment_author_url>
			<wp:comment_author_IP>221.220.149.67</wp:comment_author_IP>
			<wp:comment_date>2008-06-28 10:31:31</wp:comment_date>
			<wp:comment_date_gmt>2008-06-28 02:31:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[04年做livechat , 够早的，那会只感觉国外站在用这东西。

本人也做过一个此类工具，相互交流!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>小强问我，最近在忙什么</title>
		<link>http://michael.nona.name/archives/26</link>
		<pubDate>Fri, 16 Apr 2004 01:28:22 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/26</guid>
		<description></description>
		<content:encoded><![CDATA[<p>我说，忙着怎么快速有效的消灭小强。他说你怎么这么狠，我嘿嘿笑。</p>
<p>然后他说，我看见你在不停的写日记。</p>
<p>这倒使我怀疑起自己写Blog的动机来。到底是娱己，还是愚己，娱人还是愚人？</p>
<p>应该说物以类聚人以群分一点也没有错。所以，写Blog的目的，是发表自己的见地（以文字方式体现），最终希望的在网络这个大环境中，有那么一两个倾听的人，能够产生共鸣，这就够了。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date>2004-04-16 09:28:22</wp:post_date>
		<wp:post_date_gmt>2004-04-16 01:28:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b0%8f%e5%bc%ba%e9%97%ae%e6%88%91%ef%bc%8c%e6%9c%80%e8%bf%91%e5%9c%a8%e5%bf%99%e4%bb%80%e4%b9%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>JavaScript Validation Framework v0.1dr released</title>
		<link>http://michael.nona.name/archives/27</link>
		<pubDate>Fri, 16 Apr 2004 01:29:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/27</guid>
		<description></description>
		<content:encoded><![CDATA[<p>这是我在作项目过程中产生的副产品。描述如下：</p>
<p style="BORDER-RIGHT: medium none; PADDING-RIGHT: 0cm; BORDER-TOP: medium none; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; PADDING-TOP: 0cm; BORDER-BOTTOM: medium none">虽然又很多已有的开发框架提供了验证支持，但是，并非所有的现有产品都能构如己所愿。更不幸的是，如果你所使用的开发框架没有提供验证支持，那么意味着你必须手工在一个一个页面去写<span lang=en-US>JavaScript</span>代码。难度不大，却很麻烦。</p>
<p style="BORDER-RIGHT: medium none; PADDING-RIGHT: 0cm; BORDER-TOP: medium none; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; PADDING-TOP: 0cm; BORDER-BOTTOM: medium none"><span lang=en-US>JSValidation</span>提供了这方面的支持。比起别的验证框架，它最大的优点在于独立与易于集成。由于纯<span lang=en-US>JavaScript</span>结构，可以很容易的集成到现有的应用中。并且，将所有的表单验证集中管理，使得维护应用更加容易。简便的<span lang=en-US>XML</span>配置，易于扩充的框架，使得<span lang=en-US>JSValidation</span>成为验证框架的首选考虑。</p>
<p style="BORDER-RIGHT: medium none; PADDING-RIGHT: 0cm; BORDER-TOP: medium none; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; PADDING-TOP: 0cm; BORDER-BOTTOM: medium none">这个项目是我在开发公司系统过程中的副产品。我们使用的<span lang=en-US>Velocity</span>前台表现框架，然而，<span lang=en-US>Velocity</span>并不提供验证支持，难道要在一个一个的页面里面写<span lang=en-US>JavaScript?...</span></p>
<p style="BORDER-RIGHT: medium none; PADDING-RIGHT: 0cm; BORDER-TOP: medium none; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; PADDING-TOP: 0cm; BORDER-BOTTOM: medium none">如果你有和我一样的困惑，并想减少工作量，使得工作更加快捷，那么<span lang=en-US>JSValidation</span>也许是你的一个选择。</p>
<p style="BORDER-RIGHT: medium none; PADDING-RIGHT: 0cm; BORDER-TOP: medium none; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; PADDING-TOP: 0cm; BORDER-BOTTOM: medium none">站点：<a href="http://www.jzchen.net/projects/validation/">http://www.jzchen.net/projects/validation/</a></p>
<p style="BORDER-RIGHT: medium none; PADDING-RIGHT: 0cm; BORDER-TOP: medium none; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; PADDING-TOP: 0cm; BORDER-BOTTOM: medium none">演示：<a href="http://www.jzchen.net/projects/validation/demo.html">http://www.jzchen.net/projects/validation/demo.html</a></p>
<p style="BORDER-RIGHT: medium none; PADDING-RIGHT: 0cm; BORDER-TOP: medium none; PADDING-LEFT: 0cm; PADDING-BOTTOM: 0cm; BORDER-LEFT: medium none; PADDING-TOP: 0cm; BORDER-BOTTOM: medium none">下载：http://www.jzchen.net/process-download.asp?file=validate.zip</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2004-04-16 09:29:00</wp:post_date>
		<wp:post_date_gmt>2004-04-16 01:29:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-validation-framework-v01dr-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>636</wp:comment_id>
			<wp:comment_author><![CDATA[leinchu]]></wp:comment_author>
			<wp:comment_author_email>leinchu@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.10.4.115</wp:comment_author_IP>
			<wp:comment_date>2006-03-09 12:05:18</wp:comment_date>
			<wp:comment_date_gmt>2006-03-09 04:05:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你好：
　　什么时候提供多语言支持哦，我写了个配置文件生成程序，效果还不错，希望你能继续开发。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>前一段时间做的技术探索，在前天的千万记录的测试中瘫痪，郁闷</title>
		<link>http://michael.nona.name/archives/29</link>
		<pubDate>Mon, 19 Apr 2004 01:30:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/29</guid>
		<description></description>
		<content:encoded><![CDATA[<p>花了两个多月实现了系统原型。老大发话了：后续的开发先停，用这个数据库测试看看，说罢给了我一个2G的数据库。数据库是一个CSV, 不是规则的CSV，有自己的字段规则。刚开始我想先用C++写个程序，把这些数据按照占位符隔开，然后存入数据库。后来担心2G是Windows文件系统的单个文件大小的最大值，想先把这个2G的东东拆开。胡乱在网上找了几个不能达成目标的工具，再打开Windows Help，才发现FAT32系统文件最大值是4G（附：NTFS无单个文件最大限制，取决于硬盘大小，FAT最大值2G），于是放心的写了C代码。为了避免出错，先做了几个Demo文件，没有问题之后才开始转换这个2G的东西。</p>
<p>事情不是想象那么顺利，在转换到1.08G的时候，不知道出了什么问题，程序停止了（估计是数据中有不规则的行，我也没办法打开看。2G的文本，呵呵，任何编辑器都会死得很难看。Editplus直接悄悄的退出，Notepad, Wordpad直接告诉我内存不足）&#8230;&#8230;胸闷中</p>
<p>准备再来一次的时候，突然想到，为什么不直接将它写入数据库？&#8230;&#8230;我真是个笨蛋&#8230;&#8230;于是打开Eclipse，连上Mysql，首先读出文件中的每一行，然后转换为相应字段，最后写入数据库，一个while(Not File.EOF)循环，加上Log记录&#8230;&#8230;运行过程中又出现了ArrayIndexOutOfBoundsException, DateFormatException，要命的是运行了十几分钟的时候&#8230;&#8230;该死的不规则的数据&#8230;&#8230;没办法，只好改代码，捕获异常，Re-Build, run...一个小时后，这个2G的文本终于进了数据库&#8230;&#8230;</p>
<p>随手来了一个select count(*), 结果赫然是12841782！一千多万条记录！我怀着自信的心情在系统中进行了一个最简单的查询&#8230;&#8230;我没能等到结果出来就睡觉去了，起床的时候再看结果，仅仅初始化的工作就进行了500多秒（也就是select distinct的操作），后来进行的Query的操作就恐怖的不行，几乎每个操作耗时都在130s以上&#8230;&#8230;按照事先定义的要求，千万级数据操作时间响应应该在一分钟以内，也就是说，我前一段时间的工作根本毫无作用！</p>
<p>今天上班，我简直不知道怎么办好了，郁闷得要死 : ( 我为这个项目付出了相当大的努力和汗水，现在却根本不能使用！</p>
<p>现在头脑乱糟糟的，需要清醒。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2004-04-19 09:30:51</wp:post_date>
		<wp:post_date_gmt>2004-04-19 01:30:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%89%8d%e4%b8%80%e6%ae%b5%e6%97%b6%e9%97%b4%e5%81%9a%e7%9a%84%e6%8a%80%e6%9c%af%e6%8e%a2%e7%b4%a2%ef%bc%8c%e5%9c%a8%e5%89%8d%e5%a4%a9%e7%9a%84%e5%8d%83%e4%b8%87%e8%ae%b0%e5%bd%95%e7%9a%84%e6%b5%8b%e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>关于Blog的称呼方法</title>
		<link>http://michael.nona.name/archives/30</link>
		<pubDate>Mon, 19 Apr 2004 01:31:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/30</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Blog为泊来之物，是Web Log的缩写。在国外，它的含义很丰富：可以是一篇日记（a blog）,可以是动词，发表日记（to blog, blogging），也可以是作者（blogger）。中文翻译&#8220;博客&#8221;是非常准确的。在国内，&#8220;博客&#8221;更多的被理解为&#8220;发表网志的人&#8221;，或者灵活一点，作为动词，如&#8220;今天你博客了没有&#8221;。我没有见过称博客站点或者个人网志站点为&#8220;博客&#8221;的说法，更多的说法是&#8220;我的Blog&#8221;或者&#8220;我的Blog站点&#8221;。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date>2004-04-19 09:31:33</wp:post_date>
		<wp:post_date_gmt>2004-04-19 01:31:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8eblog%e7%9a%84%e7%a7%b0%e5%91%bc%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>使用JUnitDoclet加快测试开发</title>
		<link>http://michael.nona.name/archives/31</link>
		<pubDate>Tue, 20 Apr 2004 01:32:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/31</guid>
		<description></description>
		<content:encoded><![CDATA[<p>JUnitDoclet能够自动根据类的结构，生成测试框架。他将会自动找寻类路径中所有的公开的方法和类，根据类生成相应的TestCase和TestSuite类，根据方法生成相应的testXXX方法。它不要求在源代码产生任何标记，就可以生成test skeleton。开发者可以根据Skeleton修正测试。他大大减少了生成JUnit TestCase的时间，加快了开发速度。</p>
<p>JUnitDoclet可以集成在Ant中，使用更加方便。并且能够以一种非常Stupid的方式集成到Eclipse和IntelliJ IDEA中（用External Tools），呵呵&#8230;&#8230;</p>
<p>JUnitDoclet地址：<a href="http://www.junitdoclet.org/">http://www.junitdoclet.org/</a></p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2004-04-20 09:32:02</wp:post_date>
		<wp:post_date_gmt>2004-04-20 01:32:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8junitdoclet%e5%8a%a0%e5%bf%ab%e6%b5%8b%e8%af%95%e5%bc%80%e5%8f%91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>XP, 让人心旷神怡！</title>
		<link>http://michael.nona.name/archives/32</link>
		<pubDate>Tue, 20 Apr 2004 01:32:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/32</guid>
		<description></description>
		<content:encoded><![CDATA[<p>很久以前就看过这个eXtreame Programming概念。只是当时无知，看到满篇的英文便草草而过；现在看到它获得了Jolt大奖，才重新登上xprogramming.com仔细研习，感慨很多啊。最后的心情是，XP真正体现了&#8220;循序渐进&#8221;的哲学观点（进化论），真正符合人的正常思维，也符合现实中项目开发的真实现状：即多变的需求。</p>
<p>1 兵车未动，粮草先行 －－ TDD(Testing Driven Development)，测试先行的开发思想</p>
<p>先生成软件开发框架，不要写具体的实现代码，一点都不要。然后开始编写测试用例(Test Case)。这样做最大的好处，就是站在了用户的高度考虑问题，从一开始就准备写出Product级别的代码。</p>
<p>2 没有最好，只有更好 －－重构（Refactoring）</p>
<p>对接口进行重新定义，对其中的代码进行优化，最好是不要改变接口。程序首先是给程序员看，然后才是机器。阅读代码的过程能够极大程度的提高个人水平，对代码的修改当然是建立在理解代码的基础上。</p>
<p>3 &#8220;我的眼睛看不见了，你帮我开枪&#8221;<br />&nbsp;&nbsp;&nbsp;&#8220;我抠不动扳机&#8221;<br />&nbsp;&nbsp;&nbsp;&#8220;来，你做我的眼睛，我来开枪！&#8221; <br />&nbsp;&nbsp;&nbsp; －－漫画《城市猎人》中的一幕， 双人编程（Pair Programming）</p>
<p>XP中的精华就是双人编程。双人编程是整个项目运作的纽带，它使得项目中的每个开发人员都必须交流，代码成为共有。知识的共享，项目成员之间的联系更加紧密。每个成员可以成为Driver或者Navigator, 对Task同时进行工作。这样，在这个代码commit到CVS之前，已经经过了两个人的眼睛，通过了两个程序员的大脑，当然还有全部的单元测试。</p>
<p>4&nbsp;&nbsp; 第一天：&#8220;哈姆雷特还在上网吗？&#8221;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;是的，陛下！&#8221;<br />&nbsp;&nbsp; 第二天：&#8220;哈姆雷特还在上网吗？&#8221;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;是的，陛下！&#8221;<br />&nbsp;&nbsp;&nbsp; 第三天：&#8220;哈姆雷特&#8230;&#8230;&#8221;<br />&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;是的是的，陛下！&#8221;</p>
<p>&nbsp;&nbsp;&nbsp; －－－XP项目开始后的第一个迭代后，任何时候，客户都可以得到一个Productive Release，如果他们对这个Release有别的需求，可以形成用户故事，项目组将这个故事加入下一个迭代中，并分配为Task，在若干个迭代后，便会出现新的Productive Release。</p>
<p>&#8230;&#8230;</p>
<p>感谢XP，让我从无尽的文档中逃脱出来，并给我指引了一条贴近真实开发环境的开发之路。</p>
<p>附：资源：</p>
<p><a href="http://www.xprogramming.com">http://www.xprogramming.com</a><br /><a href="http://www.chinaxp.org">http://www.chinaxp.org</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date>2004-04-20 09:32:27</wp:post_date>
		<wp:post_date_gmt>2004-04-20 01:32:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xp-%e8%ae%a9%e4%ba%ba%e5%bf%83%e6%97%b7%e7%a5%9e%e6%80%a1%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>大话西游台词回顾</title>
		<link>http://michael.nona.name/archives/33</link>
		<pubDate>Wed, 21 Apr 2004 01:32:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/33</guid>
		<description></description>
		<content:encoded><![CDATA[<p><font face=宋体>放过你<span lang=EN-US>?你给我一个不杀你的理由!< ?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o :p></o></span></font></p>
<p><font face=宋体>在一个月黑风高阴森恐怖的晚上我是至尊宝你是白晶晶<span lang=EN-US>,奇妙的爱情就从桥头上这一点火开始的<o :p></o></span></font></p>
<p><font face=宋体>你尽管捅死我吧，生又何哀，死又何苦，等你明白了舍生取义，你自然会回来跟我唱这首歌的！喃呒阿弥陀佛 <span lang=EN-US><o :p></o></span></font></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;这我想到了，所以我要拿你身上一件信物给她看，你有什么项链啊，首饰啊，金银珠宝啊，月光宝盒啊什么的&#8230;&#8230; <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;哇！又升仙啦！咦，为什么要说&#8220;又&#8221;呢？ <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;哈！我不是关心你，只是蝼蚁尚且偷生，神仙干成你这个样子，干脆不要干算了！ <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;那我们大家立刻开始这段感情吧！ <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;你又明不明白我已经不再是神仙了！我只明白一件事：爱一个人是那么痛苦！ <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;你说谎！你不敢亲我因为你还喜欢我。我告诉你，如果这次你拒绝我的话，你会后悔一辈子的！ <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;你妈贵姓？ <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;谁说我斗鸡眼？我只是把视线集中在一点以改变我以往对事物的看法！ <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;哎！我现在郑重宣布，这座山所有的东西都是属于我的，包括你在内！ <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;你只是得到我的肉体，并不能得到我的灵魂。我已经有爱人了，我们不会有结果的。你让我走吧！ <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;长夜漫漫无心睡眠，我以为只有我睡不着觉，原来晶晶姑娘你也睡不着啊！ <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;我的意中人是个盖世英雄，有一天他会踩着七色的云彩来娶我，我猜中了前头，可是我猜不着这结局&#8230;&#8230; <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;对不起啊，我不是故意的，我是看你那么冲动，配合你一下而已，我虽然不是什么正人君子，但也不至于趁人之危啊！ <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;以前陪我看月亮的时候，叫人家小甜甜，现在新人胜旧人了，叫人家牛夫人！ <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;这个家伙没事就长篇大论婆婆妈妈叽叽歪歪，就象有一只苍蝇，嗡&#8230;对不起，不是一只，是一堆苍蝇围着你，嗡嗡飞到你耳朵里。 <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;你化这个妆就说自己是孙悟空喽？给点儿专业精神好不好！那些毛通通都开叉了，头上象戴了两块年糕，出来混饭得花本钱嘛！ <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;人和妖精都是妈生的，不同的人是人他妈的，妖是妖他妈的。 <o :p></o></font></span></p>
<p><!--StartFragment --><span lang=EN-US><font face=宋体>&nbsp;曾经有一份真诚的爱情放在我面前，我没有珍惜，等到失去的时候才后悔莫及，人世间最痛苦的事莫过于此。如果上天能给我一个再来一次的机会，我会对那个女孩子说三个字：我爱你！如果非要为这份爱加上一个期限，我希望是一万年！ <o :p></o></font></span></p>
<p><font face=宋体>如果有一天我忍不住问你<span lang=EN-US>,你一定要骗我.不管你心里有多么不愿意,你都不要告诉我你从来没有喜欢过我</span></font></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date>2004-04-21 09:32:59</wp:post_date>
		<wp:post_date_gmt>2004-04-21 01:32:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a4%a7%e8%af%9d%e8%a5%bf%e6%b8%b8%e5%8f%b0%e8%af%8d%e5%9b%9e%e9%a1%be</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>地震，良心，企业社会责任</title>
		<link>http://michael.nona.name/archives/183</link>
		<pubDate>Wed, 14 May 2008 17:56:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/183</guid>
		<description></description>
		<content:encoded><![CDATA[前天，东直门的大楼11层，也就晃悠了一下下，楼里面的白领蓝领灰领没领的，立马感觉头晕，抱头蹿出大楼。无法想象千里之外的汶川，数万人死或生，掩盖于一片片废墟与沟壑之下，那种苍凉、无力，又一次，在自然面前，人类如此脆弱渺小。

地震的新闻让我无法入睡。公司在号召个人捐款，然而作为公司却未见动静。办公室真是一个让人犬儒的好地方，愤青了几分钟后，便好似忘了一样。然而半夜溜达一圈愤青的留言：

<a href="http://bar.sina.com.cn/thread.php?tid=2498928&bid=1287">抗震救灾，致中国消费者倡议书！</a>

<a href="http://bar.sina.com.cn/thread.php?tid=2494751&bid=1287">看看!!!诺基亚为什么不捐!!!!!! </a> 

心灵刺痛了。社会责任，是一直挂在嘴上说的吗？

不得不说，巨大玻璃落地窗里面的忙碌的白领的人们，逐渐快跟玻璃一样，透明，却冰冷了。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>183</wp:post_id>
		<wp:post_date>2008-05-15 01:56:00</wp:post_date>
		<wp:post_date_gmt>2008-05-14 17:56:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%9c%b0%e9%9c%87%ef%bc%8c%e8%89%af%e5%bf%83%ef%bc%8c%e4%bc%81%e4%b8%9a%e7%a4%be%e4%bc%9a%e8%b4%a3%e4%bb%bb</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>JSValidation站点能访问了</title>
		<link>http://michael.nona.name/archives/34</link>
		<pubDate>Thu, 22 Apr 2004 01:33:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/34</guid>
		<description></description>
		<content:encoded><![CDATA[<p>昨天弄到12点，写完了User Guide。地址：</p>
<p><a href="http://www.jzchen.net/projects/jsvalidation">http://www.jzchen.net/projects/jsvalidation</a></p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2004-04-22 09:33:36</wp:post_date>
		<wp:post_date_gmt>2004-04-22 01:33:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jsvalidation%e7%ab%99%e7%82%b9%e8%83%bd%e8%ae%bf%e9%97%ae%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>乱文之一</title>
		<link>http://michael.nona.name/archives/35</link>
		<pubDate>Sun, 09 May 2004 01:35:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/35</guid>
		<description></description>
		<content:encoded><![CDATA[<p>性格注定了，可能永不能再改变了。如《呼啸山庄》中的希克刺力夫（也有翻译为希克力的），流浪儿的经历，即使庄园主的女儿对他的爱也无法挽回最终他想毁灭一切的心机。</p>
<p>回西安一趟，冯告诉我，感觉自己渐渐死去。这里&#8220;渐渐死去&#8221;固然不是生老病死之意，心理上的渐渐死去无从参见，然而为此而造成的身体上的变化又何尝能够避免。在那张满脸颓废的脸上，我依稀看到了自己的影子。然而，纵使如此，难道自己就应该在这种无谓的情绪中桎梏下去？</p>
<p>印象很深。上学心情低落的时常想到的一句话是，&#8220;无法悲伤&#8221;。想到这几个字的时候却总有点赴刑场的悲壮与兴奋感，一如狼牙山要跳崖的英雄。现在想来，这种情绪是何等的无聊和幼稚。把自己淹没在自我的情绪的海洋中，并以此为乐。</p>
<p>&#8220;我怀疑，有很多东西真的跟性格有关系&#8221;，对于他的这句话，我毫不怀疑。</p>
<p>回西安读了米兰.曼德拉的《生命中不能承受之轻》，却有了截然不同的领悟，感情是轻松的吗？生命是沉重的吗？在我看来，凡是对正常的生活轨迹施加压力，无论是有形或是无形，被施加者都在承受&#8220;重&#8221;。至于这个&#8220;重&#8221;是不是可承受，完全取决于这个被施压者的态度。</p>
<p>从这个意义上说，猪的生活应该是最轻松的，因为在他能够判断他承受的是轻是重的时候，已经被送进屠宰场；人的生活是否应该以之参考，得由各人自便了。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2004-05-09 09:35:33</wp:post_date>
		<wp:post_date_gmt>2004-05-09 01:35:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b9%b1%e6%96%87%e4%b9%8b%e4%b8%80</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>努力随流水，心沉比泰山</title>
		<link>http://michael.nona.name/archives/36</link>
		<pubDate>Mon, 10 May 2004 01:36:20 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/36</guid>
		<description></description>
		<content:encoded><![CDATA[<p>早在4月份就预料到这个结局。</p>
<p>4月份拿到了一千二百万条的一个数据库，在那个时候我的技术探索已经做的差不多，开发计划已经确定，预计在8月底结束整个项目。这个巨型的数据库(2G)结束了我的美梦。按照需求，系统允许最长的操作响应时间是一分钟。我花了半夜的时间把这个庞然大物放入数据库，建立索引。系统初始化的时间都都花掉了30多分钟，中间任何一个步骤的操作都在几分钟的范围&#8230;&#8230;真是&#8230;&#8230;郁闷透底。</p>
<p>我开始尝试各种优化策略。比如Oracle的实体视图。能够优化的也不过是将时间减少一半或者更少而已。优化虽然提高了50%以上的性能，但是对于需求还差得很远。对于那些不具备Matirial View的数据库，我的系统该如何优化？难道要求客户换数据库？</p>
<p>最终我不得不痛苦的承认，项目的基础都是错的。将所有的运算保存到内存中而不是文件中，一开始就是错的。如果继续做下去，项目将只能是一个脆弱的、不堪一击的小东西。</p>
<p>我想到了重新实现存贮层。很认真的考虑之后，决定放弃了。设计一个新的多用户的、并发的、事务安全的、大容量的存贮结构就等于重新做一个数据库。我再怎么意气风发也不至于不知道一个数据库应该由多少个什么层次的人完成。</p>
<p>承认失败是一件很痛苦的事，我未能免俗。从去年9月到现在，8个月时间里，每天工作十几小时，很少享受周末。从对数据分析一无所知到准备开发，我学习了大量的资料、规范，做了大量的技术探索。有一段时间居然像《指环王》中的Froto，在接近魔多的路上说，我已经记不起夏尔的花香，记不起食物的味道&#8230;&#8230;</p>
<p>现在，我站在北极点上</p>
<p>哪里都是南方，却没有任何方向</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date>2004-05-10 09:36:20</wp:post_date>
		<wp:post_date_gmt>2004-05-10 01:36:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8a%aa%e5%8a%9b%e9%9a%8f%e6%b5%81%e6%b0%b4%ef%bc%8c%e5%bf%83%e6%b2%89%e6%af%94%e6%b3%b0%e5%b1%b1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>Howard Lewis Ship关于Macromedia的论调</title>
		<link>http://michael.nona.name/archives/37</link>
		<pubDate>Thu, 13 May 2004 01:36:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/37</guid>
		<description></description>
		<content:encoded><![CDATA[P><a href="http://howardlewisship.com/blog/2004_05_01_archive.html#108421886198807837">http://howardlewisship.com/blog/2004_05_01_archive.html#108421886198807837</a>
<p>Howard是Tapestry的创造者。他的Blog不是很勤奋，往往好几天才一篇。前天他却花了很大的篇幅来表达对Flex的激动之情&#8220;I was very impressed by the <a href="http://www.macromedia.com/devnet/flex/"><font color=#000000>Flex</font></a> presentation at TheServerSide. &#8221;</p>
<p>除了常人所见的表扬，Howard还大胆语言了未来3－5年，HTML将会彻底死掉，取代之以Flex等Rich Internet Application。作为开发者，我们需要做出更多的应变策略。几年后IE将不复存在，C/S将会重新归来；而另一方面，Mozilla组织的XUL规范迟迟未能Release，可以预见的是未来几年的时间里，关于开发方向的讨论将是更加激烈。俗语说乱世出英雄，我也大胆的做出推测，5年内技术界一定有令人完全耳目一新的东西，比Flex给人带来的震撼更具有煽动力。</p>
<p>基本上，我的观点和Howard一致。在我<a id=viewpost.ascx_TitleUrl HREF="/mechiland/articles/182.aspx"><font color=#223355>Flex: RIA 的先驱，无坚不摧的银弹？</font></a> 文章中，表达了我对Flex的一些观点。同样，我认为，Flex存在的最大的障碍是有Macormedia公司独立提供。这在自由的Java领域简直会马上遭到诅咒。前段时间听来的传闻，MS将会收购Macromedia，这无疑更是宣判了Flex在Java界的死刑。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date>2004-05-13 09:36:21</wp:post_date>
		<wp:post_date_gmt>2004-05-13 01:36:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>howard-lewis-ship%e5%85%b3%e4%ba%8emacromedia%e7%9a%84%e8%ae%ba%e8%b0%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>沉静，沉静，沉静！</title>
		<link>http://michael.nona.name/archives/38</link>
		<pubDate>Sat, 15 May 2004 01:37:20 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/38</guid>
		<description></description>
		<content:encoded><![CDATA[<p>前天在gigix的站点上读到技术文章的八股论，大意说技术文章一点都不难写，首先定个基调，然后一二三，1.1, 1.2, 1.3，框架列好，往里面填充文字就行了。加上大段的代码，OK，一篇文章问世了。&#8212;&#8212;能达到此状态已经是国内技术文章的中级阶段了，虽然经常见到一些代码拼凑或者毫无条理的文字见诸CSDN&#8212;&#8212;这些文章的特点是看似条理清楚，读起来枯燥无味，除非是一定要了解技术才去阅读，没办法。</p>
<p>而国外专业作者的文章则显得很潇洒，笔走游龙，行文流畅，大部分文字浅显易懂而且风趣。看似散乱，但是有一股强烈的凝聚力，读完是一种享受。&#8212;&#8212;当然，并非崇洋媚外了。在读一些文学作品，如鲁迅的杂文，真的感到辞藻留香是何种境界；读杰克伦敦的《旷野的呼唤》，也有置身于冰天雪地的感觉（题外话，看完这本小说，我才对狗的内心世界有了了解，开始喜欢这种动物来）。遗憾的是，看到国内技术作者(家)写出这种级别的文字不多。文字与技术的驾驭能力都要精深，并且作者有足够的修养，能够举重若轻，深入浅出。我读国内著作不多，印象最深的是候老师的《深入浅出MFC》和他写的其他文章。很深的中国古文字造诣，读起来技术于文学的双重享受；以及同样值得学习的气度与修养。</p>
<p>现在阅读自己以前写的一些Blog，简直在自言自语，自怨自艾，并没有多少实际意义&#8212;&#8212;除了Blog作者本人，否则谁也不明白Blog作者在写这些文字的时候的心态，以及自己所要表达的具体意义。我将这些Blog定义为&#8220;口水文字&#8221;，在我看来，这些Blog在<strong><u>浪费阅读者的时间</u></strong>，并且从某种程度上表现了急于求成的心态，用流行的一句话说，是浮躁。浮躁并不仅仅表现为狗熊掰玉米，也表现为急于宣泄自己的内心情感。我们处在社会中，因而复杂，如同浑浊的水；任何没有经过沉淀的思想，情绪，方法，技术，论点，就急于将其表现，其结果是，非但对自己没有好处，对于接受的一方，可能造成更大的振荡。具体的表现就是浪费阅读者时间，然后要么陪你一起郁闷，很不爽；要么来一句faint，这也拿来写。显示中沉淀过后的水让人神清气爽，同样，经过彻底思考得出的东西才最有价值。</p>
<p>实际上，高产作者的Blog更新却往往很慢。好几天才一篇。因为严谨，所以不愿意将就；因为对读者负责，所以要反复确证。我猜想，可敬可爱的作家们，早先可能苛刻如&#8220;僧推（敲）月下门&#8221;的古人，字斟句酌，反复思考，附之以大量练习，因为认真，因为沉静，才会有今天的成就。所谓厚积而薄发，看来任何行业都如此了。</p>
<p>早先写了一些文字，很累。不知道别人怎么写的。写一篇两千字的技术文章（哪怕很简单的）需要花掉我两个晚上的时间，或者更多。我不愿意写出的东西让人看不懂，不满意将就；更不愿意挨骂。然后很久都没有写什么长一点的技术文章。因为技术积累不够，写的时候需要查很多资料才能完成，真的很累。</p>
<p>发觉自己的情绪正在被感化，学东学西，心浮气躁，不能沉静，这样很难真正有所长进。因此撰下此文，给自己警醒。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date>2004-05-15 09:37:20</wp:post_date>
		<wp:post_date_gmt>2004-05-15 01:37:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b2%89%e9%9d%99%ef%bc%8c%e6%b2%89%e9%9d%99%ef%bc%8c%e6%b2%89%e9%9d%99%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>重拾EJB</title>
		<link>http://michael.nona.name/archives/39</link>
		<pubDate>Mon, 17 May 2004 01:37:23 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/39</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Ed Roman的《Mastering EJB》在我手上放了一年多，前两天才正式开始看，今天终于把第一篇看完了，对SessionBean, EntityBean, MessageDrivenBean做了个回顾；同时继续体会着EJB强大而严整而优美的体系。重新阅读这本书并非我情愿。我要找新工作，大部分相关的工作都要求J2EE背景。虽然我非常熟悉Servlet, JSP, 以及一系列的开发框架，但是不愿意学习EJB以至于我一直都羞于跟人提起我懂J2EE。EJB是J2EE的灵魂。虽然在我情愿使用J2EE框架中的其他组件集如JTA, JAAS, JCA，却对EJB讳莫如深。原因很简单，设计过于复杂。我大致上了解EJB的基本结构却从不考虑使用。记得今年的Sun Java TechDays上，我问Doris Chen博士，&#8221;I like J2EE, but should I use EJB in every application?&#8221;她的回答显然不令我满意：&#8221;No. If you need transaction, use EJB, otherwise you don't have to.&#8221;。</p>
<p>现在重读既然迫不得已，但是决定读，就得好好读。好在我找到了一个久已安装但从未使用的Eclipse插件Lombz，并且在找它的更新的时候找到了这篇<a href="http://www.tusc.com.au/tutorial/html/index.html"><font color=#0000ff>很棒的教程</font></a>。这篇教程让我从无趣的编写4个接口(Home接口, LocalHome接口，Remote接口, Local接口)中逃出，这使我真正觉得编写EJB简单起来，并且暂时忘却了EJB设计的复杂。后来我发现Lombz简直就是XDoclet的ejbobject Task的封装，又觉得Lombz不过尔尔，又异想天开自己编写一个插件（想到我的前一篇Blog了，应该沉静）。</p>
<p>真正读完第一部分，我发现EJB并不复杂。理解了Rmi调用，理解了SessionBean与EntityBean的定义与区别，理解了Application容器调用EJB的过程，一切都很明朗了。再利用Lombz，从真正实际的Bean开始开发而不是首先一堆Remote Interface，更加符合我的开发习惯；在标准的javadoc中加入若干ejb标签，XDoclet能够自动生成其他的相关接口，甚至Bean Manage Persistence EntityBean的DAO接口。EJB的神秘感消失了，我不再讨厌它了，甚至有在下一个项目中使用它的想法。目前唯一的麻烦在于，如何在EJB中应用最佳实践，如何在Stateful SessionBean/Stateless SessionBean中作出选择，如何选择本地、远程接口等等需要在实际项目中思考的东西。</p>
<p>有几点我不太明白的地方：</p>
<p>1 CMP看起来很不错，在容器能够胜任的情况下，如何选择Hibernate(或JDO)和CMP?</p>
<p>2 如果在EJB中使用Hibernate或者JDO作为O/R映射持久层&#8212;&#8212;毫无疑问要用到DAO模式&#8212;&#8212;那么这个Bean就是BMP了，不过这个ManagedBean的具体实现由Hibernate（或JDO）代劳了。如果这个前提成立，Hibernate现在已经足够强大，那么Hibernate的出现，EntityBean将不存在BMP与CMP之分了？</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date>2004-05-17 09:37:23</wp:post_date>
		<wp:post_date_gmt>2004-05-17 01:37:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%87%8d%e6%8b%beejb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>Who is rolling the world?</title>
		<link>http://michael.nona.name/archives/40</link>
		<pubDate>Fri, 04 Jun 2004 01:38:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/40</guid>
		<description></description>
		<content:encoded><![CDATA[<p><font face="Courier New" size=2>下午下班回家，看到路上的来来往往，熙熙攘攘的人群，似乎每个人都有着自己的目标与道路；但是我看到的每个人，对，每个人脸上都似乎疲惫，都清晰的写着：别理我，烦着呢。西直门外宽阔的人行道上，有两个报刊亭，互相并不叫卖。地上有很多卖香烟的，一个两个木（纸）盒子摆在地上，又一些常见品牌的烟，一律10块钱2盒，也不知道是真是假的；一个白头发的老者，并不熟练的拉着小提琴，面前立着一块牌子，虽然我每天走来走去，却从未留意他拉的技术如何，当然更没有往他身前的桶里投入任何东西。</font></p>
<p><font face="Courier New" size=2>往西直门地铁站上短短的几百米的距离里，最多的是一些闲人，一般是农妇打扮，或者带个孩子，在那里低声的叫卖着&#8220;发票，发票&#8221;。进入地铁站，在楼梯的下面，有两位老者，一位拉二胡，一位吹笛子。两人在那里每天吹拉，声音通过喇叭传出来，响彻整个地铁站。应该说他们的演奏水平还不错。然而大多数人，如我一样，茫然、匆匆、坚定地走过，似乎二位从未存在过。倒是昨天我看见一个二十来岁的姑娘，快步走过，掏出5角纸币，放入了两位演奏者身前几乎空着的小铁桶中。</font></p>
<p><font face="Courier New" size=2>地铁站依旧拥挤。似乎从来都如此。每个人又都是疲惫不堪。</font></p>
<p><font face="Courier New" size=2>我想问，每个人都在这样努力的工作着，东边的往西边，西边的往东边；匆匆而来，匆匆而去&#8230;&#8230;Who is rolling the world to the death? 想到这个问题，我心里居然又开始升起一种悲伤。到底工作是生活的一部分还是反过来？或者，更现实的说，工作是生活的必要条件&#8212;&#8212;只有工作，你才能生活？如果不是这样，为什么，为什么你我见到的大多数人，都在匆忙，都在挣扎？</font></p>
<p><font face="Courier New" size=2>谁能给我一个答案？<br /></font><font face="Courier New" size=2></font></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2004-06-04 09:38:00</wp:post_date>
		<wp:post_date_gmt>2004-06-04 01:38:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>who-is-rolling-the-world</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>26406</wp:comment_id>
			<wp:comment_author><![CDATA[Tina]]></wp:comment_author>
			<wp:comment_author_email>tinazhou030@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.137.78.103</wp:comment_author_IP>
			<wp:comment_date>2007-01-10 10:47:25</wp:comment_date>
			<wp:comment_date_gmt>2007-01-10 02:47:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我是偶尔在search我的论文材料的时候看到你的blog，很好玩，你看上去似乎是个学文科的人，这么多的思考，这么多的问题，还有这么多的不确定的答案，工作是不是等同于生活，生活是不是以工作为基础？这样的问题，就算解决了还是会过着疲惫的生活。而为什么要让自己那么疲惫呢？我今天与人吵架，难道就要让坏心情破坏整个生活；我今天工作不顺利，难道就要觉得全世界的灯都暗了吗？也许不用，因为我这个人是世界上独一无二的，我都不允许别人来伤害我，为什么我自己却要伤害自己呢，凡事对自己说得过去就行了。别人的事就让它gone with the wind.我很喜欢阿甘正传里的一首插曲，里面有句歌词，my friend, the answer is blowing in the wind``]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>58807</wp:comment_id>
			<wp:comment_author><![CDATA[晃倒乔丹]]></wp:comment_author>
			<wp:comment_author_email>martin_tree@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.133.80.152</wp:comment_author_IP>
			<wp:comment_date>2007-09-11 17:56:15</wp:comment_date>
			<wp:comment_date_gmt>2007-09-11 09:56:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有时候把事情看的太透了，常常会有太多的痛苦。但是转念一想不同知识层次的人，各自都有各自的痛苦，这使我常常想起孙悟空跳不出如来的五指的情景。后来我想一个人快乐与否，关键是看自身的心态。关于这一点我也不敢确定，唉~~，人生涵盖的内容太多，太广，太深了，一起努力吧！Good luck!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>推行Struts+Hibernate遇阻</title>
		<link>http://michael.nona.name/archives/41</link>
		<pubDate>Tue, 08 Jun 2004 01:38:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/41</guid>
		<description></description>
		<content:encoded><![CDATA[<p>上周换了新工作。本来以为这个公司名气大一些，自己在技术上能够有一些进步。但是经过一周的工作，发现公司的项目实际上运行在一种原始的状态下面。公司的大多数B/S项目都是使用Servlet+Jsp来进行，在JSP中，我发现大段大段的Java代码。没有单元测试，功能测试也很初级，交付前的产品Bug多多，&#8230;&#8230;。</p>
<p>大公司也不过如此，我心里稍微有些失望。但是我还是积极的想办法将成熟的解决思路提供出来。比如使用Struts分离业务逻辑与表现，使用Hibernate分离数据操作与业务逻辑。但由于公司缺乏对相关技术了解的人员，项目经理考虑的比较多，最终决定只采用Struts，至于我推荐的Hibernate，死活都不准备用了，原因很简单，考虑到效率问题，尽管我花了很多时间来说，Hibernate的效率如何如何高。对于这些惯用SQL的开发者，不让他们写SQL总觉得不放心。不用也好，用Hibernate最好配合使用Spring, 倒时候又有一堆的东西要费口舌。冰冻三尺非一日之寒，看来以后我要做的事情多了。</p>
<p>能应用上Struts也挺好，将层次分开后至少能够加强单元测试了。不过我是绝对不愿意写那一堆一堆的SQL来进行持久化的，公司有一群变态的SQL高手，写SQL跟写论文似的，一写就是一大段，都不带打转。</p>
<p>PS. 需求设计才是项目中最重要的。理解了客户的需求才是项目成功的基础。昨天去见客户，从头到尾我都没有明白他们明确的要什么。最后客户说：我们也晕，我们都不知道自己要什么。Faint。</p>
<p>真正的技术方案已经比较成熟了，无非是分层设计，层次之间减少耦合；或者注重业务，将与业务无关的部分用AOP孤立出来。可惜的是，在做项目的过程中，只有重用的开发模式，没有重用的开发代码。一个全新的项目可以将你前面积累的代码和数据库设计完完全全的否定掉。</p>
<p>遗憾的是，现在看到比较多的讨论是对技术架构的讨论，可能只有在这一点上技术人员能够从中得到真正属于本行业的成就感，如同F1车手拥有了一款好车，篮球选手得到了一只极品斯伯丁。真正在设计期的东西如概要设计，详细设计，功能限定，项目本身的意义所在，反而无人关注。这也许是因为商业机密，或者无通用性的原因，我觉得更有可能的是，和客户交涉是无味的，麻烦甚至痛苦的。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2004-06-08 09:38:31</wp:post_date>
		<wp:post_date_gmt>2004-06-08 01:38:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8e%a8%e8%a1%8cstrutshibernate%e9%81%87%e9%98%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>写Blog的好处</title>
		<link>http://michael.nona.name/archives/42</link>
		<pubDate>Tue, 08 Jun 2004 01:39:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/42</guid>
		<description></description>
		<content:encoded><![CDATA[<p>冰云在他的Blog中谈到写Blog的好处：<a href="http://icecloud.51.net/blog/archives/000115.html">http://icecloud.51.net/blog/archives/000115.html</a></p>
<p>其实这些并不仅仅是写Blog的好处，而是写作的好处。</p>
<p>对于我而言，除了他提到的9条，还有一条：便是娱情。很多情况下，当身边没有人可以交流的时候，书写可以使自己烦乱的心平静，可以安下心来，静静的书写。想象一下，在静谧的乡村，炊烟寥寥；小河流水，缓缓而过；树木葱郁，时有鸟鸣；微风习习，树叶沙沙&#8230;&#8230;还有什么烦心事呢？</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date>2004-06-08 09:39:09</wp:post_date>
		<wp:post_date_gmt>2004-06-08 01:39:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%86%99blog%e7%9a%84%e5%a5%bd%e5%a4%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>游戏啊，游戏</title>
		<link>http://michael.nona.name/archives/43</link>
		<pubDate>Wed, 09 Jun 2004 01:39:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/43</guid>
		<description></description>
		<content:encoded><![CDATA[<p>咖啡动力：一拥而上 <a href="http://www.blogdriver.com/showBlog.do?diaryID=191818">http://www.blogdriver.com/showBlog.do?diaryID=191818</a></p>
<p>ＣＳＤＮ：盛大归来 网络游戏能否续写传奇　<a href="http://www.csdn.net/news/newstopic/15/15807.shtml">http://www.csdn.net/news/newstopic/15/15807.shtml</a></p>
<p>DONEWS: 一篇令所有游戏圈的兄弟汗颜的文章 <a href="http://www.donews.com/donews/forum/35/2004-05/27/472901.html">http://www.donews.com/donews/forum/35/2004-05/27/472901.html</a></p>
<p>前些天在报纸上看到一幅巨大的图片：张朝阳同志身穿中国功夫衫，带领一帮ＭＭ在那里打太极拳。标题好像是搜狐进军网络游戏&#8212;&#8212;《刀剑》国产游戏开始运营。如果说丁磊自封首席架构师带领开发队伍开发《大话西游》系列网络游戏至少表明了丁磊等人对游戏的热爱而做游戏的话，那么盛大的陈天桥，搜狐的张朝阳以及一系列手里攥满大把票子准备投资的人，已经是不折不扣的在&#8220;一拥而上&#8221;，想分一抔羹了。</p>
<p>６月４号新浪网新闻，ＩＢＭ，ＳＵＮ进军网络游戏，ＩＢＭ准备把应变延伸到网络游戏中。欧美１００亿、中国如日中天的网络游戏市场，恐怕他们还在后悔为什么不早点投资。</p>
<p>我并非游戏的狂热者，但至少不是只吃素的出家人。大多数主流游戏都玩过；仙剑奇侠传给我留下了难忘的印象，StarCraft至今有时间也玩上一把。唯独对于网络游戏，我总无法忍受。我的感受与Donews上的观点保持一致。看到硬件软件运营商全都扑到这个市场上，我担心。</p>
<p>担心游戏行业，如同软件行业，软件培训行业，会做死掉。一拥而上啊&#8230;&#8230;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>43</wp:post_id>
		<wp:post_date>2004-06-09 09:39:38</wp:post_date>
		<wp:post_date_gmt>2004-06-09 01:39:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b8%b8%e6%88%8f%e5%95%8a%ef%bc%8c%e6%b8%b8%e6%88%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>工作啊，能不能不要让我感觉自己被压榨</title>
		<link>http://michael.nona.name/archives/44</link>
		<pubDate>Fri, 11 Jun 2004 01:40:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/44</guid>
		<description></description>
		<content:encoded><![CDATA[<p>拒绝了一个薪水高的小公司，以相差几乎一半的待遇来到这家听名字挺大的公司，当时我的选择没有一丝后悔。我不是一个急功近利喜欢浮躁的人，我宁愿迂腐的守着自己的技术领域，只愿在这两年左右的时间里，将技术提高，真正具备拼抢的实力。真正为赚钱的日子应该在后头，所谓厚积而薄发，我不愿现在就将自己的能量消耗殆尽。作为一个技术出身，并准备技术一辈子的人来说，缺乏积累缺乏底蕴将如同划过长空的流星，也许灿烂，但不永恒。</p>
<p>毕业后，我先后待了两家公司。一家公司50人左右，我一上岗便做了一个至今还在创造利润的项目；参与了另外一个项目的设计。然而，怀着宁作将尾，不为兵头的想法，不到半年，我便辞职来到北京。作了大半年的数据仓库的研究，最终没什么结果，还身心俱疲，于是开始了找新的工作。</p>
<p>我给自己要加入的公司的标准是：公司成立不少于八年，员工人数不少于300人，有自己的产品。还有一条原则，决不做外包的项目。这家公司各项数据都符合我的要求，还是香港上市公司。所谓人要衣装，从外表上看，这个公司对我来说确实有不少吸引力。我抱着一种在这里好好学习一场的心态，过几次笔试面试，来到了这家公司。</p>
<p>两周很快过去，我的心情逐渐被失望取代。</p>
<p>从技术上讲，我以为大公司应该有完善的开发流程，然而除了需求，其他的环节做得缺善可陈：只有需求分析，划分模块，然后各个程序员各自忙去吧。没有单元测试，功能测试仅限于项目组内的交叉测试&#8230;&#8230;这样，这个大公司表现在我面前的，只是我参加工作的第一家公司乘以6而已，人数的众多除了能够说明公司有这么大的业务消化能力，对于组成这家公司的技术员工并没有特殊的意义。公司主推自有产品&#8212;&#8212;XX平台，在我看来就是一堆业务系统的堆砌，比我看到的一些的框架相差何止百倍。由于技术人员长期战斗在项目前线，很少有什么技术培训，因此绝大多数项目使用的居然是N年前的JSP+Servlet。当我第一次看到JSP中大段大段的Java代码时，那种惊讶程度不亚于看到911世贸大楼被撞。</p>
<p>是的，如果他们愿意接受，我愿意将我所了解的、熟悉的、掌握的一些我认为先进的的东西跟他们分享。但是然后呢？没有培训，完成每个项目都消耗着自己不多的技术积累；每天都在紧得不能再紧的项目中度过，没有时间自己学习。若干个月后，面对这个技术新月异的世界，我表现将如同原始人。我们在为公司创造效益的同时，能不能，让我们能够从内而外的提高竞争力，为公司更好的工作呢？</p>
<p>我对IBM心仪很久。IBM的一位科学家这样表达他的感情：我的血液都是蓝色的。5月份找工作的时候，我给IBM投了简历，并附了一封信，表达了我对加入IBM的殷殷之情。然而如同我的预料一样，除了一封客气的告诉我我的档案已经建立，然后便没有任何回音。。倒是今天，他们给我回了信，告诉我我的简历让他们quite impressive，并让我到另外一个求职网站登记，寻找机会。我感谢他们，无论有没有机会，这至少让我体会到，IBM曾经这么温暖的告诉我，我的简历让他们impressive. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2004-06-11 09:40:35</wp:post_date>
		<wp:post_date_gmt>2004-06-11 01:40:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b7%a5%e4%bd%9c%e5%95%8a%ef%bc%8c%e8%83%bd%e4%b8%8d%e8%83%bd%e4%b8%8d%e8%a6%81%e8%ae%a9%e6%88%91%e6%84%9f%e8%a7%89%e8%87%aa%e5%b7%b1%e8%a2%ab%e5%8e%8b%e6%a6%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[大郎]]></wp:comment_author>
			<wp:comment_author_email>iexper@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.iexper.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP>218.64.28.177</wp:comment_author_IP>
			<wp:comment_date>2005-03-03 13:15:22</wp:comment_date>
			<wp:comment_date_gmt>2005-03-03 05:15:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:) 继续努力。如果能改变他们就去改变，否则谋机再动。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[Cat Jeung]]></wp:comment_author>
			<wp:comment_author_email>blackcat1@tom.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.136.172.154</wp:comment_author_IP>
			<wp:comment_date>2005-05-15 15:19:29</wp:comment_date>
			<wp:comment_date_gmt>2005-05-15 07:19:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[纯粹google 路过的。

非常感动。

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>58046</wp:comment_id>
			<wp:comment_author><![CDATA[Day]]></wp:comment_author>
			<wp:comment_author_email>yebingstory@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.162.70.212</wp:comment_author_IP>
			<wp:comment_date>2007-08-14 14:10:31</wp:comment_date>
			<wp:comment_date_gmt>2007-08-14 06:10:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[感动 
在你身上看到了一种久违的精神]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>推荐小说：向天真女孩投降</title>
		<link>http://michael.nona.name/archives/45</link>
		<pubDate>Thu, 17 Jun 2004 01:41:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/45</guid>
		<description></description>
		<content:encoded><![CDATA[<p>向天真女孩投降：<font face="MS Shell Dlg"><a href="http://cccp.onlinepeople.net/temp/surrender.htm">http://cccp.onlinepeople.net/temp/surrender.htm</a>作者：玉宇清澄 Cummingte协助整理</font></p>
<p>上帝啊，原谅我，今天我花了4个小时看完这篇小说，其中两个小时是在上班时候偷偷看的;-)。很久很久没有这么酣畅淋漓的看小说了。作者的情节设计和文笔俱佳，看得人荡气回肠，欲罢不能！小说还在连载中，不看真的可惜啊&#8230;&#8230;比起前些时候在新浪看的《捆绑上天堂》，这部小说无疑更能打动读者的心。</p>
<p>为了保持神秘，这里就不介绍内容了，大家自己去看，有什么感受多多交流！</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date>2004-06-17 09:41:06</wp:post_date>
		<wp:post_date_gmt>2004-06-17 01:41:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8e%a8%e8%8d%90%e5%b0%8f%e8%af%b4%ef%bc%9a%e5%90%91%e5%a4%a9%e7%9c%9f%e5%a5%b3%e5%ad%a9%e6%8a%95%e9%99%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>困惑</title>
		<link>http://michael.nona.name/archives/46</link>
		<pubDate>Tue, 22 Jun 2004 01:43:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/46</guid>
		<description></description>
		<content:encoded><![CDATA[<p>很长时间来一直在考虑一些关于人生、世界观很头痛的问题。为了寻求答案，我不停的读书：技术的，非技术的；文学的，哲学的；古典的，西方的，却很难找到一个合适的答案。最近看的一些快意文字让我更加郁闷窘迫。感觉如同行进入黑黑的大地，四面星光，方向茫茫。对我来说，最困难的事情似乎还不是寻找答案，而是确切的描述问题。对于我目前考虑的一些问题，我还不具备提纲挈领将其描述清楚的能力。描述清楚这个问题在我看来还需要更多的积累。</p>
<p>文学在我身上渐渐复苏起来。我不知道为这种感觉该哭还是笑。我都以为自己的精神世界将要枯竭的时候，文学，艺术等等都将离我而去的时候，文人才有的迷茫、深思、激情却在我脑海中渐渐浮现。然而，仅有的这些冲动远远不能推动创作，远远不能写出理智而具有分量的东西。还需要沉淀。然而，对于沉淀，我这个曾经迷失于沉淀的人，是否能够把握呢？</p>
<p>写下的每一篇文字都不满意，都觉得没有表达自己真正的意思。然而，如同小学课本上的《最后一只小板凳》，这篇文字目的是保持沉淀状态，而不是沉沦。权当自己写过便扔的纸条罢了。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>46</wp:post_id>
		<wp:post_date>2004-06-22 09:43:39</wp:post_date>
		<wp:post_date_gmt>2004-06-22 01:43:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9b%b0%e6%83%91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>客户交流</title>
		<link>http://michael.nona.name/archives/47</link>
		<pubDate>Thu, 24 Jun 2004 01:42:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/47</guid>
		<description></description>
		<content:encoded><![CDATA[<p>今天跟客户的监理交流的时候，我恨不得把他揪出来打一顿。</p>
<p>发现社会上费劲的人实在太多。所以，一开始就把谈话对象（你的客户，你的用户）的智商放到最低层次，然后再一步一步告诉他想要的东西。比如，你告诉他什么是资料归档，那么你最好做好从操作鼠标点击左右键开始的心理准备。这样做也许会伤害高智商用户（客户）的感情，但是，相信我吧，所谓隔行如隔山，你不会遇到多少聪明的客户的。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2004-06-24 09:42:10</wp:post_date>
		<wp:post_date_gmt>2004-06-24 01:42:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ae%a2%e6%88%b7%e4%ba%a4%e6%b5%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>58795</wp:comment_id>
			<wp:comment_author><![CDATA[晃倒乔丹]]></wp:comment_author>
			<wp:comment_author_email>martin_tree@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.133.80.152</wp:comment_author_IP>
			<wp:comment_date>2007-09-11 16:46:34</wp:comment_date>
			<wp:comment_date_gmt>2007-09-11 08:46:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈，有同感]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>时间简史(A Brief History of Time) </title>
		<link>http://michael.nona.name/archives/48</link>
		<pubDate>Tue, 29 Jun 2004 01:42:44 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/48</guid>
		<description></description>
		<content:encoded><![CDATA[<p>这本书我看了半个月了，只看了50多页。全书不过186页。是我看书速度变慢的原因不是别的，正是这本书本身。史蒂芬&#183;霍金的这本畅销达237周的关于宇宙学的小册子深深吸引了我。霍金轻松而睿智的语言向我展示了庞大而广袤的未知世界。作者试图通过简单的比喻来描述深奥的物理知识，然而让我这尤其让我苦恼。也许这是比喻的坏处&#8212;&#8212;让明白的人更清楚，让不明白的人更糊涂。我无法从他给的比喻与他所描述的抽象事物之间建立一种合理的、能够让我大脑接受的桥接关系。狭义相对论，广义相对论，不确定性原理&#8230;&#8230;我现在才明白学生时代学习的物理知识在这本书面前显得何其肤浅与渺小。这种抽象与模糊并没有抹杀我的兴趣，恰恰相反，我对它兴趣更加浓厚了：又一个对我而言未知却很有意思的领域。我感觉大脑的某处被开垦开来，我现有的知识不足以理解它的全部内容，而且没有一个安静的环境让我来静静的思考其中内容所蕴含的哲学（物理学）原理（ps. 有趣的是，物理学的起源居然是亚里斯多德等西方哲学家提出的。这么说一个成功的物理学家首先是一个唯物主义哲学家。这个论证在从历史的纵向看来是完全成立的）。</p>
<p>也许我需要的是一个安静的环境。不能在地铁上看这本书了。我的定力还不足以一边防止摔倒一边看书并思索书中抽象的宇宙世界。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>48</wp:post_id>
		<wp:post_date>2004-06-29 09:42:44</wp:post_date>
		<wp:post_date_gmt>2004-06-29 01:42:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%97%b6%e9%97%b4%e7%ae%80%e5%8f%b2a-brief-history-of-time</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>感叹：有多少东西被你丢弃</title>
		<link>http://michael.nona.name/archives/49</link>
		<pubDate>Tue, 06 Jul 2004 01:43:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/49</guid>
		<description></description>
		<content:encoded><![CDATA[<p>我犯了一个巨大的错误，那就是打算不用任何O/R映射的工具来实现新项目中所有的底层数据操作。当我完成两个实体类的CRUD操作时，我面对的是两个巨大的、充满SQL语句、看起来乏味至极毫无创意的一堆INSERT, UPDATE, DELETE。我不得不承认我的错误：面对这样一个可能有三十多个表、每个表最多有二十多个字段的O/R映射操作，正常的人都不会将这些无味的工作进行到底的。我不禁想起了EJB中的BMP：在一个稍具规模的系统中，究竟有谁会最终去手写这么多重复毫无创造力的纯粹体力劳动的该死的SQL来维护对象持久性？也许有人，肯定不是我。</p>
<p>因为项目以及技术熟练度的原因，我们不能采用Hibernate、JDO或者任何一种开源的O/R映射框架。无奈之下我重新看起了公司自有产品平台的关于数据映射部分的东西。在早先的时候，这个笨重庞大缺乏文档的平台被我讥讽了无数次：没有体现任何设计模式，所有的对象都可以New出来（也只能通过new的方式产生实例）。他的DAO跟我理解的DAO完全不是一回事，平台的DAO等于数据操作+数据原型。毫无疑问，追求优美的我当然不会放过这个毫不OO的缺点，于是他被我打入冷宫，直到现在。然而，现在重新看这个DAO的设计，却能够很好的将我从困境中解脱出来&#8212;&#8212;他提供了一个代码生成器！通过一步一步地Next，一个二十个字段的表映射的DAO(我很忌讳这个词，读音同'岛')和它对应的ValueObject，在几秒之内产生出来。令我不禁震惊。</p>
<p>于是我开始重新思考这个平台的价值：简单，易用，容易上手。这是我对它最直接的评价。无论如何，它在现有条件下为我节省了大量的时间精力，并且提高了项目的成功率。这个饱经我嘲笑冷遇的平台，第一次在我眼里可爱起来。</p>
<p>我不禁开始感叹，有多少东西被我们在追求技术的过程中轻松的丢弃？由于第一眼的看不上，以后便一直抱有偏见，比如我现在一直耿耿于心的WebService, EJB, 以及抱有观望态度的AOP。自以为对软件之美已经有了自己的见解，但在这个项目中救我于水火的却是我看不上的东西。</p>
<p>我又记起来很土的一句话，生活中不是缺少美，而是缺少发现。这句话用在对技术的学习，倒也合适。我想我以后不应该再随便下结论了，无论对一个小得不能再小的方法，还是一个宏大的框架蓝图。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>49</wp:post_id>
		<wp:post_date>2004-07-06 09:43:04</wp:post_date>
		<wp:post_date_gmt>2004-07-06 01:43:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%84%9f%e5%8f%b9%ef%bc%9a%e6%9c%89%e5%a4%9a%e5%b0%91%e4%b8%9c%e8%a5%bf%e8%a2%ab%e4%bd%a0%e4%b8%a2%e5%bc%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>102</wp:comment_id>
			<wp:comment_author><![CDATA[vincent zou]]></wp:comment_author>
			<wp:comment_author_email>vin_zou@21cn.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.108.8.34</wp:comment_author_IP>
			<wp:comment_date>2005-06-30 14:18:25</wp:comment_date>
			<wp:comment_date_gmt>2005-06-30 06:18:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[没有完美,所以益发追求完美------]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Joshua Bloch leaves Sun and joins Google</title>
		<link>http://michael.nona.name/archives/50</link>
		<pubDate>Thu, 08 Jul 2004 01:44:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/50</guid>
		<description></description>
		<content:encoded><![CDATA[<p>一大早就在TSS看到这个消息，这下的震惊与失落不亚于当初Rich Gree离开Sun.</p>
<p>Josh是Effective Java的作者，他的书一直陪伴着我，为我编写高质量的Java代码提供指引。他设计的Collections框架也是迄今最受好评的类库框架之一。同时他还是JSR175(A Metadata Facility for the Java<sup><font size=-2>TM</font></sup> Programming Language)的Expert Lead. 它对Java领域的贡献远远不止这些。</p>
<p>又要走了，无论Josh在新的工作地点从事什么工作，有一点可以确认，他的从事立场再也不会是SUN了。这对Sun是巨大的损失。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2004-07-08 09:44:06</wp:post_date>
		<wp:post_date_gmt>2004-07-08 01:44:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>joshua-bloch-leaves-sun-and-joins-google</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>重新发明轮子, 并不是每次都那么愚蠢</title>
		<link>http://michael.nona.name/archives/51</link>
		<pubDate>Mon, 12 Jul 2004 01:44:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/51</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Don't reinvent the wheel - 这句话在Java领域以至讳莫如深。他的大意是好的，不要做重复的工作，在已经有解决方案的情况下，采用成熟的东西比重复的创造要好得多。然而，并非所有情况下都满足的。我要一只自行车轮，但在我面前的只有火车轮和汽车轮。两者功能相近，构造原理却大相径庭。为了不重新发明轮子，那么我有两种选择：1) 将火车轮或者汽车轮进行修改，让他适合我需要的自行车轮项目；2) 更改我的基于自行车轮的解决方案，让他成为一个基于火车轮的项目。一看便知，这两种解决办法都是如此笨拙与牵强，那么，这个时候，除了Reinvent the wheel, 你有更好的办法吗？</p>
<p>本来想在项目中应用Struts, 但是不知原因他与公司的现有平台不兼容。花了两天时间，请产品部的同事来帮忙，都没有解决这个问题，谁知道会在这个问题上纠缠多久？于是干脆放弃。参考了SprintMVC和Struts的MVC实现后，花了两天时间，整理了一下想法，自己做了一个MVC实现。整个实现核心部分只用了4个POJO，一个Servlet和一些跟具体项目相关的配置文件。它最大的特点是简单。具备Java知识的人可以在1小时内熟练掌握它；支持多模块同时开发，将整合工作量降到最低；更具优越性的是它对公司现有的开发模式影响很小，学习难度以及思维转换的坡度很小。</p>
<p>看来，我发明的这个轮子还挺适用。:-)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date>2004-07-12 09:44:35</wp:post_date>
		<wp:post_date_gmt>2004-07-12 01:44:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%87%8d%e6%96%b0%e5%8f%91%e6%98%8e%e8%bd%ae%e5%ad%90-%e5%b9%b6%e4%b8%8d%e6%98%af%e6%af%8f%e6%ac%a1%e9%83%bd%e9%82%a3%e4%b9%88%e6%84%9a%e8%a0%a2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>我们在惧怕什么？</title>
		<link>http://michael.nona.name/archives/52</link>
		<pubDate>Tue, 13 Jul 2004 01:45:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/52</guid>
		<description></description>
		<content:encoded><![CDATA[<p>无知无畏，这句话在技术领域似乎行不通。一旦某种技术奠定下来，这种技术形式，不，更要命的是技术思路，牢牢地限制住了开发人员特别是项目领导人员的思维。新的技术观点来的时候，要么充耳不闻，要么极端排斥。从某种意义上说，软件公司的软件管理水平反而不如这些公司的客户。我们在给客户做解决方案的时候，想办法说服客户:这套软件会给管理带来多大观念的转变从而使得工作效率大幅提升&#8212;&#8212;我们成功地说服了客户，做成了一个又一个的项目。但是，当新的技术，新的观念来的时候，我们却比客户还顽固。</p>
<p>对一个新技术的论证过程一般是从对它的批判开始的。我觉得这一点非常怪异。论证的基本论调往往首先是这个新的东西必须适应现有的哪怕是不正确的开发模式和开发技术。如果说这是对现有技术的尊重和继承也无可厚非，但是这一点绝不应当是评估一个新技术（新模式）的首要考虑因素。时代在在发展，技术在进步，抱残守缺只能导致生产效率、生产质量的降低，从而导致整体竞争力的下降，两相比较，孰重孰轻？</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>52</wp:post_id>
		<wp:post_date>2004-07-13 09:45:25</wp:post_date>
		<wp:post_date_gmt>2004-07-13 01:45:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e4%bb%ac%e5%9c%a8%e6%83%a7%e6%80%95%e4%bb%80%e4%b9%88%ef%bc%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>原来,机缘是这样离我而去</title>
		<link>http://michael.nona.name/archives/53</link>
		<pubDate>Wed, 14 Jul 2004 01:45:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/53</guid>
		<description></description>
		<content:encoded><![CDATA[<p>昨日梦佳人, 欢声笑语，耳厮鬓摩，醒来惆怅未了, 却在QQ收到梦中人的消息：</p>
<p>我昨天离开北京了，想想还是没跟你联系。</p>
<p>很难分析当时的心情。惆怅？遗憾？失落？人说&#8220;七年之痒&#8221;，七年过后，依然如故。谁说少年的轻狂只能激情一时？</p>
<p>记起了97年我写的一首诗：</p>
<p>三月水涨，那条河淹不过我的思念<br />双凤亭里，你永在亭阁旁</p>
<p>7月了，曼河涨水时间已过，学生的暑假开始。至于双凤亭，更估计是无人前往了。当初的佳人，已经天各一方；那个在河堤上因为思念而久久不愿离去的少年，那个以河堤杜撰悲剧爱情小说的少年，除了纯真，似乎什么也没失去</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>53</wp:post_id>
		<wp:post_date>2004-07-14 09:45:30</wp:post_date>
		<wp:post_date_gmt>2004-07-14 01:45:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8e%9f%e6%9d%a5%e6%9c%ba%e7%bc%98%e6%98%af%e8%bf%99%e6%a0%b7%e7%a6%bb%e6%88%91%e8%80%8c%e5%8e%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>58794</wp:comment_id>
			<wp:comment_author><![CDATA[晃倒乔丹]]></wp:comment_author>
			<wp:comment_author_email>martin_tree@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.133.80.152</wp:comment_author_IP>
			<wp:comment_date>2007-09-11 16:40:24</wp:comment_date>
			<wp:comment_date_gmt>2007-09-11 08:40:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[原来大哥也是性情中人呐~~~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>今天看了看链接统计</title>
		<link>http://michael.nona.name/archives/54</link>
		<pubDate>Thu, 15 Jul 2004 01:45:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/54</guid>
		<description></description>
		<content:encoded><![CDATA[<p>今天看了看Blog中的链接统计，发现一个很有趣的现象：受访问最多的Blog居然是&#8220;<a href="http://webuc.net/mechiland/archive/2004/04/21/437.aspx">大话西游台词回顾</a>&#8221;，几乎每天都有十几次点击，多的达三十多次。来源无一例外是Baidu或者Google等搜索引擎。而与此同时反馈最多的也是这个Blog。从此可以看出，大部分人对《大话西游》依然情有独钟，即便多年过后，有些台词现在读来依然令人回味无穷，特定的场合想起特定的台词，令人不禁心有戚戚。比如，&#8220;<font face=宋体>在一个月黑风高阴森恐怖的晚上我是至尊宝你是白晶晶<span lang=EN-US>,奇妙的爱情就从桥头上这一点火开始的< ?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o :p></o></span></font>&#8221;，想起电影中菩提和至尊宝的场景重现，令人捧腹，还有&#8230;&#8230;算了，不说了，再次读这些台词，感觉真的不错。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date>2004-07-15 09:45:52</wp:post_date>
		<wp:post_date_gmt>2004-07-15 01:45:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bb%8a%e5%a4%a9%e7%9c%8b%e4%ba%86%e7%9c%8b%e9%93%be%e6%8e%a5%e7%bb%9f%e8%ae%a1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>使用AOP来分离权限关注</title>
		<link>http://michael.nona.name/archives/55</link>
		<pubDate>Thu, 22 Jul 2004 01:46:14 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/55</guid>
		<description></description>
		<content:encoded><![CDATA[<p>对于权限管理的做法，在WEB实现上，无非有以下几种：</p>
<p>1 利用Filter，对所有进入的URI进行解析，并取得当时Session中的User信息，然后通过RBAC的机制，将此链接需要的权限与用户拥有的权限进行比较，然后进行相应的处理。这种做法有很多好处：简单，容易实现，并且对系统侵入性也不强。这里URL就是RBAC中的资源了。这样做的缺点是所有对数据的操作必须通过URL来体现，这一点在现代的程序中不太好实现。如果采用Struts, XWork或者Tapestry，采用同一个URL（浏览器看来）进行处理多项任务已不是什么稀奇的事。</p>
<p>2 利用一个BaseServlet(Servlet+Jsp经典模式)或者BaseAction(Struts模式)或者BasePage(Tapestry模式)或者BaseController(SpringMVC模式)，对所有的请求先进行过滤进行权限操作，然后再处理。稍微看一下就知道这种模式跟Filter并无本质不同。优缺点同上。</p>
<p>那么，如果要实现更为细致的权限操作，精确到某个方法的权限，该如何做呢？典型的做法如下：</p>
<p><font color=#a52a2a>public someFunciton() {<br />&nbsp; //权限判断<br />&nbsp; User user = context.getUser();<br />&nbsp;&nbsp;if (user.canExecuteThisFunction()) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // do the business method<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // ...<br />&nbsp; } else {<br />&nbsp;&nbsp;&nbsp;&nbsp; throw&nbsp;new&nbsp;PermissionDeniedException();<br />&nbsp; }<br /><br />}</font></p>
<p>这种做法能够将权限的粒度控制到具体的业务方法，因此它的控制能力应该是强大的。可以看到，权限判断部分对于每个方法几乎是独立的，同时也是无趣，易出错的。有了AOP，这一部分就可以忽略了，新的业务方法可以这样写：</p>
<p><font color=#a52a2a>public someFunciton() {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // do the business method<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // ...<br />}</font></p>
<p>没有了额外的权限操作，这个业务方法看起来那么清晰自然。</p>
<p>将对权限的操作作为一个Advice，并将Advisor关注到所有的业务方法（可能有某一个特定package），然后，剩下的事情就由你的RBAC以及AOP来完成了。通过这样的分离，纵向的一个业务方法被分割为一个更为自然的业务方法和一个关注点。这个关注点写法可能如下：</p>
<p><font color=#a52a2a>public class PermissionCheckAdvice implements MethodBeforeAdvice {<br />&nbsp;&nbsp;&nbsp; public void before(Method arg0, Object[] arg1, Object arg2)&nbsp; throws Throwable {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//权限判断<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!this.getContext().getUser().canExcute(this, arg0)) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throws new PermissionDeniedException();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; }<br />}</font></p>
<p>可能有个问题：如何取得context或者当时上下文环境的User呢？答案是使用IoC（或称Dependency Injection），将上下文环境或者User作为参数反向传入到逻辑方法中。当然，在传入之前，这些变量是需要初始化的。这个初始化工作可以在SuperServlet中进行，并且以Session单例的形式保存在应用程序中。下面是Spring配置文件的例子：</p>
<p><font color=#a52a2a>&lt;beans&gt;<br />&nbsp;&nbsp; &lt;!-- Bean configuration --&gt;<br />&nbsp;&nbsp; &lt;bean id="businesslogicbean"<br />&nbsp;&nbsp; class="org.springframework.aop.framework.ProxyFactoryBean"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;property name="proxyInterfaces"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;value&gt;IBusinessLogic&lt;/value&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/property&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;property name="target"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ref local="beanTarget"/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/property&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;property name="interceptorNames"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;list&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;value&gt;thePermissionCheckBeforeAdvisor&lt;/value&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/list&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/property&gt;<br />&nbsp;&nbsp; &lt;/bean&gt;</font></p>
<p><font color=#a52a2a>&nbsp;&nbsp; &lt;!-- Bean Classes --&gt;<br />&nbsp;&nbsp; &lt;bean id="beanTarget" class="BusinessLogic"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;property name="user"&gt;&lt;&lt;YOUR USER OBJECT&gt;&gt;&lt;/property&gt;<br />&nbsp;&nbsp; &lt;/bean&gt;</font></p>
<p><font color=#a52a2a>&nbsp;&nbsp; &lt;!-- Advisor pointcut definition for before advice --&gt;<br />&nbsp;&nbsp; &lt;bean id="thePermissionCheckBeforeAdvisor"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; class="org.springframework.aop.support.RegexpMethodPointcutAdvisor"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;property name="advice"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ref local="thePermissionCheckBeforeAdvice"/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/property&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;property name="pattern"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;value&gt;.*&lt;/value&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/property&gt;<br />&nbsp;&nbsp; &lt;/bean&gt;<br />&nbsp; &nbsp;<br />&nbsp;&nbsp; &lt;!-- Advice classes --&gt;<br />&nbsp;&nbsp; &lt;bean id="thePermissionCheckBeforeAdvice" class="PermissionCheckBeforeAdvice"/&gt;<br />&nbsp; <br />&lt;/beans&gt;</font></p>
<p><font color=#a9a9a9 size=2>-----------------------------------------------------------</font></p>
<p><font color=#a9a9a9 size=2>注：API名称还需要深刻考虑，这里仅用作解释使用。Spring的配置文件也仅作参考，可能有错误，实际中还需需要更多考虑。</font></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date>2004-07-22 09:46:14</wp:post_date>
		<wp:post_date_gmt>2004-07-22 01:46:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8aop%e6%9d%a5%e5%88%86%e7%a6%bb%e6%9d%83%e9%99%90%e5%85%b3%e6%b3%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>530</wp:comment_id>
			<wp:comment_author><![CDATA[jianglibo]]></wp:comment_author>
			<wp:comment_author_email>jianglibo</wp:comment_author_email>
			<wp:comment_author_url>http://www.bigway.cn</wp:comment_author_url>
			<wp:comment_author_IP>202.101.188.217</wp:comment_author_IP>
			<wp:comment_date>2005-11-25 10:58:48</wp:comment_date>
			<wp:comment_date_gmt>2005-11-25 02:58:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[AOP没有关注过。
不过文章中提到filter方法对现代程序不好实现这一点持有异议。
从http的基本原理来看，相同的url必然返回相同的结果（这里的url包括递交的参数post or get）。http request就好像是远程的调用一个函数，如果函数传递的参数一样，返回的结果当然一样。

struts接触过，并且用它写了一个程序http://www.51dir.com，它将特定的url与特定class联系起来，并且对参数用另一个类包裹一下简化参数的处理。这种技巧随处可见。每一种框架都有一套处理url和handler之间的映射关系的技巧。

如果你接触过zope，或者mod_python内置publisher handler，你会发现他们的处理方法更加的直观和朴素。
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>AOP实现分离权限关注 - 补遗</title>
		<link>http://michael.nona.name/archives/56</link>
		<pubDate>Fri, 23 Jul 2004 01:46:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/56</guid>
		<description></description>
		<content:encoded><![CDATA[<p>昨天的Blog中我描述了使用AOP分离权限关注的基本做法。回家仔细想了想，把思考的结果补充一下。</p>
<p>我们知道，在基本的RBAC模型中有以下基本（接口）对象：Domain, Group, User, Role, Privilege, Operation, Resource以及对外的SecurityManager。Privilege通过Operate Resource而产生，Role则对应若干个Privilege。不同的Domain, Group, User拥有不同数量的Role，其中User的Role可以继承自Group，也可以继承自Domain；Group的权限可以继承自Domain。对外表现时，可以简单地通过SecurityMananger.checkPermission(User,&nbsp; Privilege)的返回值true/false进行判断。上面每个对象都是接口，SecurityManager可以通过IoC反向注入，从而使得这种权限模型的使用比较灵活。</p>
<p>在实际情况中，这种权限系统中Resource的定义方法与粒度最难以控制。不同的业务系统中可能有不同的定义方式。而且这种方式的交流非常不方便。以一个普通的&#8220;科研项目管理&#8221;项目为例：系统中需要进行权限控制的东西可能有：用户信息（增删改查），项目信息（增删改查），日志信息（查看，统计）等等。这种权限的控制如果按照垂直编程的方式来写，需要进行以下工作：</p>
<p>研究：需要控制的资源到底是什么？用户信息？项目信息？这些东西如何表现？这个问题在这种模型中很难考虑清楚。最终的结果往往是，使用没有Resource接口的权限模型，形成一份新的文档：权限代码以及对应说明表。每个编程人员在编写相应的业务逻辑时，都需要参考这个表，并将程序中加上一序列的if --- else来判断权限。这种做法无疑是危险的。因为一旦权限代码发生变动， 这个业务方法马上得重写。稍微考虑不难知道，这种方法根本不可取：连基于URI的解决方案都不如。</p>
<p>可以看到，像用户信息、项目信息等等，都是业务对象，这些业务对象对于人是可理解的，但将这些业务对象作为RBAC中的资源是不合理的。因此我提出一种新的资源概念：将具体业务类、业务方法作为RBAC模型中的资源。这样才能够真正脱离权限与业务逻辑。具体做法是：将所有的业务方法名称以及对应的角色名称存入到XML文件或者数据库中，形成一个Resource库：</p>
<p><font color=#a52a2a>Method&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Role<br />------------------------------------------<br />UserManager.*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UserManager<br />UserManager.update&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UserManager<br />UserManager.update&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; User<br />LogInfo.view&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *<br />LogInfo.statistics&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LogManager<br />...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...<br />------------------------------------------</font></p>
<p>对于权限的判断，可以在RBAC的具体实现中进行。这里假定有一个SecurityManager.checkPermission(User, Privilege)(这里的Privilege实际上就是能否执行特定业务方法)的方法。根据这个方法，制作一个Aspect:</p>
<p><font color=#a52a2a>public class PermissionCheckAdvice implements MethodBeforeAdvice { <br />&nbsp;&nbsp;&nbsp; public void before(Method arg0, Object[] arg1, Object arg2)&nbsp; throws Throwable { <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!SecurityManager.checkPermission(User, Privilege)) { <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throws new PermissionDeniedException(User, Privilege); <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <br />&nbsp;&nbsp;&nbsp; } <br />}</font></p>
<p>然后使用AOP将这个Advice应用到所有的业务方法（类或者方法可能在具有普遍意义的一个package中，也可能具有一定正则意义），并截获所有的PermissionDeniedException：</p>
<p><font color=#a52a2a>public class PermissionThrowsAdvice implements ThrowsAdvice {<br />&nbsp;&nbsp;&nbsp; public void afterThrowing(Method method, Object[] args, Object target,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Throwable subclass) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //对Permission Denied Exception进行自己的处理。<br />&nbsp;&nbsp;&nbsp; }</font></p>
<p><font color=#a52a2a>}</font></p>
<p>对应的Spring Beans配置请参考上一片Blog。</p>
<p>AOP分离权限关注的文字到此截至，有些比较重要但是来不及完成的如SecurityManager如何引入，上下文环境如何取得等等，可能需要各位自行完成了。这里提出的是一种将Method作为资源的概念，希望对做权限系统的同仁有所帮助。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date>2004-07-23 09:46:36</wp:post_date>
		<wp:post_date_gmt>2004-07-23 01:46:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>aop%e5%ae%9e%e7%8e%b0%e5%88%86%e7%a6%bb%e6%9d%83%e9%99%90%e5%85%b3%e6%b3%a8-%e8%a1%a5%e9%81%97</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>开源项目OpenBUGZ启动，采用Tapestry作为前端展现框架</title>
		<link>http://michael.nona.name/archives/57</link>
		<pubDate>Mon, 26 Jul 2004 02:32:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/57</guid>
		<description></description>
		<content:encoded><![CDATA[<p>我几乎是和gigix一起学习Tapestry的。那时候学习的人并不多。不过当时gigix了解的东西比我要多很多（现在也是），比如Blog，比如Hibernate。去年吧，写了篇Tapestry入门级的文章后，便转向了数据分析、商业智能方面的研究。以后对Tapestry就没有接触了。</p>
<p>半个月前决定开启一个新的开源项目，目的首先是做成一个成型能用的产品，至少供自己部门使用；二是验证我对AOP, IoC的思考结果，三是表现J2EE的各种最佳实践，并争取能够形成某种开发模板，为以后的开发提供铺垫。刚开始本想采用appfuse的方式，Spring+Struts+Tiles+JSTL...看到这一连串的加号，我有点头晕。开发目的是为了简单，这么一个复杂的模型肯定很难说服其他人使用。Spring的使用是毫无疑问的，前台表现我想到了Tapestry，并最终选择了它。</p>
<p>上周末之前我已经设计出了大部分的用例和模型类。在DomainObject和POJO+DAO的方式选择上，我采用了后者。原因是我对DomainObject还有些理解不清。DAO也被我简化了，直接就是Service层。这要得益于Spring提供的HibernateTemplate。就是这样Service层还是简单得要命，而且异常健壮。针对Service层的Hibernate实现，我做了大量的单元测试，结果令我满意。</p>
<p>集成Tapestry的过程一波三折。按照Spring Reference中的步骤，死活无法初始化ApplicationContext。后来才恍然大悟的把ContextLoaderListener加入到web.xml才成功；对于如何在应用程序中取得ApplicationContext, 我尝试了两种方法：一是直接编写了新的BaseEngine和新的BasePage，在其中我添加了ApplicationContext的初始化和引用。这样我能从任何一个Page中取得context。这种方式是目前我采用的方式；二是将各种Page类受Spring托管，并将各种Service注入到Page中。考虑到复杂性（主要是麻烦），我没有这么做。后来阅读了Tapestry的User Manual, 便采用了更为灵活的方式，例子如下：</p>
<p>public abstract SomePage extends MyBasePage {<br />&nbsp;&nbsp;&nbsp; public abstract UserManager getUserManager();<br />&nbsp;&nbsp; ...<br />}</p>
<p>SomePage.page:</p>
<p>&lt;property-specification name=&#8220;userManager&#8220; type=&#8220;openbugz.service.UserManager&#8220;&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; global.appContext.getBean(&#8220;userManager&#8220;)<br />&lt;/property-specification&gt;</p>
<p>呵呵，真是自由而方便的实现！</p>
<p>目前OpenBUGZ已经开始编码，中间过程可能会有不少问题，一个月内应该能够完成第一个版本。届时我会将源代码发布到cosoft，有兴趣参与项目并且对上述技术不太陌生的朋友，可以与我联系。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date>2004-07-26 10:32:49</wp:post_date>
		<wp:post_date_gmt>2004-07-26 02:32:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%bc%80%e6%ba%90%e9%a1%b9%e7%9b%aeopenbugz%e5%90%af%e5%8a%a8%ef%bc%8c%e9%87%87%e7%94%a8tapestry%e4%bd%9c%e4%b8%ba%e5%89%8d%e7%ab%af%e5%b1%95%e7%8e%b0%e6%a1%86%e6%9e%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>64</wp:comment_id>
			<wp:comment_author><![CDATA[canonical]]></wp:comment_author>
			<wp:comment_author_email>zhj_gw@sina.com</wp:comment_author_email>
			<wp:comment_author_url>http://canonical.blogdriver.com</wp:comment_author_url>
			<wp:comment_author_IP>221.221.17.170</wp:comment_author_IP>
			<wp:comment_date>2005-05-25 00:38:06</wp:comment_date>
			<wp:comment_date_gmt>2005-05-24 16:38:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我对tapestry不太了解，不过感觉架构变化太大，似乎与其他前端技术无法兼容的样子。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>65</wp:comment_id>
			<wp:comment_author><![CDATA[canonical]]></wp:comment_author>
			<wp:comment_author_email>zhj_gw@sina.com</wp:comment_author_email>
			<wp:comment_author_url>http://canonical.blogdriver.com</wp:comment_author_url>
			<wp:comment_author_IP>221.221.17.170</wp:comment_author_IP>
			<wp:comment_date>2005-05-25 00:38:35</wp:comment_date>
			<wp:comment_date_gmt>2005-05-24 16:38:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我对tapestry不太了解，不过感觉架构变化太大，似乎与其他前端技术无法兼容的样子。我总觉得tapestry不会是未来的方向]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>你还敢看这些励志书吗？</title>
		<link>http://michael.nona.name/archives/58</link>
		<pubDate>Thu, 29 Jul 2004 02:33:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/58</guid>
		<description></description>
		<content:encoded><![CDATA[如果你和我一样，在之前看到这样的宣传语：

<p>

《给管理者的忠告》（费尔森著）上：“这些年读过许多管理方面的书，但像这本从细微处给人以提醒和倡导的书还是第一次看到。———管理大师汤姆·彼得斯” 
</p><p>

《拒绝借口》（奥里森著）上：“我把这本书推荐给每一个人。———《华盛顿邮报》” 

</p><p>
《狼性》（劳伦兹编著）上：“一本所有总裁的必读书！———路易斯安那州医院联合会主席鲍勃·默克尔” 

<br /> 
从而一时冲动购买下他们，作为激励自己的读物，那么，你可能受骗了：
</p><p>
<a href="http://www.blogchina.com/new/display/38135.html">http://www.blogchina.com/new/display/38135.html</a>

</p><p>

这里揭露了整个骗局。

感谢上帝，我没有买到这篇新闻中的任何一本。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date>2004-07-29 10:33:21</wp:post_date>
		<wp:post_date_gmt>2004-07-29 02:33:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%a0%e8%bf%98%e6%95%a2%e7%9c%8b%e8%bf%99%e4%ba%9b%e5%8a%b1%e5%bf%97%e4%b9%a6%e5%90%97%ef%bc%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>XMLHTTP是一种技术吗？</title>
		<link>http://michael.nona.name/archives/59</link>
		<pubDate>Tue, 03 Aug 2004 02:39:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/59</guid>
		<description></description>
		<content:encoded><![CDATA[<p>今天有人在MSN上问我有关XMLHTTP的问题，并问我有关XMLHTTP与Servlet结合的问题。我直接告诉他，直接采用XmlRPC或者Hessian吧。</p>
<p>对于XMLHTTP，我发现很多不了解它的人认为它很神秘。JavaEye上的dlee撰文声称有了XMLHTTP就不用MVC了等等&#8220;复杂&#8221;的模式，甚至有可能将WEB应用化三层为两层。在我看来，XMLHTTP的引入，仅仅，不过，是改善了用户界面，将<strong>原来需要刷新的东西变成不需要刷新而已</strong>。这种需求在以前的WEB程序中并不常见，但在现代的应用程序中，随着RIA的思想开始崛起，用户体验变得重要起来，例如：页面无刷新（典型的如树形结构的展开），或者页面的局部刷新。能够完成这项功能的XMLHTTP当然也显得重要起来。</p>
<p>XMLHTTP是一项技术吗？我从来都不这么认为。无论在Mozilla浏览器，还是在IE，他的方法/属性就那么几个：open, send, onreadystatechage, responseText, responseXML&#8230;&#8230;这么抽象的东西，完成了原来浏览器的发送请求/接受数据的请求。这么看来，XMLHTTP不过是浏览器的一个附属线程而已。你可以用它实现你想要得无刷新等等一系列效果，那是有条件的：</p>
<p>这个条件就是，在没有XMLHTTP之前和之后，你的代码都不会因此而减少，更多的情况是代码增多。对于简单的应用，例如用户登陆，像服务器提交用户名密码，返回一个true或者false来代表登录成功与否。有了XMLHTTP之后，这个登陆效果可以做得很眩，同时代码跟没有XMLHTTP之前差不多。但是对于复杂的应用，例如大数据的列表，那么你有如下几种选择来使用XMLHTTP:</p>
<p>1 对于懒人，最简单的方法莫过于在服务器端将列表的HTML生成（大段的&lt;tr&gt;&lt;td&gt;之类），然后输出。客户端用xmlhttp.responseText，将数据取得。一眼便知，这种方式除了界面无刷新，代码量，难度等等不会有多大的变化。</p>
<p>2 对于喜欢XML或者喜欢结构化数据的人，会将数据包装成为xml节点，然后在客户端用xmlhttp.responseXML取得XML。然后就有两种处理了：在我看来，最简单的处理就是写一个XSL对取得的XML进行解析然后显示，最笨的方法当然是自己解析XML节点树，然后进行处理并显示了。附带提一句，我在做一个OLAP系统的前台展示，就是用的前一种方法。因为OLAP系统的分析结果的XML形式固定。</p>
<p>3 对于基于命令的系统或者命令有限或者规则简单的系统，可以自行设计一套消息格式，在客户端与服务器端之间进行&#8220;编码-&gt;发送请求-&gt;解码-&gt;处理-&gt;发送结果&#8220;的游戏。这种玩法是我的LIVECHAT场景聊天室中采取的方式。这里面比较麻烦的是设计消息格式以及服务器端的编码、解码处理。如果可以，建议采用XMLRPC来实现。</p>
<p>也许还有其他方式的应用，我没有涉及到。但是，无论哪种方式，我们都可以看到，这些操作<strong><u>仅仅</u></strong>是前台表现层面的。对于业务逻辑，数据访问，权限控制等等，XMLHTTP有办法处理吗？</p>
<p>XMLHTTP仅仅是一种方式，一种无刷新与服务器进行交互的方式。他能够很大程度的改善web application的用户体验（而不是开发模式，更不谈开发效率）。实际上，在普通的web系统中采取xmlhttp是完全可行的，但是在需要实时操作的项目中（例如我的LiveChat），xmlhttp并不一定是最好的选择。因为创建一个xmlhttp/xmldom对象的开销比较大，假定每隔一秒向服务器发送消息，并用XMLDOM处理返回的xml节点，客户端不一定都能承受。我试着做了一些缓冲池，但是在IE环境下表现并不出色。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>59</wp:post_id>
		<wp:post_date>2004-08-03 10:39:10</wp:post_date>
		<wp:post_date_gmt>2004-08-03 02:39:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xmlhttp%e6%98%af%e4%b8%80%e7%a7%8d%e6%8a%80%e6%9c%af%e5%90%97%ef%bc%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>SOA迷惑</title>
		<link>http://michael.nona.name/archives/60</link>
		<pubDate>Fri, 06 Aug 2004 02:39:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/60</guid>
		<description></description>
		<content:encoded><![CDATA[<p>现代软件的发展过程无不向这几个方面发展：系统分层，模块之间降低耦合，高重用的开发模式和开发成果等。MDA，SOA的出现应该是这一趋势的必然结果，并且SOA必将成为未来的趋势。但是，我对这个宏大的体系架构（情愿称呼它为体系思想，因为暂时没有看到完整应用SOA思想的实例）充满了不解。</p> <p>什么是SOA? 直译过来就是面向服务的架构。基本概念是基于Web service来编写一个个的服务，然后这些服务可以重用在项目的各个功能中，甚至跨越不同的项目。三四年前，Web Service出现的时候，大量的报道追捧，说以后可能出现一些专门的提供Web Service功能服务的公司，对普通或者专有的服务进行封装并提供接口供调用。然而若干年过去了，这样的公司没有出现，或者没有什么影响力。更多的此方面尝试只停留在实验室中，就连一向前卫的Amaze网站，它提供的Web服务不过是商品的搜索而已。</p> <p>我的理解：基于WebService的SOA，既然建立在WebService之上，就只能通过提供类似于loginUser(userid, password)(用户登陆)的方法提供给项目的其他模块调用。然而，其它复杂的调用呢？饱含特定业务逻辑的流程呢？也许可以通过BPEL来进行动态配置，并提供对外统一接口。从这个层面上讲，对于业务不包含界面的功能，SOA可以完成得很好（应该说WebService完成得很好）。但是，很多时候，功能是嵌入在特定界面中的。有这样一种场景：</p> <p>已经完成了一套系统：用户及用户组管理模块。在很多其他的项目中都要用到，数据结构基本一致。按照SOA的功能点，可能有用户添加、删除、更新等方法。对外有类似于addUser, removeUser, updateUser等，为了达到调用这些WebService，客户端需要建立一些界面。建立界面的过程虽然难度不大，但是也有工作量。在各个项目之间，界面的重复工作也在继续。SOA如何将界面也能重用呢？gigix说他们在项目中将CMS嵌入为一个SOA服务，我始终想不通的是，CMS的界面是如何服从SOA的定义被其他项目调用的呢？</p> <p>每一个项目都有其不同的业务数据模型和工作流程。对这一部分的抽象并重用简直是不可能的。因此，SOA的应用领域仅限于同一个项目或者一个持续集成并可能业务规则不断变化（利用BPEL进行定义）的项目。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date>2004-08-06 10:39:36</wp:post_date>
		<wp:post_date_gmt>2004-08-06 02:39:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>soa%e8%bf%b7%e6%83%91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>Keep an eye on your soul of tech.</title>
		<link>http://michael.nona.name/archives/62</link>
		<pubDate>Mon, 09 Aug 2004 02:41:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/62</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Java,开源世界里充满着各种优秀的思想技术方法。这些方法逐渐侵入了我们的大脑，成为左右我们技术选型、程序编码的关键势力。单元测试，敏捷，Struts, Tapestry, IoC(Dependency Injection), AOP, Hibernate...我们阅读，学习，成为大潮中的水滴，如同我一样在J2EE中苦苦挣扎的我们；思考与研究并乐意共享者者成为浪花，如Robin, gigix, Yang,曹晓钢, jdon等等为我们所知。在这么多内外的氛围中，我们像长跑运动员，领跑者为欧美技术领先者，稍后为国内热心的传道士，然后是我等未名之流。奔跑固然痛苦，然而落伍更为悲哀。（扯远了）</p> <p>古语云，学而不思则惘，不情愿的，我们的大脑越来越像一个容器————因为没有时间思考。成为一个容器是很容易的————哪怕这个容器装满了钻石。没有吸取钻石的精华，永远只是一个装饰与与人炫耀的谈资。但是，就算思索足够，那又如何？只是让自己无知的圆越来越大，并且所有的自己的思考永远都在别人的光辉中。常见到这样的话语：Gavin King提出如何，Martin Fowler又认为怎样。在真正理解他们思想的基础上，我们除了敬仰并添加这些为人神圣的光辉，对于我们个人，实际上一点好处也没有。</p> <p>我的感觉是，学习成为一个逐渐领悟的过程。这个领悟需要量的积累，需要阅读大量的优秀的作品，需要，按照gigix所说的，学会盲从。所谓厚积而薄发是没有错的。但是有多少沉醉于技术的开发者，真正的"发"了呢？如我一样，成为脑袋里装满了各种最佳实践，每一样代码都能通过Effectiv Java的检验……需要积累没错，但是，请留一只眼睛，给自己的技术灵魂，告诉他，到底需要什么。更多的时候，需要一个撞击，一个大胆的撞击。这个撞击听起来可能像推翻了相对论一样可笑，但是，如果可以，请给这个万马齐喑的技术界一个震撼，并希望这个震撼可以传播到欧洲，北美去。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2004-08-09 10:41:10</wp:post_date>
		<wp:post_date_gmt>2004-08-09 02:41:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>keep-an-eye-on-your-soul-of-tech-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>14022</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen&#8217;s Blog &raquo; Blog Archive &raquo; 温水煮青蛙]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://michael.nona.name/archives/143</wp:comment_author_url>
			<wp:comment_author_IP>61.129.70.239</wp:comment_author_IP>
			<wp:comment_date>2006-10-02 00:50:36</wp:comment_date>
			<wp:comment_date_gmt>2006-10-01 16:50:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 很久以前我写过一篇blog，表达了我对目前国内技术现状的一种思考：希望有更多的人能够不仅仅跟随，更能够提出震撼性的技术框架/技术特点出来。然而，那个时候许多人包括干脆放弃了希望安心的做起了传教士，安慰着自己也麻痹着别人。那个时候是J2EE的鼎盛时期，而就在那个时候一个26岁的小伙子，一个J2EE的newbie, 写了今天无人不知的Rails，以及诞生了Web2.0代表性公司：37Signals. [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>JSValidation 1.0b4 released</title>
		<link>http://michael.nona.name/archives/63</link>
		<pubDate>Tue, 17 Aug 2004 02:42:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/63</guid>
		<description></description>
		<content:encoded><![CDATA[<p>JSValidation是强大便利的JavaScript客户端验证框架，用以在开发BS系统的过程中，已有开发框架不提供表单验证的情况下，提供一种便利的，易于管理的验证方案。不论你使用ASP/JSP/PHP/Perl或者任何一种脚本语言，JSValidation都可以工作得很好。</p> <p>感谢各位用户对它的热爱。在收集众多要求的基础上，1.0b4版更加健壮、灵活，实用。简单和实用是JSValidation追求的目标。本次更新如下：</p> <p>* 修正了以下Bug:<br />&nbsp; 1) 密码与确认密码在提示时，提示信息为"密码与password必须一致"&nbsp; (呼声很高 ;-))<br />&nbsp; 2) 在Mozilla浏览器环境中，对普通ASCII字符判断错误.（严重）<br />&nbsp; 3) 校验失败后，光标应该停在第一个出错的域中。（普通）<br />&nbsp; 4) 在IE5.0中完全不能校验（严重）</p> <p>* 增强了功能：<br />&nbsp; 1) 增强了多表单的处理，对于新的处理方式稍微麻烦，但是分布式管理的validation-config.xml更能够适合多人协作。<br />&nbsp;&nbsp;&nbsp;&nbsp; 例如，原来只需要在Html页面顶端引入&lt;script src="path/to/jsvalidation.js"&gt;，现在除了这种方式，还可以加上<br />&nbsp;&nbsp;&nbsp;&nbsp; &lt;script&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ValidationFramework.init("validation-config.xml");<br />&nbsp;&nbsp;&nbsp;&nbsp; &lt;/script&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp; 多添这一句使得validation配置文件能够分开存放，在多人项目中非常重要。当然，原有方式继续保留。</p> <p>&nbsp; 2) doValidate()方法现在更加易用，只需要在需要验证的表单上加入doValidate(this)即可。当然，&lt;form&gt;标记中的ID还是必须有的。</p> <p>&nbsp; 3) 增强了错误的显示方式。目前可以在form的配置文件中选择是显示全部还是显示第一条。（show-type="all|first"）<br />&nbsp; <br />&nbsp; 4) 增强了错误的显示效果，可以在validation-framework.js中对ValidationFailCssStyle进行更改。（这个功能不知是否实用）<br /></p> <p>项目地址：<a href="http://cosoft.org.cn/projects/jsvalidation/">http://cosoft.org.cn/projects/jsvalidation/</a></p> <p>论坛：<a href="http://cosoft.org.cn/forum/forum.php?forum_id=7008">http://cosoft.org.cn/forum/forum.php?forum_id=7008</a></p> <p>欢迎使用与反馈。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date>2004-08-17 10:42:40</wp:post_date>
		<wp:post_date_gmt>2004-08-17 02:42:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jsvalidation-10b4-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>代码生成器的存在价值</title>
		<link>http://michael.nona.name/archives/64</link>
		<pubDate>Thu, 19 Aug 2004 02:45:26 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/64</guid>
		<description></description>
		<content:encoded><![CDATA[<p>多年前用ASP的时候，就听说了有一种叫做代码生成器的神奇的东西。只需要指定数据库链接，这个代码生成器就能够产生一个界面，然后选择你需要进行生成的数据表，按一下按钮，马上基于这个表的增删改查界面以及对应的ASP程序代码就生成出来，着实方便。当时的我对ASP已经轻车熟路，看了一眼这个工具后，心中评估了一下，然后使用了一把……看到这个工具生成的ASP程序源代码，让人确实有点接受不了——大小写不区分，大段大段的冗余代码。虽然生成的代码确实能够完成特定的业务操作，但是维护性确实太差了。据说后来有一些优质的代码生成器能够生成更好的程序，但是确实是从那个时候开始，代码生成器在我心里成了垃圾代码堆砌的代名词。我情愿自己编写一行一行代码也不愿意用代码生成器。</p> <p>现在，当专注于某一个行业，某一种特定业务时，你会发现重复性是如此之大。——用户管理在大多数地方都是类似的，只是用户相对的字段有些不一样；用户登录界面、登出界面可能也是一样的，只是把某些图片换一下而已；大部分的业务操作都是增删改查，对于这种操作不断的采用同一种方式进行重复、还得小心出错；权限管理界面看起来也没什么大的不同……也许我们早就烦了。框架在某种程度上保证了项目的质量，但并不能减少编码量；某些框架甚至需要更多的编码（以及学习时间）。例如，与Servlet+JSP方式相比，Struts除了JSP, 还需要编写特定的Form, Action,并在struts-config.xml中加上几行；Tapestry则需要编写.page, .html, 对应的Page类，如果需要验证还得编写Delegate类；至于FreeMaker,Velocity之类界面工作量可能小了一些，但还得需要编写自己的简单框架用以实现MVC模式。Spring集成了这些表示层，看起来比较好……</p> <p>上述解决方案的根本问题在于，框架只是保证了项目的质量、可维护性，但是没有减少编码量。因此，代码生成器的使用便是理所当然的了。这方面已经有先例了，最有效、最能够显示代码生成的威力的，当属xdoclet的ejb任务。我们知道，创建一个EJB需要同时创建其他四个无聊的接口，xdoclet在这方面将代码生成的威力发挥到了极致。另外，middlegen也能够创建基于数据库，使用Hibernate, Struts, EJB技术的Web应用程序，他能够生成JSP, Hibernate映射文件，Java类，EJB类等。middlegen应该是我见到的最完整的应用程序生成器的雏形，但是他还不足以具体，不足以缩短编码时间。</p> <p>我思考了几天，在做OpenBUGZ和公司项目的过程中，想出了这种模型：</p> <p>基础架构：Spring, Hibernate, Tapestry<br />Spring，Hibernate的好处自不待言，前台没有采用Struts或者WebWork，是因为前两者在界面表示上不够灵活，Struts需要配合Tiles才能实现灵活的布局，WebWork不太熟悉，不知道如何实现灵活的布局。然而在Tapestry中布局的问题几乎不是问题。</p> <p>应用技术：Ant, Xdoclet, FreeMaker, JUnit<br />用FreeMaker而不用Velocity是因为前者有更多的支持，而且从我的使用感觉来说，FreeMaker相对较强大。</p> <p>开发步骤：<br />1 首先开发者（项目经理或者技术经理）根据需求对整个系统建模，完成基本类图，生成所有的业务模型类；<br />2 根据业务模型类编写Hibernate映射文件（用xdoclet可能不太方便，特别是业务模型类存在继承关系时）；<br />3 （代码生成）生成对应的DAO接口例如XXXDAO，用来对XXX对象进行增删改查 (如果采用Spring Hibernate Template，这一步可以省略)<br />4 （代码生成）生成采用Hibernate的DAO实现<br />5 （代码生成）生成业务逻辑层代码XXXManager，用来调用DAO层实现各种业务逻辑操作；<br />6 （代码生成）生成XXXManager对应的单元测试<br />7 （代码生成）生成业务模型类的增删改查界面Html（通过模板）<br />8 （代码生成）生成界面对应的Tapestry所需要的.page文件<br />9 （代码生成）如果需要验证，还需要生成需要的Delegate类<br />10 （代码生成）生成对应的增删改查Page类<br />11 （代码配置）在Spring的配置文件中配置DAO的事务<br />12 （代码配置）在Spring的配置文件中配置XXXManager<br />13 配置数据库链接，利用Hibernate的SchemaExport直接生成数据库<br />14 生成整个项目的文件结构，包括build.xml，如果需要，也可以生成JBuilder或者Eclipse项目<br />15 开发：对 XXXManager进行更改，对界面进行修饰。</p> <p>从上面可以看到，整个项目工作量已经很低了;-) 这样对业务分析人员的要求比较高，要求一次能够分析全面彻底。项目中最后的工作只剩下修改业务逻辑，修改修改页面了。这就是代码生成器的威力。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date>2004-08-19 10:45:26</wp:post_date>
		<wp:post_date_gmt>2004-08-19 02:45:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bb%a3%e7%a0%81%e7%94%9f%e6%88%90%e5%99%a8%e7%9a%84%e5%ad%98%e5%9c%a8%e4%bb%b7%e5%80%bc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[tooy]]></wp:comment_author>
			<wp:comment_author_email>supertoy2015@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.137.26.181</wp:comment_author_IP>
			<wp:comment_date>2005-03-04 14:40:03</wp:comment_date>
			<wp:comment_date_gmt>2005-03-04 06:40:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[webwork可以使用sitemesh来布局，比tiles好很多，任何web framwork都可以用通过简单配置使用。
tapestry.做大规模项目，开发人员的整体学习曲线，还有那堆该死的xml文件怎么解决？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>61.50.230.141</wp:comment_author_IP>
			<wp:comment_date>2005-03-07 19:31:27</wp:comment_date>
			<wp:comment_date_gmt>2005-03-07 11:31:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[tapestry的配置文件是分散的，根本不成问题。最需要解决的是大型项目的支持，例如多子系统的项目。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>63</wp:comment_id>
			<wp:comment_author><![CDATA[canonical]]></wp:comment_author>
			<wp:comment_author_email>zhj_gw@sina.com</wp:comment_author_email>
			<wp:comment_author_url>http://canonical.blogdriver.com</wp:comment_author_url>
			<wp:comment_author_IP>221.221.17.170</wp:comment_author_IP>
			<wp:comment_date>2005-05-25 00:27:38</wp:comment_date>
			<wp:comment_date_gmt>2005-05-24 16:27:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[代码生成器的输出就是配置文件（语言）的运行结果。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>527</wp:comment_id>
			<wp:comment_author><![CDATA[freedak]]></wp:comment_author>
			<wp:comment_author_email>freedak@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.239.42.66</wp:comment_author_IP>
			<wp:comment_date>2005-11-21 18:30:40</wp:comment_date>
			<wp:comment_date_gmt>2005-11-21 10:30:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[非常好，能够给出一个具体的项目实例吗？谢谢！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>557</wp:comment_id>
			<wp:comment_author><![CDATA[smartfox]]></wp:comment_author>
			<wp:comment_author_email>whj1971@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.49.109.29</wp:comment_author_IP>
			<wp:comment_date>2005-12-14 13:01:14</wp:comment_date>
			<wp:comment_date_gmt>2005-12-14 05:01:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[能够以实例说明一下吗？我刚学习b/s开发，但是已经发现太多的重复、雷同工作，不能集中精力解决业务问题。代码生成器也是我认为可行的一条路。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1575</wp:comment_id>
			<wp:comment_author><![CDATA[jeafcn]]></wp:comment_author>
			<wp:comment_author_email>jeafcn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jeaf.cn</wp:comment_author_url>
			<wp:comment_author_IP>222.76.243.148</wp:comment_author_IP>
			<wp:comment_date>2006-04-29 11:29:02</wp:comment_date>
			<wp:comment_date_gmt>2006-04-29 03:29:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[和我现在的做法完全一个模板]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8791</wp:comment_id>
			<wp:comment_author><![CDATA[爱不留]]></wp:comment_author>
			<wp:comment_author_email>sskhnje@mail.ynu.edu.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.165.248.53</wp:comment_author_IP>
			<wp:comment_date>2006-08-18 17:23:47</wp:comment_date>
			<wp:comment_date_gmt>2006-08-18 09:23:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[前辈你好啊!
   我用的是struts, hibernate, spring. 想学freemaker, 请问能发一些freemaker教程到我的邮箱里吗? 谢谢. 我的QQ:334545190]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28420</wp:comment_id>
			<wp:comment_author><![CDATA[liaoshaobo]]></wp:comment_author>
			<wp:comment_author_email>liaoshaobo_2008@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://aaaa</wp:comment_author_url>
			<wp:comment_author_IP>59.42.126.105</wp:comment_author_IP>
			<wp:comment_date>2007-01-26 12:13:03</wp:comment_date>
			<wp:comment_date_gmt>2007-01-26 04:13:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哪里可以下载到你的东东呀，　好东西共享一下下
liaoshaobo_2008@163.com]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50111</wp:comment_id>
			<wp:comment_author><![CDATA[asp.net]]></wp:comment_author>
			<wp:comment_author_email>dsd@fsdfsf.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.codestudy.cn</wp:comment_author_url>
			<wp:comment_author_IP>221.215.22.210</wp:comment_author_IP>
			<wp:comment_date>2007-05-21 08:19:31</wp:comment_date>
			<wp:comment_date_gmt>2007-05-21 00:19:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[俺最近再做一个c#的生成器，你说的有借鉴意义]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67486</wp:comment_id>
			<wp:comment_author><![CDATA[kkfc]]></wp:comment_author>
			<wp:comment_author_email>paco42@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.144.102.43</wp:comment_author_IP>
			<wp:comment_date>2008-06-25 23:59:37</wp:comment_date>
			<wp:comment_date_gmt>2008-06-25 15:59:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[请高度抽象，code-gen就像用“空格+string”输出一个三角形一样]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>技术学习与假想敌</title>
		<link>http://michael.nona.name/archives/65</link>
		<pubDate>Thu, 19 Aug 2004 02:47:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/65</guid>
		<description></description>
		<content:encoded><![CDATA[<p>学习久了，做得多了，想得多了，自然就会有点成就了；有了成就就忍不住交流——大虾总是受尊重的，无论在武侠世界还是现实世界；更无论古时与当今。受到的尊重与追捧多了，自然也就有了几分自信。这自信过了头，便是多多少少的自负了。</p> <p>自负并没有错。自古以来，自负便是英雄和才子的美德，比如吕布，比如司马相如。然而我不能理解的是，一些技术学习者一定要给自己找上一个敌人才肯罢休。这个敌人究竟是不是站在他的对立面尚未定论，他就将对方划入水火不容之境。因此我将这些敌人定义为“假想敌”。这是想象力丰富的表现，也是想象力太丰富的表现。如同矛盾的对立统一，我猜想一旦离开了“假想敌”，这些技术者是否能够有旺盛的斗志继续学习下去。</p> <p>学习不是吵架。在发情期每一只公鸡看到另外的同性时都会鸡毛耸立示威，如果没有效果则非要咬上一番满地鸡毛才肯罢休。技术者的目的应该更加高尚，更加多样。公平竞争而不是充满感情色彩的技术领域更容易培养和发展技术，反之则如同华山派气宗剑宗分家，结果谁都讨不到好。拥有假想敌固然能够精神抖擞的学习新的技术或者更深层次的理解技术从而羞辱对手，公平竞争开诚布公何尝不能共同进步呢？</p> <p>有感而发，偶尔撰文，可能文词刻薄，请勿对号入座。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2004-08-19 10:47:15</wp:post_date>
		<wp:post_date_gmt>2004-08-19 02:47:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8a%80%e6%9c%af%e5%ad%a6%e4%b9%a0%e4%b8%8e%e5%81%87%e6%83%b3%e6%95%8c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>50110</wp:comment_id>
			<wp:comment_author><![CDATA[加盟]]></wp:comment_author>
			<wp:comment_author_email>dsd@fsdfsf.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.jiamengdian.net</wp:comment_author_url>
			<wp:comment_author_IP>221.215.22.210</wp:comment_author_IP>
			<wp:comment_date>2007-05-21 08:17:44</wp:comment_date>
			<wp:comment_date_gmt>2007-05-21 00:17:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[假想敌是动力～～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>MDA，业务其中，技术其次</title>
		<link>http://michael.nona.name/archives/66</link>
		<pubDate>Wed, 18 Aug 2004 02:47:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/66</guid>
		<description></description>
		<content:encoded><![CDATA[<p>MDA本意是模型驱动开发，模型自然就是业务模型了，这个描述想当贴切……一切以业务而开始，开发而其次，是业务模型驱动了开发。弄清楚了这一点，就会明白，MDA的思想是方法学的范畴，跟技术关系不是太大。MDA中的关键概念——PIM(平台无关模型)和PSM(平台相关模型)，将业务与技术隔离开来。PIM与PSM的概念隔离绝对是有必要的，而并非Intentional Programming(IP)那样，能够将“意图”与代码表现一致就认为万事大吉。（IP中每一个AST（抽象语法树）的节点就是一个元数据模型思路是好的，但是这个元数据的粒度的概念没有MDA中的清晰。所以我认为IP应该只是一个实验室的东东，而不应该会在工业开发中占据一席之地)</p> <p>若要完全实现MDA的思想，那么最重要最基础的应该是建立一套元数据模型，这一套模型是与实际业务息息相关的，一旦这套模型建立，那么遵循这个标准的所有厂商都会从中获益。用MDA的广告说：遵循MDA思想的系统将"for yestoday, today and tomorrow". </p> <p>但是Martin Fowler对此并不感冒。<a href="http://martinfowler.com/bliki/ModelDrivenArchitecture.html">http://martinfowler.com/bliki/ModelDrivenArchitecture.html</a>&nbsp; 我个人的想法也是这样。这种思想可以被很多厂商借鉴，但是是否遵循MDA标准，我持否定态度。在我看来，建立一套模型的成本太高，而且从MDA的思想提出至今，也只有代码生成器一类的东西问世，我所关注的、行业相关的mof模型实在是太少了，更不谈业务规则复杂得要命的如社保系统、财务系统。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date>2004-08-18 10:47:42</wp:post_date>
		<wp:post_date_gmt>2004-08-18 02:47:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mda%ef%bc%8c%e4%b8%9a%e5%8a%a1%e5%85%b6%e4%b8%ad%ef%bc%8c%e6%8a%80%e6%9c%af%e5%85%b6%e6%ac%a1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>Gmail 1G邮箱</title>
		<link>http://michael.nona.name/archives/67</link>
		<pubDate>Sat, 21 Aug 2004 02:49:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/67</guid>
		<description></description>
		<content:encoded><![CDATA[<p>今天上了许久不上的Yahoo 1G邮箱，想到了一些事情。</p> <p>首先是Google, 然后是Yahoo, 然后是Sina. 这个追逐的背后，真的是扩容那么简单吗？</p> <p>按照普通用户的用法——我指普通的用户，是通过Email做正常的事情，而不是存贮巨大文件的，一般的用户根本用不到那么大的空间，几十兆足以，因此就可以将空间进行动态分配，你看到自己的邮箱剩余空间永远都剩下1000M - 已经使用的。纵然空间不够了，存储设备也足够廉价，随时买来就是了。</p> <p>那么，这个1G邮箱真的那么诱人吗？</p> <p>这么说大小只是其次的东西，Yahoo, Sina或者后续的ISP，只是在抢嚎头。那么大的空间，我想，只有Google的Gmail达到了使用这么大空间的资格。原因很简单，Google拥有世界领先的搜索技术。在Gmail的广告中，有这么一句：don't delete the email, archive it. 这句话才将大容量邮箱的精髓表达出来。往来那么多的信件，在这么大的存贮空间中，全球这么多的用户，如果没有优秀的搜索技术，1G的空间，除了空间的堆砌，实际上没有什么意义，除非你想把Email邮箱当作下载服务器。不过遗憾的是大多数邮件服务器的下载速度都不是太快，而且服务商也不会太乐意你这么干。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date>2004-08-21 10:49:08</wp:post_date>
		<wp:post_date_gmt>2004-08-21 02:49:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gmail-1g%e9%82%ae%e7%ae%b1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>50109</wp:comment_id>
			<wp:comment_author><![CDATA[asp.net]]></wp:comment_author>
			<wp:comment_author_email>dsd@fsdfsf.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.codestudy.cn</wp:comment_author_url>
			<wp:comment_author_IP>221.215.22.210</wp:comment_author_IP>
			<wp:comment_date>2007-05-21 08:16:07</wp:comment_date>
			<wp:comment_date_gmt>2007-05-21 00:16:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不好用]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>HiveMind初探</title>
		<link>http://michael.nona.name/archives/68</link>
		<pubDate>Wed, 27 Oct 2004 02:49:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/68</guid>
		<description></description>
		<content:encoded><![CDATA[<p>今天HiveMind 1.0 的final版本出来了， 看了看他的examples代码。 有了IoC(DI)的感觉之后再看这些代码， 越看感觉越清晰。 实现一个IoC的容器本身没什么可说的， 现在就以他自带的example为例，来看看HiveMind在这方面的实现方法。</p> <p>example程序是一个四则运算的类，基本思想是将加减乘除都做成接口，用不同的方式实现；计算器(Caculator)继承了加减乘除接口，在运行过程中，具体的加减乘除操作类通过HiveMind的配置注入到CaculatorImpl中，当然CaculatorImpl也是通过Caculator接口通过工厂产生出来的，以下是他的具体代码：</p> <p>&nbsp;double arg0 = Double.parseDouble(args[0]);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double arg1 = Double.parseDouble(args[1]);</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Registry registry = ExampleUtils.buildRegistry("examples.xml");</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Since we know there's exactly *one* service-point implementing Calculator,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // we can get it this way, and never have to know its service id.</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Calculator calculator = (Calculator) registry.getService(Calculator.class);</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Inputs:&nbsp;&nbsp; " + arg0 + " and " + arg1);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Add:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; " + calculator.add(arg0, arg1));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Subtract: " + calculator.subtract(arg0, arg1));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Multiply: " + calculator.multiply(arg0, arg1));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Divide:&nbsp;&nbsp; " + calculator.divide(arg0, arg1));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; registry.shutdown();</p> <p>嗯，Registry registry = ExampleUtils.buildRegistry("examples.xml");&nbsp; 这条语句看来是从examples.xml中进行相应的初始化并建立对应关系了，内部大概是根据配置文件定义拦截器，工厂，初始化方法之类，不用看。这里的Registry应该等于Spring中的ApplicationContext, Pico中的Configuration了。看了IoC容器这方面的也没什么别的东西，一定得有一个全局的东西hold这些被管理的类的。</p> <p>下面的registry.getService(Calculator.class);看起来要比Spring的appContext.getBean(beanId)方便一点，在整个配置文件保证借口唯一的前提下，可以直接采用class作为参数取出对象。当然Spring完全可以这么做，只看Johnson先生高兴不高兴了。</p> <p>Caculator接口继承了增删改查接口（就是4个各包含一个方法的接口）。</p> <p>再看看examples.xml配置：</p> <p>&lt;module id="examples" version="1.0.0"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;service-point id="Adder" interface="org.apache.hivemind.examples.Adder"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;create-instance class="org.apache.hivemind.examples.impl.AdderImpl"/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;interceptor service-id="hivemind.LoggingInterceptor"/&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/service-point&gt;<br />&nbsp;&nbsp;&nbsp; ...其他操作省略<br />&nbsp;&nbsp;&nbsp; &lt;service-point id="Calculator" interface="org.apache.hivemind.examples.Calculator"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;invoke-factory&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- Most properties are autowired by the BuilderFactory --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;construct class="org.apache.hivemind.examples.impl.CalculatorImpl"/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/invoke-factory&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;interceptor service-id="hivemind.LoggingInterceptor"/&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/service-point&gt;<br />&lt;/module&gt;</p> <p>仔细看看这个配置文件就可以看出一些有趣的东西：<br />service-point毫无疑问等于Spring中的bean。（Howard同志一向以长的配置名称闻名，这一点可以在Tapestry的配置文件中得到证实，不过比起Spring的超长package name和constant name，似乎又差了一点，呵呵），id, interface……等等，看来hlship完全不鼓励在这个Container中使用具体的类了，看看DTD文件的定义：</p> <p>&lt;service-point id=".." interface=".." <br />&nbsp;&nbsp; [parameters-schema-id=".."]<br />&nbsp;&nbsp; [parameters-occurs="unbounded |<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0..1 | 1 | 1..n | none"]&gt;<br />&nbsp;[parameters-schema]<br />&nbsp;[create-instance]<br />&nbsp;[invoke-factory]<br />&nbsp;[interceptor]<br />&lt;/service-point&gt;</p> <p>确实没有class这个属性……这样做好还是不好？……不知道，完全面向接口的系统存在吗……这个问题暂时不想，以后再说。四个加减乘除的类的生成没什么好说的，看看<br />&lt;service-point id="Adder" interface="org.apache.hivemind.examples.Adder"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp; &lt;create-instance class="org.apache.hivemind.examples.impl.AdderImpl"/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp; &lt;interceptor service-id="hivemind.LoggingInterceptor"/&gt;<br />&lt;/service-point&gt;<br />的意思，应该是创建一个以org.apache.hivemind.examples.impl.AdderImpl的实例，从&lt;create-instance&gt;的DTD看来，他允许创建为primitive, singleton, threaded, pooled的形式。默认应该是每次调用创建一个实例吧，我猜。然后用一个拦截器（LogginInterceptor）来处理。</p> <p>这里又发现了一个比Spring要方便的地方，interceptor可以直接定义在（我都不知道怎么说了，用Bean还是service-point?)Component的内部，用Spring的话还得另外建立一个新的Bean，然后指定Advice的作用域，如果系统中只有一两处需要的话，多一个Bean的配置显得有点不雅。记得xWork也是这样定义interceptor的。</p> <p>下面的按照工厂形式创建实例有点意思。</p> <p>&nbsp;&nbsp;&nbsp; &lt;service-point id="Calculator" interface="org.apache.hivemind.examples.Calculator"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;invoke-factory&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- Most properties are autowired by the BuilderFactory --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;construct class="org.apache.hivemind.examples.impl.CalculatorImpl"/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/invoke-factory&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;interceptor service-id="hivemind.LoggingInterceptor"/&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/service-point&gt;</p> <p>先看看CaculatorImpl的实现：<br />public class CalculatorImpl implements Calculator {<br />&nbsp;&nbsp;&nbsp; private Adder _adder;<br />&nbsp;&nbsp;&nbsp; private Subtracter _subtracter;<br />&nbsp;&nbsp;&nbsp; private Multiplier _multiplier;<br />&nbsp;&nbsp;&nbsp; private Divider _divider;</p> <p>&nbsp;&nbsp;&nbsp; public double add(double arg0, double arg1) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return _adder.add(arg0, arg1);<br />&nbsp;&nbsp;&nbsp; }</p> <p>&nbsp;&nbsp;&nbsp; ...后面的减乘除就不写了，类似</p> <p>&nbsp;&nbsp;&nbsp; ...一堆的setter/getter就不写了<br />}</p> <p><br />刚开始诧异了一下，在我感觉里，这里怎么说应该有个输入参数的地方，就象下面：</p> <p>&nbsp;&nbsp; &lt;invoke-factory&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;construct class="org.apache.hivemind.examples.impl.CalculatorImpl"&gt;<br />&nbsp;&lt;set-property name="adder" ref="Adder" /&gt;<br />&nbsp;...<br />&nbsp;&lt;/construct&gt;<br />&nbsp;&nbsp; &lt;/invoke-factory&gt;</p> <p>看看他的注释：Most properties are autowired by the BuilderFactory，看样子他在BuilderFactory中默认将同id的service-point注入到construct中去了，这种便利是否必要？毕竟遍历一个类的set方法，判断方法所需的类型，寻找registry中的service-point然后注入，这都是需要代价的……没想清楚，暂时放下。</p> <p>题外话：我没有一直跟随HiveMind的版本变化，但在我的记忆中，1.0的某个rc版本将配置文件换成了Howard同志自己发明的Simple Data Language，其实就是hlship根据JavaCC自己组织了一套语法，然后将所有的配置文件用这种语法改写……没多少日子这个东西就被pass掉了。直到现在我还怀疑他做这件事情的动机，目前最能让我觉得有趣的一种解释是：Howard看到JavaCC很强大，能够很轻易的定义一种新的语法并解析，具备Tapestry全新的创意的Howard，一时头脑发热就加入了这个东东……呵呵</p> <p>HiveMind还有一些其他的特性，比如系统所有配置的文档生成（这个功能Spring加上就好了）以及其他的一些方便的特性。Howard一再强调HiveMind是一个Micro Kernel的框架，但在我看来，他是一个新的，可能更加方便的，完全面向接口的，基于IoC的容器。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2004-10-27 10:49:42</wp:post_date>
		<wp:post_date_gmt>2004-10-27 02:49:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hivemind%e5%88%9d%e6%8e%a2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>连接DB2的问题--encoding not supported</title>
		<link>http://michael.nona.name/archives/69</link>
		<pubDate>Fri, 29 Oct 2004 02:50:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/69</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Driver: com.ibm.db2.jcc.DB2Driver</p> <p>用Squirrel SQL查看db2的数据结构，填好driver, url, username, password后，点“connect”，出现问题：</p> <p><font color="#ff1493">com.ibm.db2.jcc.b.DisconnectException: encoding not supported!!</font></p> <p>奇怪，怎么会出现这个错误？我以为是SquirrelSQL的问题，运行了一下自己以前写的一个代码生成器，输入相同的参数，发现还是出现这个问题……头痛，以为是通过Console输入的参数编码与通过Java文件输入的编码不一致，索性打开Eclipse, Class.forName，然后getConnection，问题同样。</p> <p>同事把代码拿去，在WSAD下面重新编译运行，奇怪，没问题；我也在WSAD下面重新编译运行了一次，居然也没有问题。</p> <p>问题很明显了，是那该死的IBM JDK. 把Squirrel SQL运行的Java_home设置为WSAD的jre_home，问题果然解决，db2数据库结构正常显示在面前。</p> <p>虽然问题解决，我还是不知道为什么——我也不想知道。记得以前jdom在webshpere上不能正常运行就把我弄得死去活来，这次又耗掉了我1个小时。IBM的jvm真是诡异。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>69</wp:post_id>
		<wp:post_date>2004-10-29 10:50:06</wp:post_date>
		<wp:post_date_gmt>2004-10-29 02:50:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bf%9e%e6%8e%a5db2%e7%9a%84%e9%97%ae%e9%a2%98-encoding-not-supported</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>1186</wp:comment_id>
			<wp:comment_author><![CDATA[onekey,玩客，顽客 &raquo; SQuirreL SQL Client：和好几种数据库打交道的人的利器]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://my.donews.com/onekey/2006/04/13/squirrel-sql-clientefbc9ae5928ce5a5bde587a0e7a78de695b0e68daee5ba93e68993e4baa4e98193e79a84e4babae79a84e588a9e599a8/</wp:comment_author_url>
			<wp:comment_author_IP>211.100.33.116</wp:comment_author_IP>
			<wp:comment_date>2006-04-13 16:59:15</wp:comment_date>
			<wp:comment_date_gmt>2006-04-13 08:59:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 如果你的JDK有些问题的话，或者你的winrar不听话的话，好像有时候会有点问题。 [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19252</wp:comment_id>
			<wp:comment_author><![CDATA[平平淡淡]]></wp:comment_author>
			<wp:comment_author_email>isaaczhang_xp@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.213.186.250</wp:comment_author_IP>
			<wp:comment_date>2006-11-09 19:08:24</wp:comment_date>
			<wp:comment_date_gmt>2006-11-09 11:08:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[非常感谢，碰到同样的问题，在困惑之时，是你的文章精准的指明了道路。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43533</wp:comment_id>
			<wp:comment_author><![CDATA[werwer]]></wp:comment_author>
			<wp:comment_author_email>34534@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.191.125.94</wp:comment_author_IP>
			<wp:comment_date>2007-04-21 15:02:19</wp:comment_date>
			<wp:comment_date_gmt>2007-04-21 07:02:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[怎么办？难道非得用IBM的jre？
我们的客户不答应啊]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Sun gets behind blogging by hiring Roller developer</title>
		<link>http://michael.nona.name/archives/70</link>
		<pubDate>Wed, 01 Sep 2004 02:50:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/70</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.theserverside.com/news/thread.tss?thread_id=28410">http://www.theserverside.com/news/thread.tss?thread_id=28410</a></p> <p>David的话：</p> <blockquote>It's official. Roller is now my full time job. I just accepted a job with Sun Microsystems to "design, develop, and deploy the primary blogging system for Sun in conjunction with other engineers" and to evangelize blogging both inside and outside of Sun. Needless to say, I'm thrilled. I'm honored to be working for Sun and with great folks like Will Snow, John Hoffman, Tim Bray, Patrick Chanezon, and Danese Cooper. I'm excited to be working for a company that feels the same was as I do about the value of blogs and wikis, open source software, and encouraging employees to speak with honest and authentic voice to customers, to partners, and to each other.</blockquote> <p>呵呵，看来人要出了名，生意会很多。一个开源的Roller居然引起了Sun的关注，并且聘用Dave Johnson为Sun全职开发其Roller系统。</p> <p>题外话，Roller的成功肯定不是因为其技术思想有多好，而是因为流行。换句话说，Roller满足了需求。“需求”这个东西才是产品成功的关键，其他的东西则次之。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date>2004-09-01 10:50:38</wp:post_date>
		<wp:post_date_gmt>2004-09-01 02:50:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sun-gets-behind-blogging-by-hiring-roller-developer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>新看见一个好东西，跟XUL有关的</title>
		<link>http://michael.nona.name/archives/71</link>
		<pubDate>Thu, 02 Sep 2004 02:51:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/71</guid>
		<description></description>
		<content:encoded><![CDATA[p>一直以来我对XUL都不是太感冒。将界面用XML来编写是完全可行的，但是问题是找不到用来解析XUL的客户端。Mozilla有心直接加入对XUL的支持只可惜永远都在期待中；IE好像有自己的想法。所以我一直在观望。 <p>今天在JL上看到了<a href="http://www.thinlet.com">Thinlet</a>，一个采用Applet解析XUL并提供一组漂亮的Widget的客户端解析器，大受启发。仔细的体会了他的几个Demo，感觉很不错。从他的几个ShowCase来看，目前这个东西应用范围还是挺广的，有聊天室的应用，有普通的商业应用。基于LGPL协议使用也不怎么受限制。</p> <p>呵呵，现在RIA的选择多了，Flex, Laszlo, XUL(Thinlet)。<br /></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>71</wp:post_id>
		<wp:post_date>2004-09-02 10:51:18</wp:post_date>
		<wp:post_date_gmt>2004-09-02 02:51:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%96%b0%e7%9c%8b%e8%a7%81%e4%b8%80%e4%b8%aa%e5%a5%bd%e4%b8%9c%e8%a5%bf%ef%bc%8c%e8%b7%9fxul%e6%9c%89%e5%85%b3%e7%9a%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>新买了两本书</title>
		<link>http://michael.nona.name/archives/73</link>
		<pubDate>Mon, 06 Sep 2004 02:52:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/73</guid>
		<description></description>
		<content:encoded><![CDATA[<p>昨天去新买了两本书，一本是在收音机里断断续续在听的《狼图腾》（作者姜戎），一本是看起来名字挺有意思的《弗里德曼的生活经济学》（作者美国David FriedMan, 挺有趣的姓氏）。这个月有书看了。</p> <p>呵呵，我真是一个奇怪的程序员，计算机的书只有屈指可数的几本（《Effective Java》, 《Mastering EJB》, 《设计模式》,《多维数据建模指南》等）。大部分却是文学书，诸如《古典诗词赏析》，《泰戈尔散文诗集》，《爱的教育》，《旷野的呼唤》等，还有一部分乱七八糟，兴趣来了就买的的，比如《时间简史》，现在买的这本《弗里德曼的生活经济学》等等。据说gigix他们翻译的《J2EE Development without EJB》快要出货，如果价钱不贵，也会考虑买上一本。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date>2004-09-06 10:52:02</wp:post_date>
		<wp:post_date_gmt>2004-09-06 02:52:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%96%b0%e4%b9%b0%e4%ba%86%e4%b8%a4%e6%9c%ac%e4%b9%a6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>关于狼的一些点滴</title>
		<link>http://michael.nona.name/archives/74</link>
		<pubDate>Tue, 07 Sep 2004 02:52:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/74</guid>
		<description></description>
		<content:encoded><![CDATA[<p>这两天在看《狼图腾》，依旧是趁地铁上下班的空档儿看的。头几十页我立刻被作者渲染的额尔草原狼的气氛迷住了。草原狼的团结，凶狠，敏捷，牺牲，忍耐等一切优秀猎手具备的特性，在书中头两次的狼的打围中描绘的栩栩如生。作者也将我带入了一个谜思：是否狼图腾是游牧民族的精神图腾，也是顺天而应的真正的主宰？</p> <p>我记起了以前看过的几部关于狼的小说，贾平凹的《怀念狼》，反映了人类自身文明的退化，“当人变成狼时，它比狼还坏”。书中有一定的氛围描写很妖异，以至于我当时读这本书都不是很理解，这本书反映人本身的因素多一些；杰克·伦敦的《旷野的呼唤》、《雪狼》，这些作品以狼为第一人称描述，给人以极大的真实感。不过杰克伦敦大多数都是独行的狼，孤独，骄傲，尊严。</p> <p>《狼图腾》，却试图将文学、人类学、历史、传说神奇的结合在一起，混合在一起力透纸背入木三分，让人深思：失去了精神图腾是否会过得更好？人与自然之间的平衡是否能够任意打破？汉人崇尚的儒家思想，农耕民族的性格深处的弱性是否需要狼性来打破？秉承狼性的成吉思汗的铁骑是击破了还是延续了五千年的中华文明？</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2004-09-07 10:52:25</wp:post_date>
		<wp:post_date_gmt>2004-09-07 02:52:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8e%e7%8b%bc%e7%9a%84%e4%b8%80%e4%ba%9b%e7%82%b9%e6%bb%b4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>被FreeMarker气死了，${...}的问题</title>
		<link>http://michael.nona.name/archives/75</link>
		<pubDate>Thu, 09 Sep 2004 02:52:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/75</guid>
		<description></description>
		<content:encoded><![CDATA[<p>生成JSP一个很典型的问题：JSP中使用了JSTL的c:out标记：&lt;c:out value=${subject.name}&gt;，显然这个${...}是不应该被FreeMarker解析的。我用Velocity的方法想当然的改成了&lt;c:out value=\${subject.name}&gt;，不行；于是又改成了&lt;c:out value=$${subject.name}&gt;，依旧不行……郁闷。花了一个小时浏览了一遍Designer Guilde, Programmer Guilde, FAQ, Referrence，没有找到我想要的结果。生闷气。</p> <p>找到他的邮件列表，有人跟我有同样的问题：<a href="http://article.gmane.org/gmane.comp.web.freemarker.user/838">http://article.gmane.org/gmane.comp.web.freemarker.user/838</a>&nbsp;FreeMarker提供的方法居然是：将$换为%，然后用#replace指令或者?replace替换为'$'……馊主意，来气；继续往下看，果然提出这个问题的家伙狠狠批评了一顿："I think that's overstating the challenge considerably!" <a href="http://article.gmane.org/gmane.comp.web.freemarker.user/844">http://article.gmane.org/gmane.comp.web.freemarker.user/844</a>&nbsp;呵呵</p> <p>算了，有解决办法总比没有强，先将就吧。<br /></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>75</wp:post_id>
		<wp:post_date>2004-09-09 10:52:51</wp:post_date>
		<wp:post_date_gmt>2004-09-09 02:52:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%a2%abfreemarker%e6%b0%94%e6%ad%bb%e4%ba%86%ef%bc%8c%e7%9a%84%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>5446</wp:comment_id>
			<wp:comment_author><![CDATA[lengwp]]></wp:comment_author>
			<wp:comment_author_email>lengweipingsw@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.99bill.com</wp:comment_author_url>
			<wp:comment_author_IP>203.156.209.203</wp:comment_author_IP>
			<wp:comment_date>2006-06-29 14:46:15</wp:comment_date>
			<wp:comment_date_gmt>2006-06-29 06:46:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我用时报错:说没有  
如下:
Failed to parse FreeMarker template for URL [login.ftl]; nested exception is freemarker.core.ParseException: Token manager error: freemarker.core.TokenMgrError: Unknown directive: #replace on line: 37, column: 21, in template: login.ftl

你是怎么在ftl里面：的.先谢了!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6904</wp:comment_id>
			<wp:comment_author><![CDATA[jelly]]></wp:comment_author>
			<wp:comment_author_email>jelly1982@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.kazza.cn</wp:comment_author_url>
			<wp:comment_author_IP>218.19.1.215</wp:comment_author_IP>
			<wp:comment_date>2006-07-20 17:16:40</wp:comment_date>
			<wp:comment_date_gmt>2006-07-20 09:16:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[2.3.6中没有]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6915</wp:comment_id>
			<wp:comment_author><![CDATA[绿色使者]]></wp:comment_author>
			<wp:comment_author_email>zcb3603@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogjava.net/escout/</wp:comment_author_url>
			<wp:comment_author_IP>202.120.38.174</wp:comment_author_IP>
			<wp:comment_date>2006-07-21 16:37:06</wp:comment_date>
			<wp:comment_date_gmt>2006-07-21 08:37:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[下午也遇到了这个问题，想了一个解决方法，使用${'$'}{subject.name}来转义，具体见blog]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>55388</wp:comment_id>
			<wp:comment_author><![CDATA[dwangel]]></wp:comment_author>
			<wp:comment_author_email>dwangel2004@yahoo.com.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.246.245.194</wp:comment_author_IP>
			<wp:comment_date>2007-06-19 16:43:59</wp:comment_date>
			<wp:comment_date_gmt>2007-06-19 08:43:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你可以考虑使用escape来避免对${}进行处理

http://www.freemarker.org/docs/ref_directive_escape.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Spring BeanDoc</title>
		<link>http://michael.nona.name/archives/9</link>
		<pubDate>Fri, 28 Jan 2005 02:09:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/9</guid>
		<description></description>
		<content:encoded><![CDATA[从Howard的Blog上得到的消息，改善了XSLT的HiveDoc已经比较漂亮了：

<a href="http://jakarta.apache.org/hivemind/hivedocs/index.html">http://jakarta.apache.org/hivemind/hivedocs/index.html</a>

但是，遗憾的是，就是这种界面也不觉得有多漂亮。我在HiveMind初探中提及，HiveDoc是Hivemind比Spring有优势的地方之一，这种优势已经不复存在，BeanDoc生成了更漂亮的文档，相比HiveDoc而言，BeanDoc在组件之间的关系上进行了更清晰的描述。

BeanDoc描述的JPetStore: <a href="http://springframework.sourceforge.net/beandoc/jpetstore/">http://springframework.sourceforge.net/beandoc/jpetstore/</a>
petClinic: <a href="http://springframework.sourceforge.net/beandoc/petclinic/">http://springframework.sourceforge.net/beandoc/petclinic/</a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2005-01-28 10:09:15</wp:post_date>
		<wp:post_date_gmt>2005-01-28 02:09:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spring-beandoc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>How many web frameworks now</title>
		<link>http://michael.nona.name/archives/10</link>
		<pubDate>Fri, 21 Jan 2005 01:11:28 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/10</guid>
		<description></description>
		<content:encoded><![CDATA[Echo 
 Cocoon 
 Millstone 
 OXF 
 
Struts 
 SOFIA 
 Tapestry 
 WebWork 
 
RIFE 
 Spring MVC 
 Canyamo 
 Maverick 
 
JPublish 
 JATO 
 Folium 
 Jucas 
 
Verge 
 Niggle 
 Bishop 
 Barracuda 
 
Action Framework 
 Shocks 
 TeaServlet 
 wingS 
 
Expresso 
 Bento 
 jStatemachine 
 jZonic 
 
OpenEmcee 
 Turbine 
 Scope 
 Warfare 
 
JWAA 
 Jaffa 
 Jacquard 
 Macaw 
 
Smile 
 MyFaces 
 Chiba 
 JBanana 
 
Jeenius 
 JWarp 
 Genie 
 Melati 
 
Dovetail 
 Cameleon 
 JFormular 
 Xoplon 
 
Japple 
 Helma 
 Dinamica 
 WebOnSwing 
 
Nacho 
 Cassandra 
 Baritus 
  
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date>2005-01-21 09:11:28</wp:post_date>
		<wp:post_date_gmt>2005-01-21 01:11:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-many-web-frameworks-now</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>为什么Bindows不会成功</title>
		<link>http://michael.nona.name/archives/11</link>
		<pubDate>Wed, 19 Jan 2005 03:48:26 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/11</guid>
		<description></description>
		<content:encoded><![CDATA[Bindows(http://www.bindows.net)新版本1.30beta出来了，增加了千呼万唤的Theme支持。Erik&Emil不愧为世界水平的JavaScript高手，原本仅用做浏览器脚本支持的这个小东西如今被发挥得淋漓尽致，几乎到了浏览器JavaScript所能表现的最高境界。看过的人几乎都会叹为观止。观止观止，观而止，这一点上，客户似乎与开发者保持同样的态度。

无论从Bindows的站点，还是其论坛，还是Google的搜索结果，对Bindows的感觉几乎停留在这样一个感觉层次：技术好，速度慢，至今没有商业案例。更有甚者，评价其为“C/S的回归”。回归意味着什么？对于开发者而言——呃，我一直将开发者置于比客户低的地位——，除了恢复原来的编程概念、方法、模式，照拿工资，几乎没有什么改变。技术的变革从来不是以开发者的利益作为第一位的。而对于客户，这种回归却是不可接受的。

ChinaUI(http://www.chinaui.com)上每天都有新的设计作品产生，有相当大的数量集中在B/S系统的产品上。B/S给软件开发带来巨大改变，但与此同时进行改变的是用户的审美品位的提高。你无法再将windows经典的窗体颜色应用到绝大多数Web应用中，美工开始变得重要。客户口味越来越奇怪，很多时候一个项目的交付被卡在美工上，客户喋喋不休的说这个颜色/那个颜色不喜欢。从国内外已经出现的软件界面设计公司，可以看到这样一个趋势：用户对软件的需求已经不仅仅满足于实现功能，对软件的体验开始变得同样重要。回忆一下，《冒牌天神》中发邮件的界面，一些电影中显示人员档案的界面，《黑衣人》中的海关电脑界面。随着软件的发展，这些界面相信也会出现在实际的软件中。

RIA应运而生。Macromedia公司的Flex(http://www.macromedia.com/software/flex)，开源的Leszlo(http://www.openlaszlo.org)，都是这方面的代表。Flash经过多年的发展，已经从典型的动画格式开始向着一种用户友好的表现形式发展。从Macromedia官方公布的资料看来，已经有一些成功的商业应用采用了Flex，用户体验相当好。而从我给一些客户演示laszlo的实例来看，Laszlo“增加了对Web应用的期待”。这种期待显然是界面、操作感觉的期待。RIA, Rich Internet Application, 在我看来一个最为体贴的解释就是“丰富客户体验的Web应用”。Rich在这里，所指并不仅仅是提供开发者丰富的控件，更重要的是给客户丰富友好的体验。

Bindows所做的，从第一眼看上去，就象是所有windows控件的模拟。按钮，标签，列表，文本框，对话框，颜色，样式，等等，一个典型桌面应用应该有的控件、样式都具备了。客观的说，用JavaScript实现这些并不容易，作者花了整整两年时间，这个产品还在继续维护。为什么至今没有商业应用（据我所了解，没有）愿意采用Bindows呢？我分析：Bindows不能成功也不会成功的根本原因在于，它意味着用户体验的倒退。换句话说，这是一个开发人员一厢情愿的产品，丝毫没有考虑到用户操作感觉。如果这是一个彻底的桌面程序框架，融入到传统桌面程序的大潮中，那么也许还有成功的可能；但是这个产品定位于运行在浏览器中，是Web程序，没有用户愿意看着别人能够在浏览器里进行丰富多彩的操作，而自己只能对着灰蒙蒙的屏幕。当然，在我所未知特定行业里面或者用户操作计算机层次不高的情况下，用户体验也许不重要；但是随着时间的发展，这一点会逐渐消除。毕竟，没有人会拒绝美丽。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2005-01-19 11:48:26</wp:post_date>
		<wp:post_date_gmt>2005-01-19 03:48:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>why-bindows-not-success</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>8790</wp:comment_id>
			<wp:comment_author><![CDATA[Jonathan]]></wp:comment_author>
			<wp:comment_author_email>Jonathan@ms1.hinet.net</wp:comment_author_email>
			<wp:comment_author_url>http://None</wp:comment_author_url>
			<wp:comment_author_IP>210.192.9.61</wp:comment_author_IP>
			<wp:comment_date>2006-08-18 16:27:41</wp:comment_date>
			<wp:comment_date_gmt>2006-08-18 08:27:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[持平而論 , 若是有細心觀察並思考過的人會發現 , 現今的Web UI雖然豐富多彩但卻互動貧乏 , 就像在看一頁頁的紙本一般 , 對於Application的UI表現能力 , 根本是不夠的 , 而Bindows是目前唯一達成完全互動的Web UI , 所以我不認為還未成功是因為作者所說的原因 , 我個人認為它有很大的機會會一砲而紅]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15213</wp:comment_id>
			<wp:comment_author><![CDATA[Steven]]></wp:comment_author>
			<wp:comment_author_email>wufenpeng@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.249.248.117</wp:comment_author_IP>
			<wp:comment_date>2006-10-13 15:39:35</wp:comment_date>
			<wp:comment_date_gmt>2006-10-13 07:39:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[赞成，普通WEB UI现在缺少的是互动能力，为了做成达到桌面程序的UI的效果，才有ActiveX、Applet这些需要安装的插件。假如象作者说说，只从美观角度考虑，根本没有必要花大力气发展ActiveX、Applet这些技术了。外表华丽固然重要，但实际的内在价值才是最重要的。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68074</wp:comment_id>
			<wp:comment_author><![CDATA[tt]]></wp:comment_author>
			<wp:comment_author_email>chhxlqqx@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.0.158.140</wp:comment_author_IP>
			<wp:comment_date>2008-11-11 12:58:02</wp:comment_date>
			<wp:comment_date_gmt>2008-11-11 04:58:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bindow照样可以在界面漂亮上做出改观，这是很容易的。
在b/s模式的传统体验上，用户已经别扭了太多年，几乎无奈到习以为然了，这是先入为主的缘故，但乌云遮不住太阳，无能遮不住智慧。

Bindow们，一定会大有前途的。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68153</wp:comment_id>
			<wp:comment_author><![CDATA[thysky]]></wp:comment_author>
			<wp:comment_author_email>caoshiwei@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.132.138.221</wp:comment_author_IP>
			<wp:comment_date>2009-03-13 18:36:16</wp:comment_date>
			<wp:comment_date_gmt>2009-03-13 10:36:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[界面可以达到桌面的效果，也未堂不是一件好事，不过，退回到了C/S，是不太合理的。如果让B/S的界面达到了C/S的效果，应该也是一种进步吧。因为B/S本身并不能做得像本地的C/S那样华丽，所以现在大多B/S程序的互动性并不是很好。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>AMOWA: 不应该关注URL的形式 </title>
		<link>http://michael.nona.name/archives/12</link>
		<pubDate>Tue, 18 Jan 2005 03:34:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/12</guid>
		<description></description>
		<content:encoded><![CDATA[除非是内容相关的系统，如CMS, Blog, 新闻，门户，论坛，网站系统等，这些系统需要一个明确的链接，来指引用户进行直接有效的访问。但是企业应用系统往往对这些并不关心。例如一个信息管理系统，几乎没有人关心浏览器地址栏里面的链接组织形式，除非一些别有用心的用户。

把握这一点很重要——我是指进行一个Amowa的实现。在我去年提出观点中，我指出，amowa不适合内容相关的系统。虽然这么说，但是当我试图实现一个amowa思想的论坛时，URL相关的东西让我头痛不已。一方面，既然是改善客户体验，所有的操作采取无刷新的方式来进行，那么用户从浏览器中看到的就只有一个地址；而另一方面，用户也许需要对某一贴进行引用转贴时，需要知道类似与thread?id=123的东东。这个问题困扰了我很久，项目也迟迟未动工。

在参与现在的这个商业项目中，我注意到用户根本不关心链接的组织形式，特别是系统非常庞大，页面采用框架进行组织时，浏览器中地址从来都只有一个。操作的感觉就像原来的VB/Delphi时代的C/S软件一样。这么说来，对于操作/功能型的系统，URL并不重要，那么这个时候amowa的各种威力就发挥出来了。

下面附上这段时间思考的Amowa框架目标，希望对有志于amowa框架开发的同仁有些启发：
<ul>

	<li>采用纯粹HTML作为界面描述语言，减少学习梯度。只要学习HTML便可编写WEB界面。 </li>

	<li>利用XMLHTTP或者其他访问方式来进行远程访问/调用，减少带宽要求 </li>
	<li>
一致性对待客户端与服务器端。对页面开发者而言，他看不到服务器端；对服务器端而言，他看不到客户端。两者完完全全的独立开来。 </li>
	<li>
服务器端控制页面流转，非常简单的方式进行页面跳转，客户端被翻译为正确的JavaScript调用，从而让客户感觉更好。 </li>
	<li>
客户端缓存。客户端访问得来的页面内容，被缓存到客户端，下次访问非常非常快。 </li>	<li>

丰富的客户端组件
</li></ul>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date>2005-01-18 11:34:25</wp:post_date>
		<wp:post_date_gmt>2005-01-18 03:34:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amowa-url-not-important</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[green_girl]]></wp:comment_author>
			<wp:comment_author_email>perfectt@hz.webex.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.191.14.130</wp:comment_author_IP>
			<wp:comment_date>2005-03-01 18:38:53</wp:comment_date>
			<wp:comment_date_gmt>2005-03-01 10:38:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我想参加 你的 Amowa框架 如何联系你？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>61.50.230.141</wp:comment_author_IP>
			<wp:comment_date>2005-03-02 10:01:51</wp:comment_date>
			<wp:comment_date_gmt>2005-03-02 02:01:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[给我发邮件 mechiland [AT] gmail.com]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>当微操作遇上刺蛇海</title>
		<link>http://michael.nona.name/archives/13</link>
		<pubDate>Thu, 30 Dec 2004 07:34:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/13</guid>
		<description></description>
		<content:encoded><![CDATA[StarCraft游戏初期，神族高级玩家一般喜欢在出了一两个狂热者就带上一个农民出发，利用优秀的微操作能力很可能推倒一些心理素质不太好的Player，尤其是对付虫族的小狗，如果操作得当，两个狂热者往往可以消灭掉6~8个小狗。然而这一战略如果用过了头，比如，在刺蛇海面前，再优秀的微操作马上变得可笑。在一次国内的比赛中，我曾经看到过这样一场悲壮的比赛。

有一句话说得很对：先做正确的事，然后正确地做事。如果把大型项目比喻为刺蛇海，那么我们无论如何都不能在这样庞大的攻势面前傻乎乎的用某一两个“设计模式”、“PoEAA”或者“Core J2EE Patterns”这样的微操作。原因很简单，在业务架构尚不清晰的情况下，盲目的用小规模的技术组件来套用是愚蠢的做法。我经常听到不成熟的程序员这么在说：晤，这里可以用状态模式，嗯，那里可以用解释器模式。问问他是否真正明白业务的需求，他一脸茫然。当目标从一开始就错误的时候，再优雅的设计得到的顶多是一堆优雅的垃圾。

那么，正确的事是什么？是正确评估分析你的业务。业务架构是技术架构的基础，业务语义是技术语义存在的前提。这个问题之所以没有被得到重视，是因为我们现在做的大多数系统都还比较简单，我以前做过的项目基本上用事务脚本便可以解决，通过数据库的增删改查从而完成特定功能；在此基础之上建立了一系列技术组件，比如OA, 工作流，CMS。在分析项目的时候，将功能需求往已有的技术组件上套，然后用不太先进的技术完成了一个又一个的项目。因此我说，项目成功的保证一定不是所采用的技术，而是对业务的理解程度。

我们比较不幸。客户越来越成熟，对信息系统所能带来的生产力期望值越来越高（政府项目除外）。大量的旧的系统如电力，金融等，开始被迁移到J2EE平台。J2EE平台技术的成熟并不等同于业务的成熟，当一个系统膨胀到刺蛇海的规模时，当功能需求书堆起来一米多厚、功能错落有致、交叉相连时、就是这样也不足以描述需求时，那么技术方面的某些小小的微操作、模式就像是刺蛇海面前可怜的狂热者，潇洒却凄凉；又如同印尼海啸面前“坚固”的漂亮的海边别墅，不堪一击。在对这样大的项目进行分析的时候，业务是最重要的。将业务分析清楚才是正确的事，而不是上来就往J2EE N层模式上套。放之四海皆准的方案，往往可行性、操作性成问题。只有当业务分析清楚了，业务功能之间的联系也分析清楚了，怎么做就变成了很简单的事情：无论你怎么做，代码写的多么难看，只要完成功能，你做的事情都决不是Dirty work.

然而，业务分析也太艰难：当你面对一个具有十几个子系统、几千种交易、数百种工作流、子系统功能之间纵横交错的时候，没有业务知识和技术知识的双重修炼，这件事情无异于mission impossible. 这方面，我想才是自己需要修炼的一个方向。Raimundo同志正在进行这方面的研究，希望能够有所建树。

稍微有点高兴的是，目前我们接触到的项目大部分并不庞大，大部分都能够进行归类，比如简单的业务逻辑普通的增删改查就能完成，复杂一些的加上工作流支持；大一些的公司有能力对这些操作进行积累，称之为“技术组件”，因此某些以构件为核心的解决方案（公司）抢到了许多订单。从一段时间趋势来看，这种方式也是目前最可行的一种方式。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date>2004-12-30 15:34:33</wp:post_date>
		<wp:post_date_gmt>2004-12-30 07:34:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>when-little-faceto-mass</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>学习，研究，工作，灵感——学习过程其实是一张网</title>
		<link>http://michael.nona.name/archives/76</link>
		<pubDate>Thu, 04 Nov 2004 02:53:32 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/76</guid>
		<description></description>
		<content:encoded><![CDATA[<p>进行比较简单的学习时，专家或者教师往往给初学者这样一种建议：以学习Java为例，初学者最好学习C语言，掌握基本的语言概念；然后编写Java版的helloworld，然后学习基本的java.lang, java.util库，在学习的过程中不断体会OO的概念；然后根据需要，学习某一方面的如网络，UI, WEB等等……</p> <p>很明显，这是一个箭头状的直线学习图。但是实际上没有人纯粹的依赖这些建议或指导来学习成功，最终往往是两种结果：一种是学习过程枯燥无味，最终放弃或者依靠毅力苦苦挣扎；一种是在学习过程中不断参照已有知识，反复印证参考，最终其乐融融小有所成。</p> <p>大部分人都处于第二种状态，或者自己没有意识这一点，在积累越多的工作者身上体现越明显。大脑是一个圆，需要学习来刺激使他膨胀，线状的学习思路会违背几何规律，最终让自己疲惫不堪，充满挫折感。</p> <p>所以，学习，不断的学习，不限于技术方面的学习。这一点在Java领域表现得尤为明显。Spring的核心作者Rod Johnson在音乐上的造诣与技术不相上下，大多数国内J2EE技术比较强的人都有哲学背景。所以，一定要不断的学习，不仅要对技术世界，开源领域自己业务范畴内的技术永远保持敏感，而且要不断花时间充实自己其他方面的积累。总有一天，比如你在文学上的一个灵感会让你的设计充满惊叹；或者你在打桌球领悟到业务架构可以更加优化一些。</p> <p>学习与年龄无关，与惰性有关，所以，保持学习的劲头，活到老，学到老。网状的学习过程，不限于本行业的学习视野，不断的体会领悟的积累，会让学习真正成为快乐。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>76</wp:post_id>
		<wp:post_date>2004-11-04 10:53:32</wp:post_date>
		<wp:post_date_gmt>2004-11-04 02:53:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ad%a6%e4%b9%a0%ef%bc%8c%e7%a0%94%e7%a9%b6%ef%bc%8c%e5%b7%a5%e4%bd%9c%ef%bc%8c%e7%81%b5%e6%84%9f%e2%80%94%e2%80%94%e5%ad%a6%e4%b9%a0%e8%bf%87%e7%a8%8b%e5%85%b6%e5%ae%9e%e6%98%af%e4%b8%80%e5%bc%a0%e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>14023</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen&#8217;s Blog &raquo; Blog Archive &raquo; 经验愈多愈难行]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://michael.nona.name/archives/153</wp:comment_author_url>
			<wp:comment_author_IP>61.129.70.239</wp:comment_author_IP>
			<wp:comment_date>2006-10-02 00:52:11</wp:comment_date>
			<wp:comment_date_gmt>2006-10-01 16:52:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 旧文一篇作注解：学习，研究，工作，灵感——学习过程其实是一张网 [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>面向异步消息的Web应用(AMOWA)</title>
		<link>http://michael.nona.name/archives/78</link>
		<pubDate>Mon, 15 Nov 2004 02:54:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/78</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>前言：<br /></strong>本文的源自于Martin Fowler的著作《Patterns of Enterprise Application Architecture》中关于Web表示模式的一些启发。作者做了多年Web开发，并不限于企业级Web应用。在娱乐方面的应用（如聊天室，即时消息，Web场景聊天等）得到的一些工作经验促使我在企业级应用上进行了深层次的探索和思考，并形成了这篇文章。目前国内外并没有明显在这方面的文章或著作，希望此文能够给做WEB开发的同仁一点借鉴之处。</p> <p>本文的最先在2004年11月13日的javaparty聚会上以PPT提出，后经过整理完成。</p> <p><strong>1 观点提出</strong><br />标准的遵循HTTP GET/POST的WEB开发方式往往遵循这样一个流程：客户端发送一个请求：GET或者POST给WEB服务器，WEB服务器处理完成后将结果以Response返回给客户端。在得到服务器的响应之前，客户端一直在等待，页面停滞，用户将看见浏览器长长的的等待条慢慢增长。</p> <p>而Google Gmail给了我们完全不同的体验。你无法感受到页面的跳转，系统反应非常快。获取新邮件不需要手动或者自动的刷新浏览器。这一切给人的感觉是那么友好，以至于它一经推出便得到了众多用户的宠爱，并同时成为Sina，Yahoo等邮件提供商的追赶对象。</p> <p>这便是我要提出的面向异步消息的WEB应用(Asynchronous-Messaging Oriented Web Application, 简称AMOWA)的一个小例子。一个具备AMOWA特征的WEB应用具备以下三条：</p> <p><br />1.&nbsp;系统必须是一个WEB应用。事实上，在非WEB环境中设计与实现异步调用非常简单，考虑也很自然。但在WEB环境下，设计与实现相对比较麻烦，思维方式也稍微会有些跳跃感。<br />2.&nbsp;系统中必须具备消息特征，无论是隐式或者显式。在网络游戏，即时消息工具等应用中，消息特征比较明显，这方面的论述也比较多；但有些企业应用，也能够发现一些隐含的消息模式。比如，一个商业智能WEB客户端，需要进行钻取、上溯、切片等操作，这些操作和返回值可以被包装为消息（事实上，目前已经有相关的规范，分别是MDX和XML/A）；在操作型WEB应用中，操作同样可以被抽象为消息，比如一个Bug管理系统，提交Bug, 查看Bug等，都可以包装为消息。<br />3.&nbsp;消息必须是异步的。这一点是与传统方式的根本不同之处。传统的方式在完成某个操作一定存在页面切换，而AMOWA不必。消息是异步传输，在操作完成之前客户可以看到一个友好的Loading或者其他友好的提示，等到操作完成数据可用之后，前台的UI采用javascript/Flash的方式进行刷新。</p> <p><strong>2 AMOWA的出生历程</strong></p> <p>AMOWA的提出来自于网页出现的这十多年。</p> <p>最初始阶段传统的聊天室。前台网页往往需要经过几秒钟自动刷新一次来获取其他在线用户的发言。后来出现了无刷新聊天室，或多或少采用了隐藏帧来处理消息的定时收发。在这期间出现了Pushlet, 一种意图将HTTP消息"推"到客户端而不是客户端主动"拉"的方式。这种方式在客户端看来，就像是一个有一个永远也下载不完的页面；服务器端往往不允许buffer, 并通过response.write然后直接response.flush的方式向客户端写数据。</p> <p>之后的一段时间WEB应用一直停留在标准的Request/Response的方式很久，直到XMLHTTP的出现，面向异步消息的应用才多了起来，同时由于思维方式的扩展，很多采用同样思维的应用也出现了，这些应用跨越了很多行业，包括商用和娱乐行业，直到现在，面向异步消息的WEB应用已经能够成功胜任大多数的WEB应用，并以改善用户体验为最终目标，越来越受到重视。</p> <p><strong>3 应用场景</strong></p><img src="http://www.jzchen.net/images/01.gif" /> <p>商用领域，包括但不限于</p> <p>l&nbsp;邮件应用程序。这一点，在Gmail上已经得到验证。邮件应用是最典型的异步、消息的应用，在WEB环境下，异步消息模式完全有理由应用在邮件系统客户端中。如果有一种方式能够让你不刷新就能够获取新邮件，让你不需切换页面就能够阅读/编写邮件，你还会想回到老路上吗？</p> <p>2&nbsp;即时消息应用。典型的无外乎MSN Web Messenger. 即时消息并不要求实时性。在即时消息系统中，延迟2~3秒用户是完全符合用户期待。而这宝贵的2~3秒给了即时消息的WEB应用提供了生存空间，并给了即时消息服务提供商新的卖点。</p> <p>3&nbsp;商业智能客户端。商业智能产品越来越趋向于WEB--或许这是整个世界应用的发展趋势；WEB上对数据立方的钻取、旋转、切片如果需要切换页面，没有多少人会很愉快的接受这样的系统。这样需要频繁操作的系统，AMOWA是当仁不二的选择。</p> <p>4&nbsp;WEB地图系统。<a href="http://www.go2map.com/">www.go2map.com</a> 上的地图，大家可以看到异步操作模式下的地图是多么自然；相反，ICQ提供的地图服务让人难以接受：每次点击或者圈选地图之后，就要等待一段时间的白屏。</p> <p>5&nbsp;其它操作性强的系统。比如，财务信息管理系统，前面提到的Bug管理系统，具备明显或者能够抽象成命令特征的系统。注意，国内政府或者大型国企需要的OA等项目不太适合应用AMOWA，原因是大多数情况下，消息格式的定义比起需求的控制、界面的变更以及项目完成后的使用率，显得微不足道且毫无意义。</p> <p>娱乐与游戏领域，包括但不限于：</p> <p>l&nbsp;聊天室。没有什么比一边聊天一边听着浏览器自动刷新时发出的"叭哒"声更讨厌了。更加细心的定义AMOWA的消息结构，你会发现聊天室的访问者更多了。</p> <p>2&nbsp;WEB在线游戏。不要以为不可能，请访问<a href="http://www.51js.com/">www.51js.com</a>, 那里有令很多传统WEB开发者意想不到的东西。目前已经实现的有：LiveChatV2, 一个纯JavaScript+HTML的场景聊天室；中国象棋，纯JavaScript+HTML的网络版中国象棋。目前台湾有一款真正的WEB网络即时战略游戏，正在线运营，月卡好几十台币。<br />当然，由于异步消息的限制，WEB在线游戏不可能做到实时，因此目前WEB网游被限制在消息实时性要求不高的领域，如棋牌，社区，简单的网络游戏。3&nbsp;其它。</p> <p><strong>4 优点</strong><br /><strong>4.1 从用户来看：</strong></p> <p><strong>1.&nbsp;更好的用户体验。<br /></strong>很多高级用户不愿意听到浏览器刷新发出的声音。这个用户群体在扩大。在现代的企业级WEB应用中，经常有及时消息传递的要求；让他们听到刷新的声音是不合适的。AMOWA的引入将彻底无刷新，用户感觉更好。</p> <p><strong>2.&nbsp;更好的用户体验</strong><br />对用户而言，单页面的操作更为友好。大部分用户对于切换页面时那段漫长的时光感到度日如年，并且感到不自然。在商业智能/报表这样的操作中，单页面操作显得格外重要。</p> <p><strong>3.&nbsp;更好的用户体验<br /></strong>等待的页面更为友好。在操作得到数据返回之前，用户将看到的不是白屏和长长的浏览器状态条，取而代之更为友好的提示和状态条。对于高级用户，这样的改变将令他们惊喜。</p> <p><strong>4….呃，更好的用户体验<br /></strong>由于系统中传递的是纯粹的数据，对用户而言，系统显得比普通的应用更快了，感觉当然更好。</p> <p><strong>4.2 技术观点</strong></p> <p>1.&nbsp;在某些场景下，客户端可以是纯粹的HTML, 而不是讨厌的JSP Tag, 或者Tapestry难以理解的jwcid（实际上一点也不难理解^_^）, 或者Struts那恐怖的tag, 或者毫无IDE工具支持的JSF。业务逻辑、服务器端特定语言特征与客户端彻底分开。美工可以真正安心的做页面。</p> <p>2.&nbsp;服务器端可以进行一些有趣的设计，例如任务队列。由于客户端发送来的是消息，服务器端可以将发送来的消息按照队列来进行处理，而不用马上响应。<br />3.&nbsp;容易实现分布式部署。由于客户端与服务器端的完全分离，服务器端的分布、状态迁移、Cache共享将不成为问题。</p> <p><strong>5 基于AMOWA的设计<br /></strong>基于AMOWA的设计将分为两个部分：面向企业级典型WEB应用和面向娱乐游戏的典型WEB应用。</p> <p><strong>5.1 面向企业级典型WEB应用</strong></p> <p>基本原则：一个典型的企业级WEB应用一定是一个分层结构、设计良好的应用。分层设计意味着数据层，业务逻辑层与表示层能够清晰的分开。</p> <p>AMOWA专著于WEB表示层，它连接了系统的业务逻辑与前端WEB页面。AMOWA Gateway负责解析前台发送来的消息包，将消息包解析为相应的业务操作，调用业务逻辑操作，将操作结果进行序列化，封包为消息，发送给客户端。</p> <p>客户端有一个客户端引擎，能够接收、解析消息包，并根据消息内容，对UI进行刷新。这里的刷新可能对应一个javascript脚本，也可能对应一个Flash的action script脚本。</p> <p>AMOWA定位在与Struts, WebWork, Tapestry等WEB框架的同一个层次上，并能够取代他们。<br />下图表示了这种架构：<br /><br /><img src="http://www.jzchen.net/images/02.gif" /> <br />这种WEB应用在AMOWA看来，具备最大的特征是：各个会话之间的交互较少。在下面的面向娱乐游戏的AMOWA设计中，会话之间的交互显得格外重要。</p> <p><strong>5.2 面向娱乐游戏的AMOWA设计</strong></p> <p>面向娱乐的AMOWA与面向企业WEB应用的根本不同在于，前者会话交互需求较高，比如在一个网络游戏中，经常需要知道另一个在线玩家的当前状态，因此，在这种设计中存在一个中央context来保存这些信息，来保证在线操作者之间的交互。基本设计图如下：<br /><img src="http://www.jzchen.net/images/03.gif" /><br /></p> <p>Context连接了基本的底层设施--比如，保存玩家经验值，扣点等。</p> <p><strong>6 实现</strong><br />以下是一个AMOWA接口的伪代码<br />* 客户端将操作包装成消息并发送：<br /><font color="#a52a2a">&nbsp;&nbsp;&nbsp; clientOperation.sendMessageBundle(msgBundle, callback);</font><br />&nbsp;&nbsp;&nbsp; callback定义了消息的处理策略。<br />*&nbsp;AMOWA Gateway负责获取前台发送的消息，并处理<br /><font color="#a52a2a">&nbsp;&nbsp;&nbsp; messageBundle = buildMessage(request); //将Request包装成MessageBundle<br />&nbsp;&nbsp;&nbsp; returnedMSGBundle = process(messageBundle); // 处理消息包<br />&nbsp;&nbsp;&nbsp; sendReturnedBundle(returnedMSGBundle );&nbsp; //发送处理结果</font><br />*&nbsp;在process方法内部，简单的调用业务逻辑层的处理方式：<br />&nbsp;&nbsp;&nbsp; <font color="#a52a2a">bizDTO = bizService.doSomething();<br />&nbsp;&nbsp;&nbsp; return bizDTO;<br /></font>AMOWA Engine将会将bizDTO序列化为系统能够辨认的消息格式，生成消息包。</p> <p>以上的实现相对简略，实际上，设计这样的一个AMOWA Framework技术上不是太难的。如果想偷懒，XML-RPC的实现可以直接拿来使用。XML-RPC在几乎所有语言上都有实现。</p> <p><strong>7 相关技术</strong><br /><strong>客户端技术：</strong><br />DHTML, JavaScript<br />我在文中偏向于这两点，是因为我对这两种技术相对较熟悉，实际上Flash更适合用来做前台表现。当然，前台用何种技术并不影响AMOWA的架构方式。AMOWA定义了客户机于服务器之间的一种通信方式，而并非客户端实现方式。</p> <p><strong>服务器端技术：</strong><br />任意一种服务器端技术都是可以的。然而，具备面向对象特征的服务器端技术在实现上能够更自由、合理一些。那些老式的服务器端技术如ASP，想要实现一个AMOWA Framework显得较为困难，这一点在设计WEB网络游戏时显得格外突出。</p> <p>XML-Binding的技术一定是需要的，无论是客户端或者是服务器端。这是由于我们的消息格时往往用XML的方式来定义。在服务器端返回对象时，能够直接序列化为XML将会给消息的包装带来便利之处；客户端若能够将HTML或者Flash某个控件直接与XML一个节点或者属性进行绑定，那么前台的工作量将会更少。鉴于服务器端的XML绑定已经有很多不同的实现，如JAXB, Castor, JiBX等，笔者最近在试图无浏览器差别的将XML对象绑定到HTML元素上。</p> <p>选择一种消息传输协议是必要的。目前有两种选择：Web-Service和XML-RPC。在现有系统的消息特征明确并且不太可能会将每个方法暴露给外界的前提下，Web-Service是最不推荐的选择。Web-Service冗余的信息太多，传输或解析都会带来时间和带宽损耗。如果没有时间定义消息格式，那么XML-RPC将是一种比较好的选择。他对数据类型进行了较好的包装，对于WEB应用足够，并且有足够多的语言实现支持，客户端和服务器端都有。</p> <p>如果时间足够，最好能够自行定义消息结构，和编码、解码方法。这并不是很复杂的事情。这样编码的消息能够以最小的带宽损耗进行传输。这一点，在带宽有限制的应用中显得格外重要，例如银行的业务系统。</p> <p><strong>8 相关问答</strong><br />问：AMOWA与RIA有什么关系？<br />答：没有关系。AMOWA定义了WEB应用一种新型的交互方式--采用消息方式。RIA可以是AMOWA客户端的一种实现，AMOWA的客户端实现可以是Flash, XUL, 或者HTML. </p> <p>问：AMOWA与XMLHTTP的关系？<br />答：XMLHTTP是AMOWA实现无刷新、异步消息的一种手段。目前只有这样一种手段来获得异步连接。其他方式如动态加载远程javascript, 动态加载远程网页，多少是同步的方式，会导致客户端浏览器的瞬间不可用。</p> <p>问：AMOWA有没有实现？<br />答：暂时没有。我正在编写一个，主要面向在线游戏。但是由于工作繁忙，进展缓慢。基本思想如同上面的描述，有兴趣的同仁可以自行实现，造福人类。</p> <p>问：发送和接收为什么是MessageBundle，而不是单个Message?<br />答：这是为了保证执行效率。在LiveChatV2中，用户每次的鼠标点击将会发送一个消息，如果用户鼠标点击速度相当快--比如每秒几十次，这么密集的访问可能会造成服务器没必要的繁忙。因此，客户端采取没隔一段时间记录一次，将这段时间的鼠标动作捆绑成一个消息包，发送给服务器。</p> <p>其他问题，欢迎交流：mechiland [###] gmail.com</p> <p><strong>9 总结</strong><br />AMOWA引入一种新的WEB开发模式，可以换掉标准的MVC开发方式了！<br />AMOWA的引入，从根本上讲，完全是为了给用户更好的体验，从而使产品更具人性化，更有竞争力。<br />更快。<br /></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[本文的源自于Martin Fowler的著作《Patterns of Enterprise Application Architecture》中关于Web表示模式的一些启发。作者做了多年Web开发，并不限于企业级Web应用。在娱乐方面的应用（如聊天室，即时消息，Web场景聊天等）得到的一些工作经验促使我在企业级应用上进行了深层次的探索和思考，并形成了这篇文章。目前国内外并没有明显在这方面的文章或著作，希望此文能够给做WEB开发的同仁一点借鉴之处。]]></excerpt:encoded>
		<wp:post_id>78</wp:post_id>
		<wp:post_date>2004-11-15 10:54:46</wp:post_date>
		<wp:post_date_gmt>2004-11-15 02:54:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%9d%a2%e5%90%91%e5%bc%82%e6%ad%a5%e6%b6%88%e6%81%af%e7%9a%84web%e5%ba%94%e7%94%a8amowa</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[guyunbing]]></wp:comment_author>
			<wp:comment_author_email>guyun4@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.170.131.2</wp:comment_author_IP>
			<wp:comment_date>2005-05-09 23:20:17</wp:comment_date>
			<wp:comment_date_gmt>2005-05-09 15:20:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这一段时间在分析WEB新技术及由此带来的新机会,不知是通过谁的链接来到了您的网站,希望有机会使用你的技术!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>95</wp:comment_id>
			<wp:comment_author><![CDATA[Calvin]]></wp:comment_author>
			<wp:comment_author_email>calviny@acmilan.com.cn</wp:comment_author_email>
			<wp:comment_author_url>http://spaces.msn.com/members/skywalker19/</wp:comment_author_url>
			<wp:comment_author_IP>60.191.14.131</wp:comment_author_IP>
			<wp:comment_date>2005-06-17 14:16:51</wp:comment_date>
			<wp:comment_date_gmt>2005-06-17 06:16:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不错的东西 可惜图片看不到 是不是给整没了？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>117</wp:comment_id>
			<wp:comment_author><![CDATA[wang]]></wp:comment_author>
			<wp:comment_author_email>tsingsong_2001@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://tsimgsong.blogchina.com</wp:comment_author_url>
			<wp:comment_author_IP>221.235.58.247</wp:comment_author_IP>
			<wp:comment_date>2005-07-25 14:21:32</wp:comment_date>
			<wp:comment_date_gmt>2005-07-25 06:21:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[听你的介绍非常感兴趣。可以学习一下你的技术吗？
msn:tsingsong_2001@hotmail.com
qq:46158166]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>163</wp:comment_id>
			<wp:comment_author><![CDATA[chen]]></wp:comment_author>
			<wp:comment_author_email>newbug.chen@gmial.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.242.128.162</wp:comment_author_IP>
			<wp:comment_date>2005-09-06 13:13:43</wp:comment_date>
			<wp:comment_date_gmt>2005-09-06 05:13:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[受益，开始关注这一应用]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>588</wp:comment_id>
			<wp:comment_author><![CDATA[zzz]]></wp:comment_author>
			<wp:comment_author_email>pengtaylor@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.249.142.82</wp:comment_author_IP>
			<wp:comment_date>2006-01-11 16:45:00</wp:comment_date>
			<wp:comment_date_gmt>2006-01-11 08:45:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看看buffalo]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>619</wp:comment_id>
			<wp:comment_author><![CDATA[晕倒ing]]></wp:comment_author>
			<wp:comment_author_email>fting@fting.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.28.10.198</wp:comment_author_IP>
			<wp:comment_date>2006-03-03 16:05:13</wp:comment_date>
			<wp:comment_date_gmt>2006-03-03 08:05:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不做评价了，哎，跟现在研究生论文一个档次了……]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2858</wp:comment_id>
			<wp:comment_author><![CDATA[leaven]]></wp:comment_author>
			<wp:comment_author_email>leaven@gmai_.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.maln.cn</wp:comment_author_url>
			<wp:comment_author_IP>222.182.11.248</wp:comment_author_IP>
			<wp:comment_date>2006-05-23 17:27:35</wp:comment_date>
			<wp:comment_date_gmt>2006-05-23 09:27:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[您好！
有幸拜读您的文章，深受启发。想必之后的时间里会在您提到的技术上多多学习。

但在这儿，我有2个问题想请教阁下：
1、您提到AMOWA可以以“队列”方式来处理客户端的请求。我想请问如何用服务器端程序来实现“队列”？我接触到的WEB服务器语言都是以“响应请求”的方式工作的（比如服务器上有一个getmsg.jsp的文件，这个文件只会在被客户端请求的时候才会运行一次。）。如何才能让这些jsp文件实现队列呢？或者是不是必须用运行于服务器上的应用程序来处理？

2、服务器如何定向发包？c/s模式下服务器端和客户端通过通过TCP/IP协议连接。每个客户端和服务器端连接后都有一个对应的连接ID号。服务器端可以更具连接ID号向指定的客户端发送信令。但b/s模式下如何实现呢？

谢谢！

leaven[at]gmail.com]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>不跳脱衣舞</title>
		<link>http://michael.nona.name/archives/79</link>
		<pubDate>Tue, 16 Nov 2004 02:55:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/79</guid>
		<description></description>
		<content:encoded><![CDATA[ 许多Blog开始沉寂下来，这应该是一件好事。目前积攒的能量大概已经释放的差不多了罢，否则我的FeedDemon上为何迟迟不见重量级的文案，只有些 许简单的文档零星散落，让人感受到了这个冬季依然存有活物。当然，昨日黑今日白的娱乐圈新闻不在此列，Intel与AMD永远的口水战及其记者壁垒也不在 此列，更不提永远看不到尽头的在伊拉克的美国大兵。<br /> <br /> Blog诞生初期那一阵子引发了众多英雄的诞生。由于交流渠道的扩充，每个人的技术能力在一夜之间被暴露出来，技术圈内Blog迅速成为交流技术思维的工 具，如同百晓生的兵器谱，每个人的心里对Blog的优劣有了一个明显或者隐藏的排名。然而早期的激情与自己的能力在被释放之后，Blog歇了下来。 Blogger们，如同我自己，开始担心，如果Blog很长时间没有东西更新，会不会如同被抛弃的孩子被人遗忘。巅峰到低谷的感觉很难受，于是出现了我前 面Blog提到的"<a href="http://webuc.net/mechiland/archive/2004/05/15/656.aspx" target="_blank">口水文字</a>"， 这些文字就像想引起女生注意的男孩做的恶作剧，单纯得可爱，单纯的令人心碎。<br /> <br /> 电视中，电影中时常会有脱衣的表演。我想到一个非常悲凉的比喻，技术人通过Blog表达自己思想的过程就像表演脱衣舞。每传达了一个思想就脱掉了一件衣 服。思想的深度和广度表示了衣服的华丽程度，从而引起观众更多的惊叹。高明的舞者总能在一个适当的时间内将衣服脱到适当然后谢幕，引起观众的美感与期待； 而不太高明的技术者往往迫不及待的在不太长的时间内将自己脱个精光，或者匆匆躲进后幕，换一件更为破烂不堪的衣服出来表演。<br /> <br /> Martin Fowler的网站访问量巨大，他的著作遍及世界，被众多读者品读。他二十余年软件行业的积累，通过每年一两本书或者几个月一篇文章的方式释放出来，观众 看到的是一个高明的舞者，一个让人追逐让人陶醉的舞者。很多事情，特别是技术上，需要太久太久的积累，过早的不适当的释放，就像《赤旗寰球记》中“亿万民 主投票拳”，满天胡打但不中要害。百年的酒耐人寻味，多年的积累让人承认才有成就感，来得快的东西，去得也不慢。<br /> <br /> 最后，以我自创的一句话结束：你是否拥有让众人传唱千年的裸体？如果不是，请不要跳脱衣舞。<br /> ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date>2004-11-16 10:55:09</wp:post_date>
		<wp:post_date_gmt>2004-11-16 02:55:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%8d%e8%b7%b3%e8%84%b1%e8%a1%a3%e8%88%9e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>java.lang.NoSuchMethodError: xjavadoc.XJavaDoc.setDocEncoding(Ljava/lang/String;)V</title>
		<link>http://michael.nona.name/archives/80</link>
		<pubDate>Sat, 20 Nov 2004 02:55:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/80</guid>
		<description></description>
		<content:encoded><![CDATA[<p>昨晚开始了痛苦的历程。</p> <p>一向工作得好好的xdoclet，自从我将核心包更新为1.2.2后，噩梦开始了。每次运行hibernatedoclet, 都会出现以下错误：</p> <p>java.lang.NoSuchMethodError: xjavadoc.XJavaDoc.setDocEncoding(Ljava/lang/String;<br />)V<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at xdoclet.XmlSubTask.startProcess(XmlSubTask.java:184)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at xdoclet.modules.hibernate.HibernateSubTask.execute(HibernateSubTask.j<br />ava:123)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at xdoclet.XDocletMain.start(XDocletMain.java:48)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at xdoclet.DocletTask.start(DocletTask.java:468)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at xjavadoc.ant.XJavadocTask.execute(XJavadocTask.java:96)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at org.apache.tools.ant.Task.perform(Task.java:364)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at org.apache.tools.ant.Target.execute(Target.java:341)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at org.apache.tools.ant.Target.performTasks(Target.java:369)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at org.apache.tools.ant.Project.executeTarget(Project.java:1214)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at org.apache.tools.ant.Project.executeTargets(Project.java:1062)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at org.apache.tools.ant.Main.runBuild(Main.java:673)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at org.apache.tools.ant.Main.startAnt(Main.java:188)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at org.apache.tools.ant.launch.Launcher.run(Launcher.java:196)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at org.apache.tools.ant.launch.Launcher.main(Launcher.java:55)</p> <p>无法生成hibernate配置文件</p> <p>没有源码，反编译找到XmlSubTask，没发现什么问题；找到xjavadoc相关的类，setDocEncoding赫然存在。</p> <p>Google了一下，只有两条纪录，也没有解决，只是说注意版本。我试着将所有xdoclet jar文件换成1.2b4, 再次ant...居然成功了！郁闷，然后依次将hibernate, web相关的jar更新为1.2.2,没问题；就在更新xdoclet.jar之后，出现了上面提到的那个错误。</p> <p>问题很明显了，是最新版本的问题。具体原因不祥。还是老老实实用旧版本吧。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date>2004-11-20 10:55:34</wp:post_date>
		<wp:post_date_gmt>2004-11-20 02:55:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javalangnosuchmethoderror-xjavadocxjavadocsetdocencodingljavalangstringv</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>Web框架选型思考</title>
		<link>http://michael.nona.name/archives/81</link>
		<pubDate>Sat, 27 Nov 2004 02:55:56 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/81</guid>
		<description></description>
		<content:encoded><![CDATA[<p>经过漫长的商务折磨，终于确定了自己平台规划负责人的角色，任务非常明确：采用开源技术进行组装，开发一个具备业务含义、能够进行快速开发的软件平台。</p> <p>现有项目的运行情况让我认识到了一点：在持久层与业务逻辑的相对成熟的情况下，WEB层的工作最为繁重，哪怕是引入了Tiles改善布局也如此。Struts天生的缺陷，让整个项目中WEB层显得笨拙不堪，成为整个系统中bad smell最重的的区域。从软件技术大会回来的同事说，很多同行都认为B/S系统中WEB端的工作量是整个系统的瓶颈。这一点看来已经得到了业界的普遍认可。</p> <p>而现有的这个平台一定是持续使用的。如果不在WEB开发上进行改善，那么这个平台显得毫无意义：在依托面向对象技术的Java平台下，大部分其它的东西都有现成并且健壮的，对我而言都是熟悉的；而在WEB层，一定要有一个具备重用、珍惜每一个可重用WEB组件的框架在支撑。由于我们这个行业的特殊性，再带宽上也应当有所考虑。</p> <p>基于这些特征，我首先想到的就是面向组件的WEB框架。这里的组件一定是网页上可见的组件，能够天生穿透Java/Javascript/Html，而不是笨拙的在JSP中import javascript；或者采用不堪的JSP tag. 这么看来，具备这一特征的、成熟的框架只有Tapestry了。</p> <p>然而我对tapestry还有所保留，原因有两点：一个是对大型系统的支持不足。我们要面临的系统达到十几个子系统，3000多种交易。而Tapestry模块的支持区分不足，这一点上，WebWork来的要自然的多，Struts也提供了支持（我实在是难以出口这个词，虽然Struts将我引入了MVC的门，但是我对其丑陋的设计，臃肿的配置文件充满了憎恶）。</p> <p>第二是Tapestry难以理解的URL，总让人觉得诡异（刚开始觉得挺有意思），不便于书签。好在有成功的项目证明进行修改是可行的，这个工作量也应该不大。</p> <p>如果我的AMOWA概念有实现，那么我一定会选择Amowa的实现。因为Amowa中异步的概念刚好满足了系统带宽的要求。Web框架的选择过程让我了解到，组件式的web框架在知识积累上有多么重要。试问一下，我们以前做的WEB应用中，web端有多少能够自如的重用？</p> <p>纵然Tapestry不尽人意，我还是决定选择Tapestry来作为平台的WEB框架（有人会说Tapestry不便于测试，试问又有多少合理的项目会将业务逻辑写在XXXPage中？），对其进行一些改造是必需的，比起持续使用与知识积累带来的好处，这么点工作量算不了什么。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date>2004-11-27 10:55:56</wp:post_date>
		<wp:post_date_gmt>2004-11-27 02:55:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web%e6%a1%86%e6%9e%b6%e9%80%89%e5%9e%8b%e6%80%9d%e8%80%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>112</wp:comment_id>
			<wp:comment_author><![CDATA[gongh]]></wp:comment_author>
			<wp:comment_author_email>gonghonggong@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.108.166.131</wp:comment_author_IP>
			<wp:comment_date>2005-07-08 17:28:23</wp:comment_date>
			<wp:comment_date_gmt>2005-07-08 09:28:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你好，我刚学Tapestry，能不能指导我一下，我的MSN是gonghonggong@hotmail.com]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>596</wp:comment_id>
			<wp:comment_author><![CDATA[诚邀各位仁人志士加盟JWC(Java Web Component)开源组织]]></wp:comment_author>
			<wp:comment_author_email>org_jwc@126.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.cn-java.com:6001/cnjava/mvnforum/viewthread?thread=4776</wp:comment_author_url>
			<wp:comment_author_IP>222.183.17.156</wp:comment_author_IP>
			<wp:comment_date>2006-01-23 14:04:16</wp:comment_date>
			<wp:comment_date_gmt>2006-01-23 06:04:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[各位网友，您们好！

***这是JWC(Java Web Component)开源组织的公开信。

首先作自我介绍：组织名称------JWC(Java Web Component)

*************技术名称------DMVC(Double Model View Contraller)

*************创建组织的目的：推动IT技术的进步，为社会作做贡献。

***酬薪问题：因为本项目的公益性质，所以所有成员都没有薪水；但不

等于没有回报，成果实行公产主义分配策略。

***诚邀各位仁人志士加盟JWC(Java Web Component)开源组织。

组织机构：

（1）顾问团：由关注、指导、帮助这个项目的朋友组成。

（2）组长：一名，负责该项目开发的全面工作。

（3）副组长：两2，协助组长工作。

（4）框架设计师：10名，负责DMVC框架设计

（5）命名规范组：5名=1名组长+四名组员，负责命名规范规范的制定和

稽核。

（6）技术推广组：10名=1名组长+两名副组长+7名组员，负责将DMVC

技术推广到个Web应用开发商。

（7）资料组：3名=1名组长+两名组员，负责资料的收集维护

（8）程序设计组10个：作为DMVC框架的实现者，队伍必然是强大的。

由于系统各模块的工作量和劳动强度不同，每个程序设计组由1名

组长和若干名组员构成。并且程序设计组的个数会动态增加。

（9）人事组：5名=1名组长+四名组员，负责发现团结组织需要的人才。

纪律组：5名=1名组长+四名组员，无有规矩不成方圆。负责组织纪律和

制度的制定、监督、执行。

（10）测试组：10名=1名组长+两名副组长+7名组员，负责测试方法的

研究和测试。


报名方式：请将您的姓名、参考职务、电话、QQ号、Email、简介、代表

性作品发到JWC组织的电子邮箱：org_jwc@126.com ，备用邮箱：

org_jwc@56.com



*********************************技术概要摘录

***DMVC框架建立在J2EE架构的基础之上，是一个不错的企业级J2EE解决方案，DMVC充分吸收Strust 、extra 、Tapestry 、EOS 的MVC思想，利用Ajax 技术发展起来的。在传统的Web框架下，浏览器与服务器数据交互频繁，客户端一个小小的动作，页面不得不刷新，既影响了客户端的操作效果，同时也增大了网络流量、服务器负载。虽然可以使用隐含刷新技巧欺骗用户的眼睛，但数据在浏览器与服务器之间一个来回的路费还是少不了的。举一个购物车的实例吧：在传统模式下，用户每添加一个产品到购物车中，则必须向服务器发一个Http请求，更新Session Bean ,然后从服务器应答一个HttpServletResponse 来同步Session Bean 与浏览器视图的状态，这样才能在购物车中看到新添加的产品。在服务器应答浏览器(Response) 的过程中，那些构成界面元素的HTML标记被一次又一次的重复传输,增大了网络流量。并且要求给每一个购物车分配一个Session Bean ，在购物高峰期，EJB容器里一定创建了不少的Session Bean实例吧，是不是很耗资源，这就增大了服务器负载；而被分配出去的Session Bean 是否都很忙，得时时维护自己的状态。最糟糕的是下面两种情况，情况一、用户购了半天物，最后决定不要了，服务器白忙了一阵子，资源浪费呀！情况二、用户的购物车刚刚分配得到一个Session Bean 就有事离开了，而服务器必须等待Session Bean超时才能回收其资源，很郁闷吧！不用那么难过，DMVC 能为你解决以上烦恼。


*** DMVC 对界面和数据采用完全分离的解决方案，分别实现MVC模型。为了比较，还是举刚才购物车的例子吧。当用户添加一个产品到购物车中时，因为界面和数据完全分离，购物车的界面元素没有更改，所以浏览器不需要向服务器发送Http请求，服务器更不用重新生成界面应答浏览器，好处有以下几点：1、减轻服务器的负载。2、减轻网络流量。3、页面不用刷新。4、提高响应速度。那数据又是怎样运着的呢？首先，客户把数据添加到ESB（Enterprise Script Bean）容器中以XML数据岛的形式存形成ESB,ESB是DMVC中的数据模型（Data Model），当Data Model改变时，自动发送消息通知Data View 更新保持与DataModel同步。这样用户就在购物车中看到了刚才添加的产品。当必要的时候才进行Bean Bean（EJB and ESB）状态同步,什么时机才是必要的时候呢？当然是客户去收银台后将要把购物车中的数据持久化到数据库中时。这个Bean Bean同步的过程是这样的，首先由用户在Data view 上触发一个Bean Bean同步事件以消息的形式发送给Data Controller，Data Controller分析事件并作出决定，向服务器发出XmlHttp请求，要求同步Bean Bean 状态。这样EJB容器里只需要只需要少量的悠闲的EJB，他们可以在EJB Container 里玩、聊天、谈恋爱、睡觉都可以，当Bean Bean 同步的那一瞬间才给购物车分配一个Session Bean ,EJB持久化完毕后立刻回到EJB Container 容器待命，高效吧！


***DMVC为提高程序运行效率和编程效率，让程序做必要的事，程序员不做重复的事。这是DMVC的一大特色。举个树（tree）的实例吧：在传统模式下，要在浏览器中显示一棵树，得把树的子子孙孙都从数据库中查询出来发到浏览器，而特定用户在一时间内不可能点击所有节点，程序做了些无用工，只是白白浪费服务器的CPU 、内存、网络带宽。 DMVC是这样提高效率的：因为HTML标记中无树标签，在DMVC中树（tree）是由节点数据在JavaScript控制下利用层标记生成的。而树的显示期间树的界面元素不会改变，改变的只是节点的逐步增多。数据的流程是这样的，用户在地址栏敲入网址形成Http请求，请求中包含有树，服务器查询树的根和子节点连同树的JavaScript 相对地址一起发到浏览器中。用户看到了树的根及子节点。 随着用户点击树节点对树的张开。在tree 的 data view 上不断形成树的张开事件，Data Controller 分析张开事件，若发现该节点的子节点不在ESB Container中则向服务器中发出XmlHttp请求，服务器查询子节点的结果形成XML格式的数据以HttpServletResponse应答浏览器，更新Data Model，当Data Model 更新后立即以消息的形式通知Data View 与其同步。用户看到了子节点。当用户再次点击相同的节点并形成张开事件发出消息时，Data Controller 分析张开事件发现该节点的子节点在ESB Container 中则不处理该事件，直接张开树节点。节点的增加、删除、更新，我就一笔概括了，由于用户对节点的增删改必然造成Bean Bean 状态不同步，我们把这个差值叫Δ(增量)，EJB状态小于ESB状态时，Δvalue的取值为负，反之Δvalue的取值为正。当要对ESB状态持久化时，只需要Bean Bean状态同步，持久化EJB即可。


***把业务逻辑与界面显示层分离是设计模式的一大进步，而把数据与界面元素完全分离可谓百尺杆头 更进一步。 数据与界面元素完全分离表现在：1、数据格式不同，界面数据格式为超文本标记格式，而数据岛采用XML格式。2、传输协议不同，界面用HTTP协议，数据岛采用XmlHttp协议。3、界面元素与数据岛的更新不相互影响。


***用最少的代码实现复杂的功能是DMVC的又一特点。DMVC在最大程度上满足了当今应用大规定制时代的随需应变要求，符合应用平台化，功能构件化的要求。



—————————————————————— 2006-01-18
—————————————————————— jwc]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68318</wp:comment_id>
			<wp:comment_author><![CDATA[WangRyan]]></wp:comment_author>
			<wp:comment_author_email>wzhynet@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.225.61.183</wp:comment_author_IP>
			<wp:comment_date>2010-04-02 20:42:39</wp:comment_date>
			<wp:comment_date_gmt>2010-04-02 12:42:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[期待能加入，不求回报，只求共同努力，共同进步！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>控制发散思维</title>
		<link>http://michael.nona.name/archives/82</link>
		<pubDate>Wed, 22 Dec 2004 02:56:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/82</guid>
		<description></description>
		<content:encoded><![CDATA[<p>深入开源世界的程序员的思维大多发散严重，这种发散在很多情况下是有害的。在制作一个新的产品/项目之前，很多人都会说，唔，你应该参考好的开源东西，把他直接使用。殊不知这样拿来就用伤害最大：因为自己根本没有机会仔细思考自己要做的东西是什么样子的。这就是Hibernate之所以创建EHCache的原因。在EHCache之前，已经有不少Cache实现，为什么没有直接使用？因为Hibernate自己都不知道Cache接口应该是什么样的。因此有了小小的简陋的EHCache, 正是有了这个小小的东西，其他Cache机制的集成才成为可能。因为Hibernate知道与外界集成要遵循的接口是什么。如果当初直接采用某一种Cache实现，恐怕就没有了现在灵活的Cache机制了。</p> <p>（这种思维的方式同样可以推广，为什么小公司不愿意接受数额较大的融资，因为这样很容易将小公司原本不太清晰的发展观念冲垮，最后什么也不是。）</p> <p>现在设计平台，发现陷入了这样一个怪圈：我总想将最新最好的开源产品集成到平台中，却忽略了Roadmap Feature的定义，也就是说，没有一个清晰的标尺来定义平台某一个版本应该包含那些特征，应该达到什么效果。这样做的后果是我陷入在一个又一个优秀的产品中，像上瘾的烟鬼拔不出来。在深邃的开源世界里，一切的一切都太又诱惑了：为了选定一种O/R映射方案，我比较了JDO的各种实现以及Hibernate，阅读了大量文档（广告？），最后还是回归到Hibernate; 为了选定一种Mock测试方案，我比较了EasyMock, jMock, 之前我从未用过Mock测试，现在我对EasyMock的机制已经相当清楚了；为了选定一种代码覆盖率工具，我比较了Clover, Jcoverage和Emma，最后选定了Jcoverage， 为了选择一种IoC容器，我比较了Spring和 HiveMind，最后选定Spring, 为了选定一种Web开发框架，我重新审视并比较了SpringMVC, WebWork, Struts, Tapestry.，最后选定了Tapestry。这个过程充满了感叹，也充满了诱惑性：很多具有相关性设计精美的项目会时不时招摇的在你眼前晃来晃去，让你忍不住看下去，然后你一个下午的光阴就耗费在从Google或者TSS或者JavaLobby一个链接开始而引入的一个深渊，留下你无法弥补的4个小时的时间。看着越来越近的Release Date, 心情越来越不爽。</p> <p>因此，一旦前期调研结束，程序员应当果断的将与开源的联系一举切断，专心致志的投入到实现中去，一旦发现有可能抠出新的设计的地方，不要马上就找开源的产品，请先用自己的智慧设计一个能用哪怕是破败不堪的（好的设计是重构出来的，不是吗？）东西，先将框架搭建出来，一个迭代过后，开始重构，等到这个设计基本成型了，能够运行了，然后重新获得与OS的联系，参考同类产品，进行重构或者集成。这么做的目标是控制住发散的思维，在有限的时间内拿出一个在当前状态下最好的方案与实现，没有底线的项目/产品是个毫无意义的泡泡，脆弱，除了作为夸夸的谈资，经不起明眼人的一锥子。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>82</wp:post_id>
		<wp:post_date>2004-12-22 10:56:24</wp:post_date>
		<wp:post_date_gmt>2004-12-22 02:56:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8e%a7%e5%88%b6%e5%8f%91%e6%95%a3%e6%80%9d%e7%bb%b4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>518</wp:comment_id>
			<wp:comment_author><![CDATA[南台湾  &raquo; Blog Archive   &raquo; 应对发散思维]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://firefly.wordpress.com/2005/11/18/e5ba94e5afb9e58f91e695a3e6809de7bbb4/</wp:comment_author_url>
			<wp:comment_author_IP>207.7.108.235</wp:comment_author_IP>
			<wp:comment_date>2005-11-18 15:44:59</wp:comment_date>
			<wp:comment_date_gmt>2005-11-18 07:44:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 事情都拖延。 	该控制一下了。 	 	控制发散思维 	 深入开源世界的程序员的思维大多发散严重，这种发散 [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>WEB(Javascript)远程调用方案清单</title>
		<link>http://michael.nona.name/archives/85</link>
		<pubDate>Mon, 28 Feb 2005 03:13:50 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/85</guid>
		<description></description>
		<content:encoded><![CDATA[WEB(Javascript)远程调用方案清单

Web远程过程调用（以下简称WebRPC）是在不刷新页面的前提下，对远程方法进行调用，是最近的一个热点；在一些场合下，他甚至成为不可替代的实现方式。WebRPC的实现方式经历了从普通URL读取，隐藏帧，IFrame, XMLHTTP乃至 Flash等。本文将对目前存在的WebRpc方案（产品）进行列表，并作简单评价。

评价将在以下几个方面进行：客户端实现方式，服务器端实现方式，是否自行封装协议，是否支持序列化/反序列化，序列化支持是否完备（原子类型，对象类型），是否支持异步/同步方式。注意，由于Web方式的远程调用没有得到大规模运用。笔者自己并没有在企业应用中采用WebRPC的经验，但在娱乐应用、在线游戏中，已经得到了相当好的运用。这些应用已经在《面向异步消息的Web应用(AMOWA)》中得到详细论述，有兴趣的可以在产品指南栏目中阅读这篇文章。

1 MSRS (Microsoft Remote Scripting)
地址：http://msdn.microsoft.com/library/default.asp?url=/library/en-us/rmscpt/Html/rmscpt1.asp
简介：在网页出现的早期，浏览器功能有限。Applet的出现，为MSRS提供了平台。在这项方案中，MSRS通过一个applet类以及页面上的参数配置，来与服务器端交互，从而实现了远程调用。采用此项技术实际上将页面不刷新的工作交给了一个名为rsproxy.class的不可见Applet完成。我见过早期的在线Web象棋采用此项方案。优点：轻而易举跨浏览器；缺点：服务器端采用微软asp, applet加载缓慢；不支持数据类型序列化/反序列化。

2 JSRS (Javascript Remote Scripting)
地址：http://www.blueshoes.org/en/javascript/jsrs/
简介：支持两种数据访问方式：HTTP GET方式（动态加载JS文件），HTTP POST方式（用JS动态创建一个Iframe, 在其中提交一个表单）。不用刷新页面，支持简单数据的序列化/反序列化。

3 XML-RPC
地址：http://www.xmlrpc.org/
简介：XML-RPC定义了一种协议规范，由于它的轻量级、概念完整，因此目前绝大多数语言都有实现，包括Java（Apache xml-rpc）, PHP, javascript, VBScript, python等等。最大的交流方式Blog协议，管理方法也遵循XML-RPC规范。优点：绝大多数语言都支持，简单，规范。缺点：Java实现对数据类型序列化支持有限

4 dwr (Direct Web Remoting)
地址：https://dwr.dev.java.net/
简介：一个在适当时候提出适当概念的小东西。采用xmlhttp传递请求，服务器端利用反射找到相应方法执行后将结果返回。较有创意的是，他将服务器端需要进行远程调用的代码动态转换为相应的js代码，前端可以直接显式调用。简单，可以作为WebRPC学习入门。不支持数据序列化

5 JSON-RPC
地址：http://oss.metaparadigm.com/jsonrpc/
简介：采用一种没听说过的数据交换协议JSON(JavaScript Object Notation, http://www.crockford.com/JSON/) 作为协议基础，在此之上进行数据调用，采用xmlhttp发送/接受请求，支持完整的数据序列化/反序列。目前，jason Web框架采用json-rpc为底层方式。

6 Burlap (http://caucho.com/burlap/index.xtp)
简介：也许会奇怪，为什么Burlap也能够算得上远程协议。实际上，与Hessian实现方式基本相同的Burlap（前者为二进制，后者为文本）, 在协议完整性上能够超过上述任一产品。目前我已经实现了JS调用Burlap服务的代码，是目前所有远程调用方式中最为优雅的实现。

7 XINS (XML Interface for Network Services)
地址：http://xins.sourceforge.net/index.html
简介：按照官方网站的说法，SOA + Java + XML + code_generation - complexity => XINS。这个庞大的东西需要定义一揽子描述文件然后才能在HTML中进行调用。从外观上看，这是最像样子的解决方案。对其了解不多，不做评价。

8 WebService, SOAP
简介：除了微软有一个webservice.htc控件，mozilla也有相应的webservice访问方式。因此，在HTML中访问webservice也是可行的。只是这种协议过于笨重，除非必要，没有人会在web客户端中使用。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>85</wp:post_id>
		<wp:post_date>2005-02-28 11:13:50</wp:post_date>
		<wp:post_date_gmt>2005-02-28 03:13:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>webjavascript%e8%bf%9c%e7%a8%8b%e8%b0%83%e7%94%a8%e6%96%b9%e6%a1%88%e6%b8%85%e5%8d%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>120</wp:comment_id>
			<wp:comment_author><![CDATA[Omarion Cantrewood]]></wp:comment_author>
			<wp:comment_author_email>omacan328@ov-pav.tk</wp:comment_author_email>
			<wp:comment_author_url>http://professional-gamblers.15-best-online-casinos.com</wp:comment_author_url>
			<wp:comment_author_IP>195.215.8.244</wp:comment_author_IP>
			<wp:comment_date>2005-07-27 01:28:54</wp:comment_date>
			<wp:comment_date_gmt>2005-07-26 17:28:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href='http://professional-gamblers.15-best-online-casinos.com' rel="nofollow">casinos</a> - An academic from the university
of macau, davis fong, predicted in a study last year that vip baccarat
play would contribute about 60 percent of the casinos]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>508</wp:comment_id>
			<wp:comment_author><![CDATA[Ernst de Haan]]></wp:comment_author>
			<wp:comment_author_email>wfedehaan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://xins.sourceforge.net/</wp:comment_author_url>
			<wp:comment_author_IP>81.69.207.29</wp:comment_author_IP>
			<wp:comment_date>2005-11-17 07:53:08</wp:comment_date>
			<wp:comment_date_gmt>2005-11-16 23:53:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I can't really understand what is written here, since I only speak some European languages, but since you mention XINS, you may be interested in knowing that versio 1.3.0-final was just released, featuring REST, XML-RPC and SOAP-support. Also, an updated 15-minute tutorial is available, along with screen shots, a user guide, etc.

Kind regards,

Ernst de Haan
XINS Developer
The Netherlands, Europe :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6495</wp:comment_id>
			<wp:comment_author><![CDATA[sun418756752]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.csdn.net/sun418756752/archive/2006/07/15/924892.aspx</wp:comment_author_url>
			<wp:comment_author_IP>211.100.21.184</wp:comment_author_IP>
			<wp:comment_date>2006-07-15 11:53:39</wp:comment_date>
			<wp:comment_date_gmt>2006-07-15 03:53:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>WEB(Javascript)远程调用方案清单</strong>

WEB(Javascript)远程调用方案清单]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67208</wp:comment_id>
			<wp:comment_author><![CDATA[高明]]></wp:comment_author>
			<wp:comment_author_email>gm_gliet@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.103.241.9</wp:comment_author_IP>
			<wp:comment_date>2008-03-22 02:13:46</wp:comment_date>
			<wp:comment_date_gmt>2008-03-21 18:13:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[陈兄你好，想请教你一个问题，你这篇文章发布很久了，几年过去了，不知道你对WebRPC是否有了新的认识，你在Web 2.0大会上的PPT我也看过，希望能够从你那里看到关于该技术的最新总结。我现在在做基于Web浏览器的仪器监控嵌入式发开，想知道都有些什么好技术能够实现。
目前来说，ajax技术可以实现。服务器推也行，但是觉得对于频繁交互来说，并不实用。不知你是否有新的看法。期盼你的答复...^_^]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Blog搬家</title>
		<link>http://michael.nona.name/archives/87</link>
		<pubDate>Tue, 01 Mar 2005 03:50:50 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/87</guid>
		<description></description>
		<content:encoded><![CDATA[感谢冰云同志让我的blog有了容身之地。原来的Blog实在太慢，而且不稳定。

花了一个上午，将原来的blog全部一篇篇贴到了这里。这让我对MS程序多添了几分愤恨之情。如果不是数据那么难导出，我也不会采取如此笨拙的方式进行数据移植。不过懒人有懒福，去年4月份至今只写了70多篇blog, 还不算太多。看着这么多blog，我居然有一种小心翼翼的珍爱之情。文章和为时而作，这些文字记录了我的思想，对我来说，是宝贝。遗憾的是，blog的评论全部都丢掉了...

今年我的www.jzchen.net域名也要到期了，到时候<a href="http://www.jzchen.net/projects/jsvalidation">jsvalidation</a>, <a href="http://www.jzchen.net/redialog">redialog</a>也没地方放了。我也没有继续购买的意思。毕竟积累有限，还是不跳脱衣舞的好。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>87</wp:post_id>
		<wp:post_date>2005-03-01 11:50:50</wp:post_date>
		<wp:post_date_gmt>2005-03-01 03:50:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blog%e6%90%ac%e5%ae%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[flyisland]]></wp:comment_author>
			<wp:comment_author_email>flyisland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://flyisland.blogbus.com</wp:comment_author_url>
			<wp:comment_author_IP>210.82.82.25</wp:comment_author_IP>
			<wp:comment_date>2005-03-01 14:03:18</wp:comment_date>
			<wp:comment_date_gmt>2005-03-01 06:03:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[建议：
1。用离线浏览工具把自己的blog整个下载到硬盘，呵呵，我就这么干过
2。看了你的项目，都挺不错的，可以考虑转移到 sourceforge, cosoft等项目托管网站。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>61.50.230.141</wp:comment_author_IP>
			<wp:comment_date>2005-03-01 14:14:27</wp:comment_date>
			<wp:comment_date_gmt>2005-03-01 06:14:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[cosoft上已经有jsvalidation了，但是没办法放页面。sourceforge也考虑过，只是没时间整理、翻译。Redialog不打算了，jsvalidation这么消耗有点不甘心。自我觉得还是一个不错的校验框架]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[virushuo]]></wp:comment_author>
			<wp:comment_author_email>huoju@bj1860.net</wp:comment_author_email>
			<wp:comment_author_url>http://blog.devep.net/virushuo</wp:comment_author_url>
			<wp:comment_author_IP>211.101.189.171</wp:comment_author_IP>
			<wp:comment_date>2005-03-04 09:08:31</wp:comment_date>
			<wp:comment_date_gmt>2005-03-04 01:08:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[放弃了有点可惜，你需要什么样的空间？也许我可以提供你。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>61.50.230.141</wp:comment_author_IP>
			<wp:comment_date>2005-03-07 10:39:06</wp:comment_date>
			<wp:comment_date_gmt>2005-03-07 02:39:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[稳定一点，别无所求。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>JSValidation准备放到GRO上</title>
		<link>http://michael.nona.name/archives/89</link>
		<pubDate>Fri, 04 Mar 2005 11:41:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/89</guid>
		<description></description>
		<content:encoded><![CDATA[找来找去，速度快服务又完善的只有<a href="http://gro.clinux.org">GRO</a>了。昨天下午注册了项目，回复的邮件说6小时内Shell账号就应该开通，24校内域名就可以访问。一天过去了，我使用SSH客户端还是无法登陆shell.gro.clinux.org, SSH, SSH2的公钥已经传到个人设置里面，但依然无法登陆，报错：

Server responded "No further authentication methods available"
No more authentication methods available

郁闷啊...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date>2005-03-04 19:41:13</wp:post_date>
		<wp:post_date_gmt>2005-03-04 11:41:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jsvalidation%e5%87%86%e5%a4%87%e6%94%be%e5%88%b0gro%e4%b8%8a</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[自然]]></wp:comment_author>
			<wp:comment_author_email>ultra_lys@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.51.196.226</wp:comment_author_IP>
			<wp:comment_date>2005-03-24 09:37:53</wp:comment_date>
			<wp:comment_date_gmt>2005-03-24 01:37:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这个问题我也遇到了，有没有解决啊。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67</wp:comment_id>
			<wp:comment_author><![CDATA[canonical]]></wp:comment_author>
			<wp:comment_author_email>zhj_gw@sina.com</wp:comment_author_email>
			<wp:comment_author_url>http://canonical.blogdriver.com</wp:comment_author_url>
			<wp:comment_author_IP>221.221.17.170</wp:comment_author_IP>
			<wp:comment_date>2005-05-25 00:58:48</wp:comment_date>
			<wp:comment_date_gmt>2005-05-24 16:58:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看了JSValidation, 不过我还是不太喜欢配置文件的做法。
http://canonical.blogdriver.com/canonical/696658.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>沟通与交流</title>
		<link>http://michael.nona.name/archives/90</link>
		<pubDate>Mon, 07 Mar 2005 11:40:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/90</guid>
		<description></description>
		<content:encoded><![CDATA[当我兴冲冲的把我最近研究成功的burlap web异步调用方案给PM演示时，他一脸茫然：这是什么东西？怎么实现的？

我意识到自己犯了一个错误：在没有事先描述语境的情况下就展示一个创意。于是我开始跟他描述在目前的系统中传统的页面切换方式无法实现动态授权，需要一种页面停留不刷新的方式来调用后台API。这种方式称为异步web远程调用。目前有很多种实现方式，但是burlap协议概念最完整，最适合使用，我将其与现有框架结合，并编写了客户端序列化/反序列化的代码，使之更加完整。等等。等我将这个过程描述清楚了，他才明白：原来是这么回事。

一对一，一对多的交流中，交流的内容其次，营造一个相互理解的语境往往占据了更多的时间。如何清晰、简短、快速的构造这个交流环境，以留出更多的时间来进行更有价值的交流，是应当深思的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>90</wp:post_id>
		<wp:post_date>2005-03-07 19:40:10</wp:post_date>
		<wp:post_date_gmt>2005-03-07 11:40:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b2%9f%e9%80%9a%e4%b8%8e%e4%ba%a4%e6%b5%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>NoClassDefError - 留意编译环境与运行环境JDK是否一致</title>
		<link>http://michael.nona.name/archives/91</link>
		<pubDate>Mon, 07 Mar 2005 13:56:16 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/91</guid>
		<description></description>
		<content:encoded><![CDATA[又是一个IBM JDK的问题：一段代码，其中包含了静态加载的部分代码：

    static {
        loadProperties("/Abc.txt");
    }

编译完成后部署在WebSphere 5.1上，结果发现这段代码出现NoClassDefError错误。仔细检查代码后，发现WSAD中，项目在Sun JDK1.4环境下编译，而运行在IBMJDK1.4环境下。将代码重新在Webspehre自带的JDK下编译并重新部署，问题解决。

看来各个厂商实现的不同的JDK二进制代码并不一致，IBM JDK就是一个例子。我记得JDOM0.9版本不支持websphere, 以前一位同事在将JBossCache引入项目的时候，都被这个问题折磨的死去活来。现在看来，问题解决的办法就比较简单了，找到代码重新编译打包就行了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date>2005-03-07 21:56:16</wp:post_date>
		<wp:post_date_gmt>2005-03-07 13:56:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>noclassdeferror-%e7%95%99%e6%84%8f%e7%bc%96%e8%af%91%e7%8e%af%e5%a2%83%e4%b8%8e%e8%bf%90%e8%a1%8c%e7%8e%af%e5%a2%83jdk%e6%98%af%e5%90%a6%e4%b8%80%e8%87%b4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>121</wp:comment_id>
			<wp:comment_author><![CDATA[Jack]]></wp:comment_author>
			<wp:comment_author_email>lichunjin@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.184.115.250</wp:comment_author_IP>
			<wp:comment_date>2005-08-01 00:05:16</wp:comment_date>
			<wp:comment_date_gmt>2005-07-31 16:05:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你好

  我想请教你同事关于在websphere 应用jbosscache的问题 
  能否把他的email发给我
  非常感谢]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>好的软件是磨练出来的</title>
		<link>http://michael.nona.name/archives/92</link>
		<pubDate>Thu, 10 Mar 2005 18:47:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/92</guid>
		<description></description>
		<content:encoded><![CDATA[Jol on software，前些年经常看到他的文章，他的经典之词《行进中开火》，被称为勤能补拙之软件开发实现。他自己的小公司FogCreek，自己的小软件FogBugz缺陷管理工具，自从前年获得Jolt奖之后，不断改进，现在到了4.0版本，软件界面更加合理，更加易用了。如果说有哪些软件能够这样的发展的话，除了FogBugz我看不到其他的软件。这个小小的缺陷管理工具处处用心，处处让你感受到“易用性”。当然，这些是不断的琢磨、不断的修正、不断的需求、不断的调整过来的。

中学语文课上有一篇课文《挑山工》，里面有一句话，不怕慢，只怕站。软件开发也是如此啊。相比我做过的大多数项目，都是一锤子买卖，做完后往往无法更新，没有回应；甚至也许没有人用。这也许是国内电子政务、MIS系统现状造成的。但是，作为一名程序员，我是何等的希望自己参与的软件能够不断的发展，不断的变得更加人性化、更易用啊。如同抚养一个孩子，能够在自己与客户的呵护下变得越来越好用，越来越成熟，那种成就感与荣誉感，岂非是每一个程序员梦寐以求？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>92</wp:post_id>
		<wp:post_date>2005-03-11 02:47:04</wp:post_date>
		<wp:post_date_gmt>2005-03-10 18:47:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a5%bd%e7%9a%84%e8%bd%af%e4%bb%b6%e6%98%af%e7%a3%a8%e7%bb%83%e5%87%ba%e6%9d%a5%e7%9a%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[kingfish]]></wp:comment_author>
			<wp:comment_author_email>niufish@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.niufish.com</wp:comment_author_url>
			<wp:comment_author_IP>61.240.26.4</wp:comment_author_IP>
			<wp:comment_date>2005-04-17 10:43:17</wp:comment_date>
			<wp:comment_date_gmt>2005-04-17 02:43:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[很同意，我做过的很多项目我都想从头再做一遍。所以才会有这么多的开源项目吧]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[yzinfo]]></wp:comment_author>
			<wp:comment_author_email>toweikexin@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>166.111.214.222</wp:comment_author_IP>
			<wp:comment_date>2005-05-11 10:21:48</wp:comment_date>
			<wp:comment_date_gmt>2005-05-11 02:21:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[很高兴看到国内有这么好的开源项目，感谢你的工作！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>516</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen&#8217;s Blog  &raquo; Blog Archive   &raquo; 为什么我不公布buffalo roadmap]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://michael.nona.name/archives/121</wp:comment_author_url>
			<wp:comment_author_IP>211.144.143.133</wp:comment_author_IP>
			<wp:comment_date>2005-11-18 11:07:16</wp:comment_date>
			<wp:comment_date_gmt>2005-11-18 03:07:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>637</wp:comment_id>
			<wp:comment_author><![CDATA[fsz]]></wp:comment_author>
			<wp:comment_author_email>fangsz@gzjp.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.137.239.122</wp:comment_author_IP>
			<wp:comment_date>2006-03-11 17:06:47</wp:comment_date>
			<wp:comment_date_gmt>2006-03-11 09:06:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[FogBugz软件能发一个给我试用一下吗，我的email：fangsz@gzjp.cn]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>让异常信息更容易理解</title>
		<link>http://michael.nona.name/archives/93</link>
		<pubDate>Sat, 12 Mar 2005 03:04:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/93</guid>
		<description></description>
		<content:encoded><![CDATA[花了15分钟的时间，给报表框架改善了异常信息的显示。当在xml定义文件中定义了某一位置的单元格，而在相应的Excel模板文件不存在该单元格时，以前的出错信息是：
<code>ReportException: 单元格(2,3)不存在，请检查模板文件</code>

这个2,3并不容易理解，很多报表的开发人员都无法一瞬间定位到这个单元格。我将Excel中的横向坐标(用A-Z表示)加入了其中，改善后的异常信息如下：
<code>ReportException: 单元格B3不存在，请检查模板文件中对应单元格</code>

这下清楚了，开发者一下就可以看到哪个单元格出了问题。

ps. 关于这个报表框架，还有一个有趣的事情。有一位同事拿代码去测试，后来问我：为什么你的代码没什么问题？我说，因为我自己的单元测试比你的测试更细致。他不信，于是我把满满的单元测试用例给他看，当他看到setUp中建立模拟数据，tearDown中删除数据，以及单元测试方法中大段大段覆盖率极大的assertXXX语句时，他不说话了。单元测试确实能够增强代码编写者的信心，我越来越坚信这一点。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date>2005-03-12 11:04:34</wp:post_date>
		<wp:post_date_gmt>2005-03-12 03:04:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%ae%a9%e5%bc%82%e5%b8%b8%e4%bf%a1%e6%81%af%e6%9b%b4%e5%ae%b9%e6%98%93%e7%90%86%e8%a7%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[kingfish]]></wp:comment_author>
			<wp:comment_author_email>niufish@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.niufish.com</wp:comment_author_url>
			<wp:comment_author_IP>61.240.26.4</wp:comment_author_IP>
			<wp:comment_date>2005-04-17 10:48:15</wp:comment_date>
			<wp:comment_date_gmt>2005-04-17 02:48:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我也做了一个Excel的辅助框架，非常简单。但我没有使用xml去定义准确的位置，因为我认为可能细节问题更复杂。
如果想对模板中的其他Sheet操作呢。Xml里面写明了模板的位置和实现Excel输出接口的类的位置。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>今天三月12日。</title>
		<link>http://michael.nona.name/archives/94</link>
		<pubDate>Sat, 12 Mar 2005 18:20:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/94</guid>
		<description></description>
		<content:encoded><![CDATA[这种写法是来自于很久以前，有个人写信问我，我该有1米八〇了吧，实际上我从来都没有过，虽然我很努力的想。我还记起上学的时候，一个三月12日的下午，组织全班同学去西安灞桥植树。灞桥垂柳曾经是长安八景之一，但是我们去的时候那里一片沙滩，根本看不到风景的样子。也不知道现在那些树活了没有，应该没有活吧，因为我们走的时候当地人在嘀咕：这么浅的坑，树怎么活的了？！

新年来了之后视力更差了，医生说对着电脑的时间太长，眼压太大，让我注意休息。天知道我是不能休息的。昨晚头痛得要命，翻来覆去醒来好几次，早晨起来的时候终于好了一些。吃完早餐，走在红螺湖的岸边，清冽的春风深吸了几口，感觉又年轻了不少，头也不那么疼了。

让我在这个麻木的春天感到感动的，是收到Sue的信。Sue虽然移居海外，但是中文功底却让我汗颜。比中文功底更深厚的是字里行间的情谊。想起两年多前在西工大教Java的日子，那时候自己很单纯，环境也不复杂。那样单纯的环境里产生的单纯的情绪，应该是弥足珍惜的。一个人的工作如果在若干时间后还为人称道，这难道不是一种成就？

Pagani同志问我，为什么有一群像我这样的朋友，家不在西安，现在外地工作，却非常想回西安？我没有机会回答他。其实这应该是一种情结。在一个人最需要朋友最希望承认的年纪里——我是指大学时光，这段时间在哪里过，往往对以后的生活产生很大的影响。西安慢悠悠的生活节奏，对于我这样的人，总有一种很放松的感觉。这种放松的感觉使得我即便白天上班晚上讲课半夜备课，都不觉得累。而在这里，却很难找到。每天晚上下班，都有一种精疲力尽的感觉。

然而即便是感触，也不应该有许多。一年之计在于春，我定下的计划，每天都要看一眼，一定也要完成。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date>2005-03-13 02:20:38</wp:post_date>
		<wp:post_date_gmt>2005-03-12 18:20:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bb%8a%e5%a4%a9%e4%b8%89%e6%9c%8812%e6%97%a5%e3%80%82</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[liujm]]></wp:comment_author>
			<wp:comment_author_email>junminliu@msn.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.136.27.246</wp:comment_author_IP>
			<wp:comment_date>2005-03-13 06:28:52</wp:comment_date>
			<wp:comment_date_gmt>2005-03-12 22:28:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我五一要回西安，同去否？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[liujm]]></wp:comment_author>
			<wp:comment_author_email>junminliu@msn.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.136.27.246</wp:comment_author_IP>
			<wp:comment_date>2005-03-13 06:33:36</wp:comment_date>
			<wp:comment_date_gmt>2005-03-12 22:33:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[也有西安情节
也许以后回西安定居]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[曹晓钢]]></wp:comment_author>
			<wp:comment_author_email>caoxg@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.redsaga.com</wp:comment_author_url>
			<wp:comment_author_IP>220.195.35.85</wp:comment_author_IP>
			<wp:comment_date>2005-03-17 07:46:34</wp:comment_date>
			<wp:comment_date_gmt>2005-03-16 23:46:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[眼压大，喝蜂蜜。
我的眼压也大，一直害怕以后会变成青光眼。跟我学习，每天两杯蜂蜜吧。
实在大得难受的时候，不加水直接喝两调羹，静卧即可。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[caocao]]></wp:comment_author>
			<wp:comment_author_email>caocao7291@yahoo.com.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.185.224.93</wp:comment_author_IP>
			<wp:comment_date>2005-04-08 16:43:35</wp:comment_date>
			<wp:comment_date_gmt>2005-04-08 08:43:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[没想到你还有西安情节，但我准备离开西安了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>58761</wp:comment_id>
			<wp:comment_author><![CDATA[晃倒乔丹]]></wp:comment_author>
			<wp:comment_author_email>martin_tree@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.133.80.152</wp:comment_author_IP>
			<wp:comment_date>2007-09-10 10:10:25</wp:comment_date>
			<wp:comment_date_gmt>2007-09-10 02:10:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我也在西安上过学，确实我也比较喜欢西安的生活，现在时常会回想起西安美好的时光。而且西安pl美眉也比这个破深圳多的多:-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Amowa Relaunched</title>
		<link>http://michael.nona.name/archives/95</link>
		<pubDate>Fri, 18 Mar 2005 17:56:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/95</guid>
		<description></description>
		<content:encoded><![CDATA[如果不是看到ajax概念的提出，也许我会一直将“面向异步消息的web应用”这个概念始终捏在手里。原因也很简单，自从我去年提出这个概念后，却一直观者寥寥。当然这跟我在这个领域的影响力有关。但是自从ajax概念提出之后，却又那么多的响应与支持者。这让我多少有些难受。实际上Amowa的概念无论从外延的开阔程度以及内涵的深入程度，都超过了ajax。作为一种统一概念的说法，Amowa更能够体现这种web开发新思路。

www.amowa.net去年开通之后，一直被杂事困扰。也没有多少人关注，自己也渐渐失去了热情。但是这个ajax的提出，已经刺激到了我，目前我已经完成了BuffaloWebRemoting，一个更加健壮、更加完美的传输方案，加上以前完成的JSValidation, 现在只需要一部份binding的工作，那么我的Amowa无论从概念还是实际的技术，在这方面都已经跨出了大大的一步。

如同大多数程序员，我也不怎么宣传。没有raimundo和gigix的提醒，也许我会一直这样沉闷下去，一任西方舶来概念的侵蚀. 现在我应该多做一些工作了，向国内的开发者展示Amowa的概念和action. 作了一个TODO List, 用来监督自己工作：
 
整理文档工作：<br />
* 面向异步消息的Web框架-AMOWA：重写。上一篇写得有些随意，这次整理一下，使其具备理论高度(想到什么ajax就郁闷)。<br />
* Buffalo WebRemoting。这个已经做完，可以作为Amowa传输的基础。xiaogang和raimundo同志已经看过演示了，不知还有什么需求。<br />
* jsvalidation. 这是早就完成的模块，作为一个新的web框架，校验必不可少。jsvalidation从目前的使用和反映看来，还是不错的。

新的开发工作： <br />
* amowa.net站点更新 <br />
* Buffalo中各种bind方法的编写。现在的Remoting调用还是有些raw, 用bind直接将返回值与Html界面控件进行绑定，使用起来更方便。

需求征集：<br />
* 原来打算按照Amowa的思路来实现一个新的论坛，后来发现这个案例不好，又大又没意思。征集能够体现AMOWA的典型用例(showcase)，最好功能点突出并且规模不大。

任务没有完成最好的托词就是工作太忙。上帝保佑，我能够永远不用这个借口来原谅自己。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>95</wp:post_id>
		<wp:post_date>2005-03-19 01:56:59</wp:post_date>
		<wp:post_date_gmt>2005-03-18 17:56:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amowa-relaunched</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[liujm]]></wp:comment_author>
			<wp:comment_author_email>junminliu@msn.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.136.92.243</wp:comment_author_IP>
			<wp:comment_date>2005-03-20 10:04:43</wp:comment_date>
			<wp:comment_date_gmt>2005-03-20 02:04:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[webim]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>61.50.230.141</wp:comment_author_IP>
			<wp:comment_date>2005-03-21 12:16:05</wp:comment_date>
			<wp:comment_date_gmt>2005-03-21 04:16:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵，是个不错的主意]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[Drunk Dream]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://woooh.com/post/100.html</wp:comment_author_url>
			<wp:comment_author_IP>61.152.90.16</wp:comment_author_IP>
			<wp:comment_date>2005-03-30 16:04:59</wp:comment_date>
			<wp:comment_date_gmt>2005-03-30 08:04:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Ajax：让我们重返静态页面。</strong>

　　这个标题是一个小小的玩笑，但是确实道出了Ajax的含义；
　　Ajax不是一种新的技术，而是传统技术加以组合后的技术应用，它带给访问者完全不同的浏览感受：我们再也不需要一次又]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>97</wp:comment_id>
			<wp:comment_author><![CDATA[twer]]></wp:comment_author>
			<wp:comment_author_email>twer</wp:comment_author_email>
			<wp:comment_author_url>http://twer</wp:comment_author_url>
			<wp:comment_author_IP>218.1.182.41</wp:comment_author_IP>
			<wp:comment_date>2005-06-23 11:43:40</wp:comment_date>
			<wp:comment_date_gmt>2005-06-23 03:43:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[twtwrtr]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>105</wp:comment_id>
			<wp:comment_author><![CDATA[javamfc]]></wp:comment_author>
			<wp:comment_author_email>javamfc@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.171.19.15</wp:comment_author_IP>
			<wp:comment_date>2005-07-05 10:05:16</wp:comment_date>
			<wp:comment_date_gmt>2005-07-05 02:05:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不错不错，顶一下！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>109</wp:comment_id>
			<wp:comment_author><![CDATA[libol]]></wp:comment_author>
			<wp:comment_author_email>libol007@yahoo.com.cn</wp:comment_author_email>
			<wp:comment_author_url>http://blog.csdn.net/libol</wp:comment_author_url>
			<wp:comment_author_IP>218.201.253.88</wp:comment_author_IP>
			<wp:comment_date>2005-07-06 12:29:43</wp:comment_date>
			<wp:comment_date_gmt>2005-07-06 04:29:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[一起努力]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>118</wp:comment_id>
			<wp:comment_author><![CDATA[df]]></wp:comment_author>
			<wp:comment_author_email>df</wp:comment_author_email>
			<wp:comment_author_url>http://df</wp:comment_author_url>
			<wp:comment_author_IP>221.216.19.68</wp:comment_author_IP>
			<wp:comment_date>2005-07-26 16:54:03</wp:comment_date>
			<wp:comment_date_gmt>2005-07-26 08:54:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[dfdf]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>123</wp:comment_id>
			<wp:comment_author><![CDATA[asdfasdf]]></wp:comment_author>
			<wp:comment_author_email>sdf@1dsf.com</wp:comment_author_email>
			<wp:comment_author_url>http://wer.dsfodsmf.hdfg</wp:comment_author_url>
			<wp:comment_author_IP>221.221.10.83</wp:comment_author_IP>
			<wp:comment_date>2005-08-03 10:32:12</wp:comment_date>
			<wp:comment_date_gmt>2005-08-03 02:32:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[dsfasdfasdfasdf]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>124</wp:comment_id>
			<wp:comment_author><![CDATA[asdfasdf]]></wp:comment_author>
			<wp:comment_author_email>sdf@1dsf.com</wp:comment_author_email>
			<wp:comment_author_url>http://wer.dsfodsmf.hdfg</wp:comment_author_url>
			<wp:comment_author_IP>221.221.10.83</wp:comment_author_IP>
			<wp:comment_date>2005-08-03 10:32:33</wp:comment_date>
			<wp:comment_date_gmt>2005-08-03 02:32:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[k,jjjjjjjjjjjjjjjjjjjj]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>159</wp:comment_id>
			<wp:comment_author><![CDATA[as]]></wp:comment_author>
			<wp:comment_author_email>as</wp:comment_author_email>
			<wp:comment_author_url>http://as</wp:comment_author_url>
			<wp:comment_author_IP>218.56.50.166</wp:comment_author_IP>
			<wp:comment_date>2005-09-02 12:40:46</wp:comment_date>
			<wp:comment_date_gmt>2005-09-02 04:40:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[sa]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>155</wp:comment_id>
			<wp:comment_author><![CDATA[ice]]></wp:comment_author>
			<wp:comment_author_email>flowsnow13@163.COM</wp:comment_author_email>
			<wp:comment_author_url>http://NOTHING</wp:comment_author_url>
			<wp:comment_author_IP>218.4.73.214</wp:comment_author_IP>
			<wp:comment_date>2005-08-29 14:36:14</wp:comment_date>
			<wp:comment_date_gmt>2005-08-29 06:36:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[NOTHING]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>141</wp:comment_id>
			<wp:comment_author><![CDATA[111]]></wp:comment_author>
			<wp:comment_author_email>11@163.COM</wp:comment_author_email>
			<wp:comment_author_url>http://ADS.COM</wp:comment_author_url>
			<wp:comment_author_IP>222.18.174.84</wp:comment_author_IP>
			<wp:comment_date>2005-08-23 10:36:16</wp:comment_date>
			<wp:comment_date_gmt>2005-08-23 02:36:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ASD]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>202</wp:comment_id>
			<wp:comment_author><![CDATA[aaaaaaassffa]]></wp:comment_author>
			<wp:comment_author_email>afasf@asdfsadf.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.47.179.7</wp:comment_author_IP>
			<wp:comment_date>2005-10-02 14:27:36</wp:comment_date>
			<wp:comment_date_gmt>2005-10-02 06:27:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[aaaaaaaaaaaaaaaaa]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>308</wp:comment_id>
			<wp:comment_author><![CDATA[fffffffff]]></wp:comment_author>
			<wp:comment_author_email>gggggggggg</wp:comment_author_email>
			<wp:comment_author_url>http://gggggggggggggg</wp:comment_author_url>
			<wp:comment_author_IP>221.232.3.17</wp:comment_author_IP>
			<wp:comment_date>2005-10-09 13:54:13</wp:comment_date>
			<wp:comment_date_gmt>2005-10-09 05:54:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ggggggggggggggg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>445</wp:comment_id>
			<wp:comment_author><![CDATA[ffyy]]></wp:comment_author>
			<wp:comment_author_email>sfsfsfdfsd</wp:comment_author_email>
			<wp:comment_author_url>http://sdsasdfsdfd</wp:comment_author_url>
			<wp:comment_author_IP>221.122.44.162</wp:comment_author_IP>
			<wp:comment_date>2005-10-17 10:51:50</wp:comment_date>
			<wp:comment_date_gmt>2005-10-17 02:51:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[aaaaaaaaaaaaaaaaaaaafd]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>541</wp:comment_id>
			<wp:comment_author><![CDATA[keke]]></wp:comment_author>
			<wp:comment_author_email>wangchbs0305@yahoo.com.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.234.247.96</wp:comment_author_IP>
			<wp:comment_date>2005-12-04 08:55:38</wp:comment_date>
			<wp:comment_date_gmt>2005-12-04 00:55:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[共同前进!!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>463</wp:comment_id>
			<wp:comment_author><![CDATA[sadf]]></wp:comment_author>
			<wp:comment_author_email>sadf</wp:comment_author_email>
			<wp:comment_author_url>http://wqew</wp:comment_author_url>
			<wp:comment_author_IP>221.224.38.244</wp:comment_author_IP>
			<wp:comment_date>2005-10-24 17:26:10</wp:comment_date>
			<wp:comment_date_gmt>2005-10-24 09:26:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[q rsdf sad fdf ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Buffalo - 一个amowa的基础设施</title>
		<link>http://michael.nona.name/archives/97</link>
		<pubDate>Mon, 21 Mar 2005 05:28:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/97</guid>
		<description></description>
		<content:encoded><![CDATA[早上的时候，新添了一些代码，使Buffalo看起来稍微完整了一些。关于面向异步消息的web应用，我终于做出了一些实用性的东西——实际上，从去年2月开始，当我编写livechat版本1, 哦，确切的说是在03年底编写数据分析软件web客户端的时候，我就开始做这方面的思考与探索。livechat2.0的完成，使我在面向消息方面的应用方面大跨了一步；然而面向消息并不完整，当我试图完成buffalo原始版本，打算封装消息类型，并按照消息类型服务器端调用相应命令的时候，在数据序列化/反序列化上变得无趣。我坚信一定有更好的实现的——尽管我在Amowa的定义文档中指出xmlrpc可能是消息封装的一种方式，但是xmlrpc本身太琐碎了，而且java实现对数据类型的支持太有限。直到我春节期间发现Burlap, 这个优雅而轻量级的传输协议。

Bufffalo现在的版本包括两部分：面向服务器端的BuffaloService和面向客户端的buffalo.js,  服务器端现在能够跟Spring进行集成，使得任意的service暴露为Buffalo服务成为可能；客户端实现了Burlap协议，并能够调用任意服务器端的Buffalo服务，并将返回值包装为JS对象。Buffalo与其它WebRemoting方案的最大不同在于，它能够将服务器端的返回值——任意类型，没错，任意类型，包装为JavaScript对象。不仅仅是对象，对于返回值中存在对象引用关系，Buffalo也能够很好的处理，决不会造成内存泄露。例如，一个包含3个元素的循环链表，Buffalo能够很好的处理这种关系。

一个典型的调用方式如下：<br />
Buffalo.remoteCall2("commonService", ["sum", 1,1], callback);<br />

这中调用方式还是有些粗糙。Buffalo Binding组件将amowa的概念实现的更远。它允许直接将远程调用的结果绑定到HTML元素上，这一过程将是透明的，开发者无需关心内部实现。目前已经实现将结果绑定到input text,password, checkbox, radiobutton, 下拉列表，表格。这一切的绑定调用，甚至只需要一句话：

Buffalo.bindReply("commonService", ["now"], "timeInput");

上面这句话将会调用远程的now方法，并将结果绑定到id为timeInput的控件上。

Buffalo将会走得更远，为Amowa做更多的工作。我期待的是有一天，这头大水牛能够自动辨认HTML元素中的bid属性，并自动将远程服务的操作结果绑定到html控件上，成为一个不需要java端编程的新型web框架。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>97</wp:post_id>
		<wp:post_date>2005-03-21 13:28:40</wp:post_date>
		<wp:post_date_gmt>2005-03-21 05:28:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>buffalo-01</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[Good]]></wp:comment_author>
			<wp:comment_author_email>good@nona.name</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.14.182.136</wp:comment_author_IP>
			<wp:comment_date>2005-04-01 03:15:26</wp:comment_date>
			<wp:comment_date_gmt>2005-03-31 19:15:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[加油,什么时候能出成果啊.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>62</wp:comment_id>
			<wp:comment_author><![CDATA[liigo]]></wp:comment_author>
			<wp:comment_author_email>liigo@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.201.196.225</wp:comment_author_IP>
			<wp:comment_date>2005-05-23 21:24:05</wp:comment_date>
			<wp:comment_date_gmt>2005-05-23 13:24:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这个BLOG没有RSS吗? 找不到!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>66</wp:comment_id>
			<wp:comment_author><![CDATA[canonical]]></wp:comment_author>
			<wp:comment_author_email>zhj_gw@sina.com</wp:comment_author_email>
			<wp:comment_author_url>http://canonical.blogdriver.com</wp:comment_author_url>
			<wp:comment_author_IP>221.221.17.170</wp:comment_author_IP>
			<wp:comment_date>2005-05-25 00:47:30</wp:comment_date>
			<wp:comment_date_gmt>2005-05-24 16:47:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[buffalo是什么授权协议的？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Echo2，该来的还是来了</title>
		<link>http://michael.nona.name/archives/98</link>
		<pubDate>Wed, 23 Mar 2005 22:29:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/98</guid>
		<description></description>
		<content:encoded><![CDATA[我预计的不错，一个采用ajax思想实现的web框架，Echo2(http://www.nextapp.com/products/echo2)，果然出来了。只是这未免太快了。

Echo2采用了跟Echo同样的渲染模型和事件模型（跟ASP.NET很像，组件机制跟Tapestry很像），不同的是事件的传递/调用/结果返回都是采用xml消息实现。因此，我宁愿称这个框架为Amowa的一个典型实现。

一些美中不足的是，消息发送之后，服务端还是返回整个界面描述；而不是仅仅发生变化的控件。这里面应该还有优化的余地。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>98</wp:post_id>
		<wp:post_date>2005-03-24 06:29:40</wp:post_date>
		<wp:post_date_gmt>2005-03-23 22:29:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>echo2%ef%bc%8c%e8%af%a5%e6%9d%a5%e7%9a%84%e8%bf%98%e6%98%af%e6%9d%a5%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>536</wp:comment_id>
			<wp:comment_author><![CDATA[Tom Yeh]]></wp:comment_author>
			<wp:comment_author_email>tom_m_yeh@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://zk1.sourceforge.net</wp:comment_author_url>
			<wp:comment_author_IP>61.56.130.77</wp:comment_author_IP>
			<wp:comment_date>2005-11-29 12:45:59</wp:comment_date>
			<wp:comment_date_gmt>2005-11-29 04:45:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You might also take a look at the ZK project. Its programming model is much simpler.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>不写在愚人节</title>
		<link>http://michael.nona.name/archives/99</link>
		<pubDate>Sat, 02 Apr 2005 22:29:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/99</guid>
		<description></description>
		<content:encoded><![CDATA[本以为是个笑话，在31号看到Matt Raible发表的对工作的一番感叹后，1号便看到他已经接受Microsoft的Offer, 前往VS.NET开发组开发Ajax组件。微软显然对此事相当重视，"Thanks Matt, and now we can compete!" .

作为技术人员，我相信这应该是一种被承认最好的结果。直到现在，一些朋友劝我转行的时候，我都始终坚定不移的认为，我能够在这个行业内做出一些贡献，无论作为传道者还是创造者。许多同样的热心者，如raimundo, gigix早已确定了自己的贡献方向，然而我在拥有一个贡献方向的时候却让他悄悄溜过，原因却是该死的没有时间！

Matt在对工作期待的时候，希望能够有一份每年有2-3个月休息的日子。我的期待比这个更少，我只希望能够让我拥有正常的节假日，能够在这些时间里静静的对技术进行思考。现在的项目我每天都要花大部分时间来处理琐碎的事情，而且这些事情居然消耗了我大部分的精力。

对于这一系列接踵而来的事情，我感到一种对自己深深的悲哀。Ajax概念提出来了，Echo2出来了，而我自己对Amowa的探索停滞不前。并非我不能够去研究，而是在同一间大的办公室里面, 我不能安心看着大家在编码，而我在进行着跟项目无关的东西，而且项目上线的日子愈来愈近。

这个项目完成之后，我真该为自己的将来技术之路考虑考虑了。在应用开发中，我都感到自己在一步步往木然，颓废中迈步；对于我而言，这不可容忍，不可接受。

(ps. 即便是我在写这篇短短的blog不到20分钟的时间里，我接了一个电话，修正了两个数据库表，解答了一个开发人员的问题...)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>99</wp:post_id>
		<wp:post_date>2005-04-03 06:29:08</wp:post_date>
		<wp:post_date_gmt>2005-04-02 22:29:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%8d%e5%86%99%e5%9c%a8%e6%84%9a%e4%ba%ba%e8%8a%82</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[corlin]]></wp:comment_author>
			<wp:comment_author_email>corlin@cybercorlin.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.cybercorlin.net</wp:comment_author_url>
			<wp:comment_author_IP>211.150.245.3</wp:comment_author_IP>
			<wp:comment_date>2005-04-03 10:15:58</wp:comment_date>
			<wp:comment_date_gmt>2005-04-03 02:15:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[最近在看一本80/20策略的书(.Living.the.80.20.Way)，其实重要的事情只占全天工作的20%。
只要把这20%的事情做好，其他80%其实都不重要或没必要太过关注了。

别为每天的事烦恼，做该做的事，把主要精力投在该投的地方。(需要有个mind mapping  :) )

这样慢慢养成习惯，该做的事会越来越规整，时间也越来越规律，你的空余时间就会更多。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[jeson]]></wp:comment_author>
			<wp:comment_author_email>jinlc@deepsoft.com.cn</wp:comment_author_email>
			<wp:comment_author_url>http://blog.csdn.com/jeson</wp:comment_author_url>
			<wp:comment_author_IP>219.239.240.162</wp:comment_author_IP>
			<wp:comment_date>2005-04-05 01:23:22</wp:comment_date>
			<wp:comment_date_gmt>2005-04-04 17:23:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[感觉到一点点失落，其实对每个人都差不多，走过一段总要徘徊一下，审视一下。感觉你现在的处境，有点身在曹营心在汉的感觉，我也有类似的经历，的确比较累。对于你的Amowa思想一直比较关注，期望早日见到他的风采：）我做了一个东西，快做完了，过几天放在我的blog上，有兴趣探讨一下。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[liujm]]></wp:comment_author>
			<wp:comment_author_email>junminliu@msn.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.136.92.248</wp:comment_author_IP>
			<wp:comment_date>2005-04-05 02:13:55</wp:comment_date>
			<wp:comment_date_gmt>2005-04-04 18:13:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[打算年底或者年初辞职，好好静下心做点自己想做的事情，不想为工作所累！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[sa]]></wp:comment_author>
			<wp:comment_author_email>chxmail@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.83.159.65</wp:comment_author_IP>
			<wp:comment_date>2005-04-06 06:39:18</wp:comment_date>
			<wp:comment_date_gmt>2005-04-05 22:39:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[假如你没时间，更应该要借用别人的力量，听到你说Buffalo，livechat好多编了，但只限于听说而已，
Hessian 的PHP, Python, C++, and C# implementations都open了，你的js implementation还紧紧
地握在你的手里，也许你应该open，只有open你才能让更多人知道你的想法，和你一起去实现你的想法，
贡献不仅仅是身体力行。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[S.L.]]></wp:comment_author>
			<wp:comment_author_email>xuli03ca@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.230.133.196</wp:comment_author_IP>
			<wp:comment_date>2005-04-07 16:02:19</wp:comment_date>
			<wp:comment_date_gmt>2005-04-07 08:02:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You're eternally preeminent for doing this job. Pave your own path, you'll benefit more in the end.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>119</wp:comment_id>
			<wp:comment_author><![CDATA[Colby Bauer]]></wp:comment_author>
			<wp:comment_author_email>colbau391@kosleep.tk</wp:comment_author_email>
			<wp:comment_author_url>http://www.gamblingxp.com</wp:comment_author_url>
			<wp:comment_author_IP>62.73.1.171</wp:comment_author_IP>
			<wp:comment_date>2005-07-27 00:27:20</wp:comment_date>
			<wp:comment_date_gmt>2005-07-26 16:27:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href='http://www.gamblingxp.com' rel="nofollow">gambling features</a> - Gambling on microsoft's new xp patch sarasota herald-tribune - sarasota,fl,usa the service pack, which will upgrade security features in the operating system, the internet explorer browser and outlook express e-mail client for xp computers]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>应用Ant生成Web站点</title>
		<link>http://michael.nona.name/archives/100</link>
		<pubDate>Thu, 07 Apr 2005 08:23:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/100</guid>
		<description></description>
		<content:encoded><![CDATA[我终于开始编写buffalo的站点了。很早以前我就尝试过<a href="http://forrest.apache.org/">Apache Forrest</a>，但是它千篇一律的界面让我烦透了，看看他的templates, 想要自定义也估计够麻烦。于是就开始想直接手写页面。手写页面本来也没有什么问题，主要是页面头、菜单、脚标等重复部分，比较难以同步；如果采用javascript document.write来写，页面又不利于保存。想来想去，于是想起了Ant里面有一个Replace 的任务。看了看，完成简单的站点更新看来是没有什么问题了。

    <target name="site" depends="init">
		<loadfile property="header" srcFile="slice/header.html" />
		<loadfile property="footer" srcFile="slice/footer.html" />
		<loadfile property="menu" srcFile="slice/menu.html" />
		<loadfile property="meta" srcFile="slice/meta.html" />
		
		<copy todir="${site.dir}" overwrite="true">
			<fileset dir="${pages.dir}">
				<include name="*.*" />
			</fileset>
		</copy>

		<replace dir="${site.dir}" token="@HEADER@" value="${header}"/>
		<replace dir="${site.dir}" token="@MENU@" value="${menu}"/>
		<replace dir="${site.dir}" token="@FOOTER@" value="${footer}"/>
		<replace dir="${site.dir}" token="@META@" value="${meta}"/>
	</target>

上面的ant 脚本能够从4个文件中读取头，菜单，脚标以及原数据信息，将这些替换到相应的页面中，真正包含数据的页面可以非常简单：

	<html>
	<head>
	<title>Buffalo</title>
	@META@
	</head>

	<body>
	@HEADER@
	<div id="contentBody">
		<table width="100%" border="0" cellpadding="0" cellspaceing="0">
	  <tr>
		<td valign="top" id="menu">
		@MENU@
		</td>
		<td valign="top" id="content">
		演示, 正在编写呢.
		</td>
	  </tr>
	</table>
	</div>
	@FOOTER@
	</body>
	</html>

呶，我打算这样来构建BuffaloWebRemoting的介绍站点。

Btw，在如何对buffalo客户端javascript api进行文档编写，我也头痛了一段时间，无意中想起了<a href="http://jsdoc.sourceforge.net">jsdoc</a>这个东西，它采用跟javadoc同样的注释标记，对源代码中的注释进行文档生成。下载下来对buffalo.js和buffalo-bind.js进行了生成文档，生成的文档质量很不错，看起来跟javadoc很像。

Buffalo的logo大概出来了：<img src='/wp-content/buffalogif.gif' alt='buffalo logo' />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date>2005-04-07 16:23:24</wp:post_date>
		<wp:post_date_gmt>2005-04-07 08:23:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ba%94%e7%94%a8ant%e7%94%9f%e6%88%90web%e7%ab%99%e7%82%b9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>166</wp:comment_id>
			<wp:comment_author><![CDATA[dwad]]></wp:comment_author>
			<wp:comment_author_email>dwaaaaaa</wp:comment_author_email>
			<wp:comment_author_url>http://dwaaaaaa</wp:comment_author_url>
			<wp:comment_author_IP>222.36.115.218</wp:comment_author_IP>
			<wp:comment_date>2005-09-07 21:53:22</wp:comment_date>
			<wp:comment_date_gmt>2005-09-07 13:53:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[dwadwad]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Buffalo 1.0alpha发布</title>
		<link>http://michael.nona.name/archives/101</link>
		<pubDate>Sat, 16 Apr 2005 08:15:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/101</guid>
		<description></description>
		<content:encoded><![CDATA[花了一个下午的时间，完成了buffalo站点所需的文档。现在我很高兴的宣布：buffalo 1.0alpha发布，buffalo站点开放了！

地址：<a href="http://www.amowa.net/buffalo">http://www.amowa.net/buffalo</a>

同时，<a href="http://www.amowa.net">Amowa站点</a>也进行了小小的更新。

有任何回馈请联系我mechiland AT gmail dot com，或者留言。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>101</wp:post_id>
		<wp:post_date>2005-04-16 16:15:52</wp:post_date>
		<wp:post_date_gmt>2005-04-16 08:15:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>buffalo-10alpha%e5%8f%91%e5%b8%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[wearebug]]></wp:comment_author>
			<wp:comment_author_email>wearebug@etang.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.107.133.75</wp:comment_author_IP>
			<wp:comment_date>2005-04-18 08:06:21</wp:comment_date>
			<wp:comment_date_gmt>2005-04-18 00:06:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[haha,Congratulation !!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[zhyang]]></wp:comment_author>
			<wp:comment_author_email>daniel.zhy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.95.122.36</wp:comment_author_IP>
			<wp:comment_date>2005-04-20 18:07:29</wp:comment_date>
			<wp:comment_date_gmt>2005-04-20 10:07:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这个功能很棒。今天在自己的项目中用你的方法替换了我自己的applet方法，已经有小成。但从实践上来看， 可能你的buffalo有一些地方需要改进:
1）在js encoding的时候，可能需要对一些特殊字符进行xml escape.
2）尽管你很喜欢异步方式， 但也可能有使用同步方式的时候， 所以最好两者都支持。
3）在BuffaloServiceServlet.java中, 没有对response设置encoding.有必要加入:
response.setContentType("text/xml;charset=utf-8");

以上如果有说错的地方,还请见谅.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[S.L]]></wp:comment_author>
			<wp:comment_author_email>xuli03ca@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.48.71.233</wp:comment_author_IP>
			<wp:comment_date>2005-04-21 01:53:40</wp:comment_date>
			<wp:comment_date_gmt>2005-04-20 17:53:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's wondwerful to know that you have achieved the goal you set for yourself. Congratulations on your success and best wishes always.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>211.94.135.4</wp:comment_author_IP>
			<wp:comment_date>2005-04-21 09:17:17</wp:comment_date>
			<wp:comment_date_gmt>2005-04-21 01:17:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[多谢支持！

1 js encoding会加入的，这个问题我已经考虑到了，新版本中会修正的

2 同步方式完全不可接受，是因为同步调用的时候浏览器如同死掉一样，在网络不好的时更明显

3 contentType在burlap中已经设置完成了，BuffaloServiceServlet中再加入也没什么用;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[zhyang]]></wp:comment_author>
			<wp:comment_author_email>daniel.zhy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.95.122.36</wp:comment_author_IP>
			<wp:comment_date>2005-04-21 10:51:28</wp:comment_date>
			<wp:comment_date_gmt>2005-04-21 02:51:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[2)我的看法正好相反, 我只接受同步方式.
a)由于每次不可能对发送的请求进行验证是否来自于一个可信赖的连接, 所以这个功能当前最好用于Internat应用, 而不是Internet应用. 在internat上谁还担心速度呀!
b)服务器端可以使用cache, 来提高服务端的反应速度, 速度不是问题的关键.
c) 我觉得异步方式容易使用户误操作. 一个简单的例子:
画面上有两个ListBox, list1和list2, 其中list1放交通工具种类, list2放班次. 用户只有在选择list1后, list2才从服务器端获取数据并填充. 然后用户选择list2, 如果是同步的话, list2和list1就总是匹配的, 如果异步的话, 问题就复杂多了.

3)对utf-8的问题,可能与我的Appserver的有关. 我的AppServer是Websphere 5.1,这一点我还需要确认.
PS: 你说的"contentType在burlap中已经设置完成了"指的是哪里呀? 是Xml么?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>211.94.135.4</wp:comment_author_IP>
			<wp:comment_date>2005-04-21 11:16:29</wp:comment_date>
			<wp:comment_date_gmt>2005-04-21 03:16:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵, 此同步非彼同步. 这个问题一言两语说不清楚，有机会我会撰文阐明。 

验证等跟普通的方式一样。BuffaloService支持使用当前HTTPSession, 也就是说，前后两个连续的异步连接共享一个session, number guess例子可以展示了这个功能。

utf-8在burlap包中已经得到处理了，不仅仅是xml, 还包括response contentType]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[jeson]]></wp:comment_author>
			<wp:comment_author_email>jinlc@deepsoft.com.cn</wp:comment_author_email>
			<wp:comment_author_url>http://blog.csdn.com/jeson</wp:comment_author_url>
			<wp:comment_author_IP>219.239.240.162</wp:comment_author_IP>
			<wp:comment_date>2005-04-21 15:05:59</wp:comment_date>
			<wp:comment_date_gmt>2005-04-21 07:05:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[test]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[jeson]]></wp:comment_author>
			<wp:comment_author_email>jinlc@deepsoft.com.cn</wp:comment_author_email>
			<wp:comment_author_url>http://blog.csdn.com/jeson</wp:comment_author_url>
			<wp:comment_author_IP>219.239.240.162</wp:comment_author_IP>
			<wp:comment_date>2005-04-21 15:22:09</wp:comment_date>
			<wp:comment_date_gmt>2005-04-21 07:22:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[一个很不错的开始，祝贺你！
一些小问题，瑕不掩瑜：）
(1)、关于ContentType问题，在wsad5.1.2测试环境中确实需要response.setContentType("text/xml; charset=UTF-8");解决中文问题。
(2)、关于xmlDocuemnt的支持，我在buffalo.js中加了
BuffaloCall.doxmltoXML = function(data){
  var xml = "" + data.xml.replace(/";
  return xml;
}
以及
BuffaloCall.getParamXML = function(type,data){
  var xml;
  switch (type){
    case "date":
      xml = BuffaloCall.doDateXML(data);
      break;
    case "list":
      xml = BuffaloCall.doArrayXML(data);
      break;
    case "map":
      xml = BuffaloCall.doStructXML(data);
      break;
	  case "boolean":
      xml = BuffaloCall.doBooleanXML(data);
      break;
	  case "xml":
      xml = BuffaloCall.doxmltoXML(data);
      break;
    default:
      xml = BuffaloCall.doValueXML(type,data);
      break;
  }
  return xml;
}
可以传xmlDocument回server side，custom_class可以得到xmlStr，将就着可以用了。但是要replace，不是很理想。
(3)关于数据与页面对象的绑定，简单类型还好，自定义的组件如grid只能自己去绑定了，只要拿到xml。
(4)对于同步/异步，自认为异步的好处很多，但不是绝对的，在我写的datasource中保留了设置方法，推荐用异步方式，但不限于此。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[jeson]]></wp:comment_author>
			<wp:comment_author_email>jinlc@deepsoft.com.cn</wp:comment_author_email>
			<wp:comment_author_url>http://blog.csdn.com/jeson</wp:comment_author_url>
			<wp:comment_author_IP>219.239.240.162</wp:comment_author_IP>
			<wp:comment_date>2005-04-21 15:25:50</wp:comment_date>
			<wp:comment_date_gmt>2005-04-21 07:25:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[(5)但burlap对tag的定义，xml中不能有属性，用起来就大打折扣了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[sjava]]></wp:comment_author>
			<wp:comment_author_email>sjava@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.92.201.198</wp:comment_author_IP>
			<wp:comment_date>2005-04-23 17:28:20</wp:comment_date>
			<wp:comment_date_gmt>2005-04-23 09:28:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[请问如何与spring集成，能给个例子吗？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[rainsoft]]></wp:comment_author>
			<wp:comment_author_email>rainsoft@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.try2it.com</wp:comment_author_url>
			<wp:comment_author_IP>202.104.49.237</wp:comment_author_IP>
			<wp:comment_date>2005-04-27 10:37:01</wp:comment_date>
			<wp:comment_date_gmt>2005-04-27 02:37:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不知道您的这个实现与DWR(http://eireneh.thorubio.org/dwr/index.html)实现比较起来有什么优点，我觉得DWR这个方案使用更加方便，服务端的程序完全不需要做什么特殊处理，当然，您的工作还是很了不起的，不知道如果我在delphi中实现可不可以？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>211.94.135.4</wp:comment_author_IP>
			<wp:comment_date>2005-04-28 09:15:38</wp:comment_date>
			<wp:comment_date_gmt>2005-04-28 01:15:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[dwr只能调用远程方法（当然，在许多情况下这就够了，例如tomcat中应用的启动/暂停），对返回结果进行处理的能力有限；

buffalo能够将远程调用的结果，任意对象继承到本地，成为JavaScript可以触及的对象，这样你就可以自由操控这些对象了。

burlap是一个开放的协议，可以用任何语言实现，清风已经用python实现了，delphi也可以。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[shinwell]]></wp:comment_author>
			<wp:comment_author_email>liuxh@wisenter.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.69.254.135</wp:comment_author_IP>
			<wp:comment_date>2005-05-01 14:01:04</wp:comment_date>
			<wp:comment_date_gmt>2005-05-01 06:01:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[BuffaloServiceServlet 中用的是Java反射来生成类, 性能是不是要受点影响呢?
既然用了Spring, 为什么不用CGLIB呢?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[gonius]]></wp:comment_author>
			<wp:comment_author_email>goniusxp@yahoo.com.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.51.210.38</wp:comment_author_IP>
			<wp:comment_date>2005-05-09 14:23:25</wp:comment_date>
			<wp:comment_date_gmt>2005-05-09 06:23:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[很不错，如果有帮助文档就更好了.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[guyunbing]]></wp:comment_author>
			<wp:comment_author_email>guyun4@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.170.135.4</wp:comment_author_IP>
			<wp:comment_date>2005-05-11 23:39:24</wp:comment_date>
			<wp:comment_date_gmt>2005-05-11 15:39:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[amowa-ppt.pdf下载后打不开。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>61</wp:comment_id>
			<wp:comment_author><![CDATA[Zer0_x]]></wp:comment_author>
			<wp:comment_author_email>orange200310@yahoo.com.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.191.11.242</wp:comment_author_IP>
			<wp:comment_date>2005-05-23 20:07:45</wp:comment_date>
			<wp:comment_date_gmt>2005-05-23 12:07:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[对我很有帮助打算用来做一个树型菜单 ^_^希望尽快推出新版本 加油 ！！！！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>93</wp:comment_id>
			<wp:comment_author><![CDATA[Ari Hunter]]></wp:comment_author>
			<wp:comment_author_email>arihun31@sipav.tk</wp:comment_author_email>
			<wp:comment_author_url>http://www.bestpokerholdem.com</wp:comment_author_url>
			<wp:comment_author_IP>82.194.62.22</wp:comment_author_IP>
			<wp:comment_date>2005-06-17 04:31:47</wp:comment_date>
			<wp:comment_date_gmt>2005-06-16 20:31:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href='http://www.bestpokerholdem.com' rel="nofollow">gambling</a> - And the state's reliance on it to persuade voters to let them build a casino. rhode island leads the nation in per-capita spending on lottery-sponsored gambling]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Web地图的例子一定要是Google Maps么？</title>
		<link>http://michael.nona.name/archives/103</link>
		<pubDate>Sun, 17 Apr 2005 03:52:32 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/103</guid>
		<description></description>
		<content:encoded><![CDATA[实际上国内早已有了全面的实现：

<a href="http://www.go2map.com/vip">http://www.go2map.com/vip</a>

从某种意义上说，这又是一个Amowa/Ajax实际应用的例子。记得很早的时候(2000年或者更早?)，ICQ有个地图服务，每次操作整个页面完全刷新一次。我用了一次后再也不想用了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>103</wp:post_id>
		<wp:post_date>2005-04-17 11:52:32</wp:post_date>
		<wp:post_date_gmt>2005-04-17 03:52:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web%e5%9c%b0%e5%9b%be%e7%9a%84%e4%be%8b%e5%ad%90%e4%b8%80%e5%ae%9a%e8%a6%81%e6%98%afgoogle-maps%e4%b9%88%ef%bc%9f-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>使用DocBook来编写日常/项目文档</title>
		<link>http://michael.nona.name/archives/106</link>
		<pubDate>Wed, 11 May 2005 08:19:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/106</guid>
		<description></description>
		<content:encoded><![CDATA[我一直很痛恨写文档——注意，是文档，不是代码注释。倒不是因为我懒惰，而是因为有很大一个问题是，我不得不跟各种工具打交道。你知道的，我一向痛恨IDE侵入太强的工具，比如Word, 比如任何一款HTML编辑器。他们实际上都不是用来写文档的，某种意义上说，是用来排版的。在我写大段文档的时候，一边想，一边写，一边还要考虑排版，考虑在某处应该加粗，某处倾斜，某处应该加一个Notion, 某处又包含了一个样例。除非在心血来潮的情况下，否则我是绝不愿意排版的。Word排版头痛而又麻烦，候老先生花了10年才玩转，而我毕竟不是写文稿为生。

Word处理这一类的事情相当蹩脚——以我一个普通的文档作者，做完的文档我自己都不愿意看，并非是文字，而是自己排版出来的实在太糟糕。当涉及到计算机写作必要的example的时候，比如说，一段代码，代码中某处加入类似于1),2),3)的标记，然后下面写上此处标记的含义，用Word来做这个简直掉进深渊。

更为难受的是，我不知道怎么使用Word来多人共同写作，比如你写第一章，我写第二章。用Word只能你写你的，我写我的，然后Copy&Paste, 合并到一起……

版本管理系统对Word格式文件完全无法发挥作用，什么diff, compare, changeLog都不管用。

打开Word文件费时费力。

如上种种，是我这些年来文档编写对Word积累的一些恶气，直到发现DocBook(http://www.docbook.org), 这些恶气才得以发泄。简单地说，DocBook定义了一组方便文档写作（主要是计算机文档）的xml标签，比如book, chapter, section, example, programmelisting等等，然后定义了很多XSL来对这些文档进行转换，输出为不同格式的文件。目前，我使用的DocBook-XSL，能够输出为html, htmlhelp, xml-fo等格式，完全不需要了解任何排版知识，只需要编写纯粹的xml文档，就可以输出为格式优美专业的文档。就我所见，Spring, Hibernate, Tapestry等耳熟能详的开源项目都用它来组织文档。

我没有时间完整的了解所有的标签，实际上也用不着。站点http://pyrecord.freezope.org/docbook/docbook/index.html 我常去，多谢作者的工作。

现在我正专心的在EditPlus中写项目需要的文档，没有大堆的格式按钮，不用操心文件的格式，不用操心排版，我终于找到了写文档的感觉。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date>2005-05-11 16:19:08</wp:post_date>
		<wp:post_date_gmt>2005-05-11 08:19:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8docbook%e6%9d%a5%e7%bc%96%e5%86%99%e6%97%a5%e5%b8%b8%e9%a1%b9%e7%9b%ae%e6%96%87%e6%a1%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[歪歪凍的技術網誌]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.techblog.idv.tw/Blog/zion/archive/7313.aspx</wp:comment_author_url>
			<wp:comment_author_IP>140.123.105.156</wp:comment_author_IP>
			<wp:comment_date>2005-05-12 17:13:39</wp:comment_date>
			<wp:comment_date_gmt>2005-05-12 09:13:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Ajax.NET- A free library for .NET</strong>

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[Cat Jeung]]></wp:comment_author>
			<wp:comment_author_email>blackcat1@tom.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.136.172.154</wp:comment_author_IP>
			<wp:comment_date>2005-05-15 15:24:36</wp:comment_date>
			<wp:comment_date_gmt>2005-05-15 07:24:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I cant find your contacts in your blog.

Can you contact me ? 

my QQ 103735815 
msn : rockingcatz@hotmail.com

would like to be your friend. :)



]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>183</wp:comment_id>
			<wp:comment_author><![CDATA[Hallelujah]]></wp:comment_author>
			<wp:comment_author_email>luyao_china@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.134.138.41</wp:comment_author_IP>
			<wp:comment_date>2005-09-21 13:42:01</wp:comment_date>
			<wp:comment_date_gmt>2005-09-21 05:42:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[的确好的文档能让工作事半功倍，对于软件工程来说更为重要。

我今天获知了docbook这种咚咚，并对他产生了极其浓厚的兴趣。
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>感受广州夜生活</title>
		<link>http://michael.nona.name/archives/107</link>
		<pubDate>Mon, 16 May 2005 02:03:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/107</guid>
		<description></description>
		<content:encoded><![CDATA[昨天晚上十点，我们去了洛溪食街宵夜。早就听说那里场面宏大，到了果然不同一般，宽阔的马路两边，好几十家大排档铺子正在营业，人很多，吃吃喝喝好不热闹。我本不是一个喜欢凑热闹的人，但看到这种场面，加上长期项目的压抑，心里也不由得一下子轻松起来。

在路上奇怪的看到有人在现场演奏萨克斯，刚开始觉得很是惊奇，还以为是音乐发烧者在这里自娱自乐；后来才发现原来是食客花钱他们表演的。走到中心处才发现，许多背着吉他的女孩在食客群中穿来穿去，询问他们要不要点歌。同事告诉我：不要听她们唱歌，非常难听。路过的时候我仔细听了一下，真的唱得很差劲，基本上只是在念词；手中的吉他几乎只保持一种和弦样式，只不过用右手击打节奏而已。因为吉他声音偏小，在嘈杂的环境里这种配乐与唱歌的差异还不太容易听出来；但是我听来简直要替吉他难过：居然被用来这样子用。

有的同事去年来过，于是轻车熟路的找了一处地方坐下，开始点吃的。“炭烧生蚝”，他们点的第一个东东。我向来不吃看起来比较奇怪或者我没有听说过的东西，也不怎么吃海鲜。看到这个名字，我说你们先吃，我看看再说；然后非常保守的要了鱼片粥和烤玉米。点菜的过程中无一例外的受到了那些卖唱女孩的骚扰，不断的有人来问“先生要不要点歌”，听取了他们的劝告，加上自己的所见，于是一次次的谢绝了她们。

几杯酒过后，天气变得出奇的好，有风顺着马路习习吹来，我们坐在风口上，风干干净净，吹得人格外的舒服，比起房间的空调感觉自然舒适，更不比北京的风了。在这样的环境中，突然间什么也不想，什么都不重要，什么拘束也没有，什么压力在瞬间消失得无影无踪。

鱼片粥入口觉得有点腥，习惯之后才觉得味道鲜美，非常好吃。先前以为烤玉米是老玉米，没想到吃到口的玉米居然相当鲜嫩，跟麦当劳的烤玉米有一拼，烤来的滋味更觉得有趣；据说还有烤茄子……我真是怀疑，这里还有什么不能烤的。炭烧生蚝的滋味……对我来说，跟一个撒上孜然粉的豆腐并无不同，但他们都吃得津津有味，我也就相信了自己吃的是天大的美味了。对我而言，吃的东西味道过得去就行了，主要是环境。

有一些相当专业的唱歌的来了，一个留长发、穿黑衣服看起来年纪不大的小伙子很抢眼，刚唱完一首，马上赢得了观众的掌声。他吉他弹得不错，唱歌很专著，很投入，我们听着都觉得很顺耳。于是我们一直听到他唱不下去了才离开。

回到房子里已经将近凌晨一点，我却一点倦意也没有，大脑还很兴奋。打开电视机，看到了超级女声蒙牛酸酸乳的广告，前面依然还是那首国语版的歌，最后那句广告词“酸酸甜甜就是我”居然变成了粤语，感觉怪极了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>107</wp:post_id>
		<wp:post_date>2005-05-16 10:03:52</wp:post_date>
		<wp:post_date_gmt>2005-05-16 02:03:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%84%9f%e5%8f%97%e5%b9%bf%e5%b7%9e%e5%a4%9c%e7%94%9f%e6%b4%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>WSAD的又一个问题：cmd.exe /C java.exe -version</title>
		<link>http://michael.nona.name/archives/108</link>
		<pubDate>Mon, 16 May 2005 13:05:44 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/108</guid>
		<description></description>
		<content:encoded><![CDATA[今天调试java程序中创建新进程的程序，代码大致如下：

	Runtime rt = Runtime.getRuntime();
	Process proc = rt.exec(new String[]{"cmd.exe","/C", "java", "-version"});

我将WSAD默认jre设置为jdk1.4.2, 替换了它默认的IBM jdk1.3.1. 任何人一看就知道，这个进程的运行输出应该是类似于java version "1.4.2_06"之类的字符串，然而在WSAD中，运行结果却是java version "1.3.1" ... J2RE 1.3.1 IBM Windows 32 build cn131-20031021. 将这段代码放到eclipse3.0中运行，显示1.4.2没问题；放到命令行下运行，也显示1.4.2. 看来是WSAD搞的鬼，于是索性修改了一下代码：

	Process proc = rt.exec(new String[]{"cmd.exe","/C", "echo", "%PATH%"});

在命令行下运行cmd.exe /C echo %PATH%, 结果是
	C:\WINNT\system32;C:\WINNT;C:\WINNT\system32\WBEM;c:\ruby\bin;C:\Perl\bin\;...

而在WSAD中运行，结果赫然是：

	C:\Program Files\IBM\WebSphere Studio\Application Developer\v5.1.2\eclipse\jre\bin;C:\WINNT\system32;...

毫无疑问，是WSAD在启动时修改了PATH变量，使得在搜索java.exe时直接找到了IBM JDK1.3.1. 

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date>2005-05-16 21:05:44</wp:post_date>
		<wp:post_date_gmt>2005-05-16 13:05:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wsad%e7%9a%84%e5%8f%88%e4%b8%80%e4%b8%aa%e9%97%ae%e9%a2%98%ef%bc%9acmdexe-c-javaexe-version</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>对buffalo进行了一些改进</title>
		<link>http://michael.nona.name/archives/109</link>
		<pubDate>Tue, 17 May 2005 05:17:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/109</guid>
		<description></description>
		<content:encoded><![CDATA[加入了ServiceRepository类，用来保持BuffaloService实例。ServiceRepository中包含了一系列用来注册Service的方法，包括从字符串，Class, 实例中获取Service实例。但随之而来的出现一个问题，该如何控制这些BuffaloService的生命周期？

在1.0alpha版中，buffalo只是简单的通过反射生成实例，每一个请求生成一个，这种规则简单而容易掌握；然而，一旦通过ServiceRepository来控制，那么服务实例的创建该如何创建？是单例，实例池，还是每次都新创建？这是个问题。想着想着，ServiceRepository最后可能变成简单的组件管理容器了，那么在创建的时候，可能就会有一个形如hivemind或者Spring配置文件的东东，描述这个service应该如何产生(singleton,pooled,instance...). 这种复杂性无论是我，还是使用者，都不想看到的。因此，我决定只在ServiceRepository中保留要运行实例的类名，单独使用buffalo的应用将只通过反射来产生新实例；而将这些应用生命周期的管理，交给Spring集成Buffalo来控制。

加入了ServiceRepository类后定义buffalo service更为灵活，不用受限制在buffalo-service.properties中了。

客户端也进行了增强，现在客户端能够将应用对象作为参数发送到服务器端了。参考代码如下：

	var u = {};
	u[Buffalo.BOCLASS] = "net.buffalo.demo.simple.User";
	u.id = 234;
	u.name = "Julie";
	u.age = 17;
	u.sex = true;
	u.memo = "very beautiful";

	buffalo.remoteCall("tutorialService.hash",[u], function(reply) {
		alert(reply.getResult());
	});

当然，目前只能发送简单对象，主要是为了满足特定应用的要求，对于复杂对象（包括对象间相互引用）是否需要加入还在进一步考虑中。

以上特性将在1.1版中支持。另外，1.2版中还打算支持JDK5.0的注解（Annotation）。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date>2005-05-17 13:17:34</wp:post_date>
		<wp:post_date_gmt>2005-05-17 05:17:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%af%b9buffalo%e8%bf%9b%e8%a1%8c%e4%ba%86%e4%b8%80%e4%ba%9b%e6%94%b9%e8%bf%9b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<wp:comment>
			<wp:comment_id>57</wp:comment_id>
			<wp:comment_author><![CDATA[Killvin]]></wp:comment_author>
			<wp:comment_author_email>Killvin@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.90.74.60</wp:comment_author_IP>
			<wp:comment_date>2005-05-17 15:33:15</wp:comment_date>
			<wp:comment_date_gmt>2005-05-17 07:33:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[将回调方式更改成Command模式来实现会更好！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>219.136.207.130</wp:comment_author_IP>
			<wp:comment_date>2005-05-17 19:49:35</wp:comment_date>
			<wp:comment_date_gmt>2005-05-17 11:49:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[愿闻其祥。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>84</wp:comment_id>
			<wp:comment_author><![CDATA[stray]]></wp:comment_author>
			<wp:comment_author_email>stray1977@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.79.197.187</wp:comment_author_IP>
			<wp:comment_date>2005-06-11 16:03:23</wp:comment_date>
			<wp:comment_date_gmt>2005-06-11 08:03:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[首先非常感谢你这么伟大的工作，很久以来没有看到这么简洁、灵活而又实用的框架，我有两个建议：
1、首先客户端能否组织另外一个团队来开发ui
2、建议集成spring，

请问，能否发布版本发布计划。
如果有需要我可以加入，有5年多的Java经验。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>85</wp:comment_id>
			<wp:comment_author><![CDATA[4bug]]></wp:comment_author>
			<wp:comment_author_email>qyt@gaoden.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.173.107.68</wp:comment_author_IP>
			<wp:comment_date>2005-06-13 11:55:39</wp:comment_date>
			<wp:comment_date_gmt>2005-06-13 03:55:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你好，我在用Buffalo.bind绑定表格时在FireFox下是没有问题的，但在IE6下当jHeight&gt;1时，得不到正确结果。后来发现在IE下Node.cloneNode不起作用。请问有什么解决的办法吗？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>92</wp:comment_id>
			<wp:comment_author><![CDATA[stray]]></wp:comment_author>
			<wp:comment_author_email>stray1977@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.79.208.36</wp:comment_author_IP>
			<wp:comment_date>2005-06-16 22:28:11</wp:comment_date>
			<wp:comment_date_gmt>2005-06-16 14:28:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[把语句
if (i &gt; 1) 	{
	tBody.appendChild(tr);
}

提前到
var data = value[i];
for (var j = 0; j ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>98</wp:comment_id>
			<wp:comment_author><![CDATA[reimonj]]></wp:comment_author>
			<wp:comment_author_email>tigerja@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.25.38.139</wp:comment_author_IP>
			<wp:comment_date>2005-06-25 09:23:03</wp:comment_date>
			<wp:comment_date_gmt>2005-06-25 01:23:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[的确很漂亮，我一直忙着项目，所以只用了1个小时左右看了一下就用了，可能更多的功能都没有用，高，实在是高]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>106</wp:comment_id>
			<wp:comment_author><![CDATA[Yi Peng]]></wp:comment_author>
			<wp:comment_author_email>yipeng97@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.108.130.138</wp:comment_author_IP>
			<wp:comment_date>2005-07-05 18:44:48</wp:comment_date>
			<wp:comment_date_gmt>2005-07-05 10:44:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我个人看法：复杂对象就没有必要支持了。还有目前有些东西与Spring集成，未必是一个合适的做法，我现在正在设计一个面向以String为id的IoC容器，我正在尝试将其作为buffalo的repository，基本上是没有什么问题。另外，我认为关于fault的处理应在下一个版本上实现，对于很多项目来说，这是必不可少的。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>110</wp:comment_id>
			<wp:comment_author><![CDATA[squall]]></wp:comment_author>
			<wp:comment_author_email>squall_sa@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.232.26.161</wp:comment_author_IP>
			<wp:comment_date>2005-07-07 13:12:15</wp:comment_date>
			<wp:comment_date_gmt>2005-07-07 05:12:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[新版什么时候发布啊]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>318</wp:comment_id>
			<wp:comment_author><![CDATA[XIEKE]]></wp:comment_author>
			<wp:comment_author_email>TARZON@21CN.COM</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.63.8.34</wp:comment_author_IP>
			<wp:comment_date>2005-10-10 17:37:30</wp:comment_date>
			<wp:comment_date_gmt>2005-10-10 09:37:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你的那个rails和我的 ActionHandler 真是异曲同工啊， 哈哈哈哈]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39848</wp:comment_id>
			<wp:comment_author><![CDATA[ancin]]></wp:comment_author>
			<wp:comment_author_email>superelmno@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.79.151.13</wp:comment_author_IP>
			<wp:comment_date>2007-03-29 09:14:20</wp:comment_date>
			<wp:comment_date_gmt>2007-03-29 01:14:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我下的DEMO为什么会有如下的错误呢；

HTTP Status 404 - Servlet bfapp is not available

type Status report

message Servlet bfapp is not available

description The requested resource (Servlet bfapp is not available) is not available.
Apache Tomcat/6.0.10]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68010</wp:comment_id>
			<wp:comment_author><![CDATA[李迪]]></wp:comment_author>
			<wp:comment_author_email>daqinserver@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.159.82.250</wp:comment_author_IP>
			<wp:comment_date>2008-10-18 10:14:00</wp:comment_date>
			<wp:comment_date_gmt>2008-10-18 02:14:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你好，我想咨询一下，使用buffalo请求，原来是很正常的，但如果tomcat使用了apache集群的时候，总是说找不到bfapp/buffalo/类名的问题。感觉是路径问题，但不知道哪里出错，请指教]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>用Buffalo完成了一个j2ee blueprints中ajax autocomplete样例</title>
		<link>http://michael.nona.name/archives/110</link>
		<pubDate>Wed, 18 May 2005 09:21:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/110</guid>
		<description></description>
		<content:encoded><![CDATA[今天抽了点时间，完成了J2EE Blueprints Ajax样例中的AutoComplete. 以下是执行结果：

<img src='/wp-content/buffalovsbpajax.gif' alt='' />

结果证明，用buffalo开发ajax应用，与j2ee blueprints自带的样例相比，能够大大提高开发速度，减少编码量;-)

下载: <a href="/wp-content/buffaloajax.zip">buffaloajax.zip</a> 使用buffalo 1.0alpha. 

请直接将zip解压缩到tomcat/webapps路径中，然后在浏览器中访问：

http://localhost:8080/buffalo-ajax/ajax-autocomplete.jsp<br />
http://localhost:8080/buffalo-ajax/ajax-autocomplete-withbind.jsp

J2EE Blurprints Ajax: https://bpcatalog.dev.java.net/nonav/ajax/autocomplete/frames.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>110</wp:post_id>
		<wp:post_date>2005-05-18 17:21:41</wp:post_date>
		<wp:post_date_gmt>2005-05-18 09:21:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%94%a8buffalo%e5%ae%8c%e6%88%90%e4%ba%86%e4%b8%80%e4%b8%aaj2ee-blueprints%e4%b8%adajax-autocomplete%e6%a0%b7%e4%be%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_a4a0592ac88cad5ff57e19c503f04244</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_e921fd957a27606c7cd0b43331887c63</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>59</wp:comment_id>
			<wp:comment_author><![CDATA[wolfsquare]]></wp:comment_author>
			<wp:comment_author_email>duke.chan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://wolfsquare.mblogger.cn/</wp:comment_author_url>
			<wp:comment_author_IP>61.145.237.69</wp:comment_author_IP>
			<wp:comment_date>2005-05-19 20:50:56</wp:comment_date>
			<wp:comment_date_gmt>2005-05-19 12:50:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[请教一下，为什么Buffalo只接受POST而不支持GET呢？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>60</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>219.136.207.130</wp:comment_author_IP>
			<wp:comment_date>2005-05-19 23:54:58</wp:comment_date>
			<wp:comment_date_gmt>2005-05-19 15:54:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[原因两点：

1 GET传递的数据量有限，大概是4K左右，POST在我所知无限制
2 GET容易被浏览器缓存，这些缓存大部分情况下都是有害的，POST不会缓存 ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68</wp:comment_id>
			<wp:comment_author><![CDATA[大郎]]></wp:comment_author>
			<wp:comment_author_email>iexper@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.iexper.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP>218.204.129.77</wp:comment_author_IP>
			<wp:comment_date>2005-05-27 10:17:31</wp:comment_date>
			<wp:comment_date_gmt>2005-05-27 02:17:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[大哥,是然你的JAVA技术文档我无法看懂,但是我仍心存敬Y,但是近段时间我用GREAT NEWS订阅你的BLOG的所有记录全部都是?号,所以过来通知下.
:)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69</wp:comment_id>
			<wp:comment_author><![CDATA[alin]]></wp:comment_author>
			<wp:comment_author_email>alin_ass@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.12.180.125</wp:comment_author_IP>
			<wp:comment_date>2005-06-03 13:36:45</wp:comment_date>
			<wp:comment_date_gmt>2005-06-03 05:36:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[spring中怎么配置buffalo?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>219.136.207.130</wp:comment_author_IP>
			<wp:comment_date>2005-06-03 19:48:45</wp:comment_date>
			<wp:comment_date_gmt>2005-06-03 11:48:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[1.0版本不支持Spring, 1.1版本中支持。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>71</wp:comment_id>
			<wp:comment_author><![CDATA[alin]]></wp:comment_author>
			<wp:comment_author_email>alin_ass@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.176.36.123</wp:comment_author_IP>
			<wp:comment_date>2005-06-04 21:47:36</wp:comment_date>
			<wp:comment_date_gmt>2005-06-04 13:47:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不是吧...我已经把你的guessnumber弄到spring上了

在BuffaloServiceExporter handRequest()里加几句就行了,afterPropertiesSet() 的全删光，来一个request就new一个skeleton好了嘿嘿..
		BuffaloService service = (BuffaloService) this.getService();
		service.init(request);
		BurlapSkeleton skeleton = new BurlapSkeleton(service);

num.jsp里的这样改
buffalo.remoteCall("newRound",[], function(reply) 

webapp-servlet.xml里
	
		
			
		
	
	
	


说实在的，你这个东西非常好，你工作再忙也得帮大家完善他，你能留个email吗？我想很多人愿意一起完善他。
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>72</wp:comment_id>
			<wp:comment_author><![CDATA[alin]]></wp:comment_author>
			<wp:comment_author_email>alin_ass@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.176.36.123</wp:comment_author_IP>
			<wp:comment_date>2005-06-04 21:48:50</wp:comment_date>
			<wp:comment_date_gmt>2005-06-04 13:48:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[接上webapp-servlet.xml
	
	
	
	
		
			
		
	]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>73</wp:comment_id>
			<wp:comment_author><![CDATA[alin]]></wp:comment_author>
			<wp:comment_author_email>alin_ass@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.176.36.123</wp:comment_author_IP>
			<wp:comment_date>2005-06-04 21:50:00</wp:comment_date>
			<wp:comment_date_gmt>2005-06-04 13:50:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[xml配置被过滤 了，算了，这个大家都会...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>74</wp:comment_id>
			<wp:comment_author><![CDATA[alin]]></wp:comment_author>
			<wp:comment_author_email>alin_ass@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.176.36.123</wp:comment_author_IP>
			<wp:comment_date>2005-06-05 13:16:42</wp:comment_date>
			<wp:comment_date_gmt>2005-06-05 05:16:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[发到http://forum.javaeye.com/viewtopic.php?t=13598了，你有空过来看一下]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76</wp:comment_id>
			<wp:comment_author><![CDATA[差沙]]></wp:comment_author>
			<wp:comment_author_email>sshw2sfc@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.118.97.7</wp:comment_author_IP>
			<wp:comment_date>2005-06-07 20:19:55</wp:comment_date>
			<wp:comment_date_gmt>2005-06-07 12:19:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这个东西真的非常好，但是代的事例太简单了，我还会点美工。
觉得要是想吸引人就要先吸引人的眼球。

我做一些美工吧，顺便学学你这个，一起弄个强有力的演示出来。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>82</wp:comment_id>
			<wp:comment_author><![CDATA[zigzag]]></wp:comment_author>
			<wp:comment_author_email>zigzag.chen@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://swato.dev.java.net</wp:comment_author_url>
			<wp:comment_author_IP>210.249.9.220</wp:comment_author_IP>
			<wp:comment_date>2005-06-10 00:02:59</wp:comment_date>
			<wp:comment_date_gmt>2005-06-09 16:02:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有兴趣的话可以看看这个：
war:
https://swato.dev.java.net/source/browse/*checkout*/swato/dist/swato.war

页面原型
https://swato.dev.java.net/files/documents/3465/15486/suggest_firefox_EN.JPG
https://swato.dev.java.net/files/documents/3465/15487/suggest_IE_CN.JPG

后来看到了Buffalo，发现一些想法还挺像的，很高兴与你交流交流：）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>83</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>219.136.207.130</wp:comment_author_IP>
			<wp:comment_date>2005-06-10 09:20:08</wp:comment_date>
			<wp:comment_date_gmt>2005-06-10 01:20:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[截图看起来挺漂亮，war无法下载]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>94</wp:comment_id>
			<wp:comment_author><![CDATA[Gannon Walti]]></wp:comment_author>
			<wp:comment_author_email>ganwal22@ko-jawdo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blackjack-at-home.com</wp:comment_author_url>
			<wp:comment_author_IP>128.39.225.98</wp:comment_author_IP>
			<wp:comment_date>2005-06-17 04:49:09</wp:comment_date>
			<wp:comment_date_gmt>2005-06-16 20:49:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href='http://www.blackjack-at-home.com' rel="nofollow">pachinko game</a> - The japanese obsession with pachinko gambling machines propelled yet another pachinko game into the top ten, with tecmo's raksuho!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>100</wp:comment_id>
			<wp:comment_author><![CDATA[zigzag]]></wp:comment_author>
			<wp:comment_author_email>zigzag.chen@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://swato.dev.java.net/</wp:comment_author_url>
			<wp:comment_author_IP>210.249.11.103</wp:comment_author_IP>
			<wp:comment_date>2005-06-29 01:36:05</wp:comment_date>
			<wp:comment_date_gmt>2005-06-28 17:36:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sorry,上次搞得比较仓促，现在0.5版Release了，war应该可以下载了。
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>101</wp:comment_id>
			<wp:comment_author><![CDATA[43things]]></wp:comment_author>
			<wp:comment_author_email>43things@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://it915.net/people</wp:comment_author_url>
			<wp:comment_author_IP>61.48.65.23</wp:comment_author_IP>
			<wp:comment_date>2005-06-30 11:07:35</wp:comment_date>
			<wp:comment_date_gmt>2005-06-30 03:07:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[
IE 下 挺好，firefox 1.0 , 后退之后才显示]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>111</wp:comment_id>
			<wp:comment_author><![CDATA[jbas]]></wp:comment_author>
			<wp:comment_author_email>jbas@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.12.39.138</wp:comment_author_IP>
			<wp:comment_date>2005-07-08 10:01:42</wp:comment_date>
			<wp:comment_date_gmt>2005-07-08 02:01:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我用resin3.0.14,当我点demo中的=,会跳出
500 Servlet Exception
java.lang.NoSuchMethodError: com.caucho.burlap.server.BurlapSkeleton.(Ljava/lang/Object;)V
	at net.buffalo.server.BuffaloServiceServlet.service(BuffaloServiceServlet.java:95)
	at com.caucho.server.dispatch.ServletFilterChain.doFilter(ServletFilterChain.java:99)
	at com.caucho.server.webapp.WebAppFilterChain.doFilter(WebAppFilterChain.java:163)
	at com.caucho.server.dispatch.ServletInvocation.service(ServletInvocation.java:208)
	at com.caucho.server.http.HttpRequest.handleRequest(HttpRequest.java:259)
	at com.caucho.server.port.TcpConnection.run(TcpConnection.java:363)
	at com.caucho.util.ThreadPool.runTasks(ThreadPool.java:490)
	at com.caucho.util.ThreadPool.run(ThreadPool.java:423)
	at java.lang.Thread.run(Thread.java:595)


--------------------------------------------------------------------------------
Resin-3.0.14 (built Tue, 05 Jul 2005 11:03:36 PDT) 

用tomcat5.0.28可以显示的.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>55536</wp:comment_id>
			<wp:comment_author><![CDATA[spell]]></wp:comment_author>
			<wp:comment_author_email>zsbwxm@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://hi.baidu.com/ecspell</wp:comment_author_url>
			<wp:comment_author_IP>218.108.88.118</wp:comment_author_IP>
			<wp:comment_date>2007-06-21 11:18:38</wp:comment_date>
			<wp:comment_date_gmt>2007-06-21 03:18:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[用tomcat 5.x 正常，但是用resin 3.x就不正常了，出现错误如下：
看来这东西只能在tomcat下面用，可惜我用的都是resin有什么办法解决吗？
500 Servlet Exception

500 Servlet Exception

java.lang.NoClassDefFoundError
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:494)
	at java.lang.Class.newInstance0(Class.java:350)
	at java.lang.Class.newInstance(Class.java:303)
	at com.caucho.server.dispatch.ServletConfigImpl.createServletImpl(ServletConfigImpl.java:637)
	at com.caucho.server.dispatch.ServletConfigImpl.createServlet(ServletConfigImpl.java:587)
	at com.caucho.server.dispatch.ServletFilterChain.doFilter(ServletFilterChain.java:97)
	at com.caucho.server.webapp.WebAppFilterChain.doFilter(WebAppFilterChain.java:173)
	at com.caucho.server.dispatch.ServletInvocation.service(ServletInvocation.java:229)
	at com.caucho.server.http.HttpRequest.handleRequest(HttpRequest.java:274)
	at com.caucho.server.port.TcpConnection.run(TcpConnection.java:511)
	at com.caucho.util.ThreadPool.runTasks(ThreadPool.java:520)
	at com.caucho.util.ThreadPool.run(ThreadPool.java:442)
	at java.lang.Thread.run(Thread.java:595)


Resin-3.0.23 (built Mon, 22 Jan 2007 02:16:07 PST)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>实现类似于rails的web开发框架</title>
		<link>http://michael.nona.name/archives/111</link>
		<pubDate>Mon, 06 Jun 2005 13:23:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/111</guid>
		<description></description>
		<content:encoded><![CDATA[Rails的成功依赖于以下几点：

<strong>1</strong> Web应用多年来积累的各种常见约定，convention over configuration. 这是rails简单的最根本保证。Rails将常见的一些配置信息从繁杂的xml配置文件中解脱出来，成为命名约定。这样xml的配置大大减少。

在目前几乎所有的MVC框架将xml作为配置的方式。而对于领域对象增删改查，rails采用如下的命名约定：

	domainObject/view/id
	domainObject/edit/id
	domainObject/list
	…

2 简单的Ruby语言。这也是rails成功的原因之一。

3 强大的代码生成器。加快开发速度的技巧之一，是将相同特征的操作利用代码生成机制完成大多数功能。这里不仅仅是业务代码，而且包括那些页面。页面能够根据数据库字段类型，生成相应的录入或者修改的输入框。

4 基于活动记录(ActiveRecord)的O/R映射

以上任何一个特征，采用java领域的相关知识都不难实现。那么，我们现在来看一下，如何实现这样一个特征的web框架。

<strong>基本思路</strong>

采用一个Servlet对所有的请求进行转发，路径中包括了要操作的domain object, 什么操作，以及操作所需的参数，因此，得到这些信息后，找到相应的domain object，并实例化；利用语言本身提供的反射（或称内省）特征，找到对应的方法，然后执行；将执行的结果返回到某一种界面表现中，然后显示。

大概思路就是这样，我们来看一下，在java世界里，这样的一套东西如何实现。

场景：/app/UserInfo/edit/1
编辑ID=1的用户信息。
基本路径配置：所有应用相关的文件都放在WEB-INF/app中，里面文件排放规则类似于rails，遵循MVC模式：controllers中存放控制器，views中按照domain object分别存放各种操作对应的页面（如增删改查），models中存放domain object定义。

由于在URL中保留了足够的对象、操作以及参数的各种信息，这些信息可以很容易的被获取：

<strong>1 获得对应的路径信息</strong>

	String path = request.getPathInfo();
	String[] args = path.split(“/”);
	String domainObject = args[1]; // UserInfo
	String operation = args[2] // edit
	//…others are parameters // id=1

<strong>2 根据信息，找到相应的domain object. </strong> 按照rails的设计思路，这里需要最好采用某种脚本语言来实现。当然，在大型应用中，我们可以直接引用已经设计好的domain object, 但在这里，我们可以直接在某一种脚本语言中编写。jvm内的脚本语言种类繁多，你有足够多的选择：JavaScript, Python, Groovy等等，只需要选一种自己熟悉的就可以了；如果对纯粹的java更感兴趣，可以直接使用BSH（事实上，这就是大名鼎鼎的OFBiz的表现逻辑的做法）。这里我们使用Jython: 

	def class UserInfoController:
		def edit(self,id):
			objectMapper.edit(selfProerpties, id) # 这是伪代码，你可以有足够多的选择来更新对象
			return {“object”:self}

<strong>3 Servlet通过某种方式来调用这段代码，并将结果返回给Servlet. </strong>

	interpreter.execfile(theActionFile);
	PyObject cls = interp.get(domainObject+”Controller”);
	PyInstance controller = (PyInstance)cls.__call__();
	PyDictionary pr = (PyDictionary)controller.invoke(operation, args);
	Map map = Utils.PyDict2JavaMap(pr);

<strong>4 获得结果后，进行展现。</strong>下面就是某一种表现端一展身手的地方了: 
许多模版语言都依赖于某一种类似于Map的数据结构来提供数据，这里以FreeMarker为例：

	cfg = Configuration.getDefaultConfiguration();
	cfg.setServletContextForTemplateLoading(getServletContext(), "WEB-INF/app/views");
	Template t = cfg.getTemplate(domainObject+”/”+operation+”.ftl”);
	t.process(map, response.getWriter());

对于velocity，也可以进行同样的处理；而如果你更习惯于jsp, 则完全可以将Map中的数据放置到request中，然后输出jsp, 在jsp中使用JSTL对数据进行使用：

	for (Map.Entry entry : map) {
		request.setAttribute(entry.getKey().toString(), entry.getValue());
	}
	request.getRequestDispatcher("views/"+ domainObject+”/”+operation+”.jsp”).forward(request, response)

这样，一个类似于Rails思想的Web框架就完成了. 当然，这里面还有需要需要细化的地方，许多代码需要推敲，在生产环境中，还有更多类似于缓存等需要注意的地方。O/R映射也没有提及，代码生成也需要进行考虑。但是无论如何，有了这样的思路，实现一个类似的web框架不是难事了。

[update] 这样的一种框架到底在什么地方使用最好呢？我的体会是在小型应用中，尽可能采用这样的轻型方式。在我目前参与的项目中，有时需要一些小型的web应用来辅助开发，这些小型应用的特点是需求紧急，需要马上使用；传统的j2ee开发肯定不能使用——等到domain object设计出来，已经不需要了；而其他的编程语言可能不是太方便；直接用jsp可以，但是不能清晰区分数据与表现，还是不佳。因此这样一种方式是比较好的——一旦设计完成，只需要编写python文件，放到特定目录即可。

另外，在大型应用中，对于服务层外围程序的开发，也可以采用这种方式。OFBiz就是这样做的，服务层内部采用普通java代码开发；web层与应用层之间的结合采用bsh脚本。这样，当需要调整页面或者添加改动量不大的新业务时，无需编译，编写出来马上就可以看到效果了。因此，采用传统j2ee方式构建服务层以及内核，采用脚本程序进行外部开发，结合了编译与运行的双重优势，这种方式值得使用。

关于脚本语言，我个人偏好python, 但在java领域，你有太多的选择：Groovy, ruby, javascript等等。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>111</wp:post_id>
		<wp:post_date>2005-06-06 21:23:25</wp:post_date>
		<wp:post_date_gmt>2005-06-06 13:23:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ae%9e%e7%8e%b0%e7%b1%bb%e4%bc%bc%e4%ba%8erails%e7%9a%84web%e5%bc%80%e5%8f%91%e6%a1%86%e6%9e%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>75</wp:comment_id>
			<wp:comment_author><![CDATA[Nothing Else Matters]]></wp:comment_author>
			<wp:comment_author_email>test@test.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.80.205.74</wp:comment_author_IP>
			<wp:comment_date>2005-06-07 11:17:09</wp:comment_date>
			<wp:comment_date_gmt>2005-06-07 03:17:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[trails]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>77</wp:comment_id>
			<wp:comment_author><![CDATA[alin]]></wp:comment_author>
			<wp:comment_author_email>alin_ass@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.12.7.180</wp:comment_author_IP>
			<wp:comment_date>2005-06-08 21:47:50</wp:comment_date>
			<wp:comment_date_gmt>2005-06-08 13:47:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[如果session失效，ie下会死在 reply.getResult()这里大概4、5秒，然后页面报告js错误，firefox下一切正常，马上报告session错误，很严重的问题啊

		var action = reply.getResult();
		
		if(!action || null == action) {
			alert('session过期，请重新登陆');
		}
		if (action.error &amp;&amp; "" != action.error) {
			//alert(action.error);
			errEle.innerHTML = action.error;
			return;
		} ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>78</wp:comment_id>
			<wp:comment_author><![CDATA[alin]]></wp:comment_author>
			<wp:comment_author_email>alin_ass@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.12.7.180</wp:comment_author_IP>
			<wp:comment_date>2005-06-08 21:59:58</wp:comment_date>
			<wp:comment_date_gmt>2005-06-08 13:59:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[此时ie的错误是258行字符2缺少对象，那个buffalo loading的进度条死在那里


firefox下立即返回action(=undified)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79</wp:comment_id>
			<wp:comment_author><![CDATA[alin]]></wp:comment_author>
			<wp:comment_author_email>alin_ass@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.12.7.180</wp:comment_author_IP>
			<wp:comment_date>2005-06-08 22:07:24</wp:comment_date>
			<wp:comment_date_gmt>2005-06-08 14:07:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[在说明一下，非常不好意思，由于自己近期没时间，只能处于使用buffalo情况，有问题只能来问问你。也不知道你信箱，所以...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>219.136.207.130</wp:comment_author_IP>
			<wp:comment_date>2005-06-09 09:23:11</wp:comment_date>
			<wp:comment_date_gmt>2005-06-09 01:23:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这是因为服务器端程序没有写好，没有对session进行判断。当session失效的时候，服务器端抛出NullPointerException, 客户端返回的是Fault,  Buffalo目前没有对Fault进行自动处理，所以出错。只要在客户端或者服务器端加上校验就好了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>81</wp:comment_id>
			<wp:comment_author><![CDATA[alin]]></wp:comment_author>
			<wp:comment_author_email>alin_ass@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.12.7.180</wp:comment_author_IP>
			<wp:comment_date>2005-06-09 09:52:58</wp:comment_date>
			<wp:comment_date_gmt>2005-06-09 01:52:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[服务端session管理是一个spring的拦截器，整个webapp里有很多页面是普通的页面刷新机制，这样怎么改？
我想应该在客户端改比较好，但是我上面的问题在firefox下是没有的.ie下怎么办呢？
public class SignonInterceptor extends HandlerInterceptorAdapter {

	public boolean preHandle(HttpServletRequest request,
			HttpServletResponse response, Object handler) throws Exception {
		SignonSession adminSession = (SignonSession) WebUtils
				.getSessionAttribute(request, SignonSession.NAME_IN_SESSION);
		if (adminSession == null) {
			ModelAndView modelAndView = new ModelAndView(new RedirectView(
					NameSpace.VIEW_SIGNON));
			throw new ModelAndViewDefiningException(modelAndView);
		} else {
			return true;
		}
	}

}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28822</wp:comment_id>
			<wp:comment_author><![CDATA[asian fisting]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://myxxxfinder.com/x2/asian/asian-fisting.html</wp:comment_author_url>
			<wp:comment_author_IP>68.252.245.225</wp:comment_author_IP>
			<wp:comment_date>2007-01-28 21:34:51</wp:comment_date>
			<wp:comment_date_gmt>2007-01-28 13:34:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>asian fisting</strong>

michael chen’s blog » blog archive » 实现类似于rails的web开发框架]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>明天回北京</title>
		<link>http://michael.nona.name/archives/112</link>
		<pubDate>Tue, 14 Jun 2005 13:53:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/112</guid>
		<description></description>
		<content:encoded><![CDATA[5月8号来广州，到现在一个月零六天。

我已经爱上了这个城市。

有理由，有原因：同学在这里上班，每个月拿3~4K的工资，住着70块每月的两室一厅（带厨房卫生间），朝九晚五的生活，双休带着女朋友到处逛，8毛钱一张电影票，公园门票1块钱……

原来生活可以这般悠闲。以前认为都是自己的心态，原来外界不给你压力的时候，人可以如此享受生活。

临走的时候，同学神神秘秘的对我说：在广州，男人容易变坏。

是么？

那么，我情愿变坏。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>112</wp:post_id>
		<wp:post_date>2005-06-14 21:53:41</wp:post_date>
		<wp:post_date_gmt>2005-06-14 13:53:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%98%8e%e5%a4%a9%e5%9b%9e%e5%8c%97%e4%ba%ac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>86</wp:comment_id>
			<wp:comment_author><![CDATA[eltonto]]></wp:comment_author>
			<wp:comment_author_email>eltonto@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://noone</wp:comment_author_url>
			<wp:comment_author_IP>61.144.67.146</wp:comment_author_IP>
			<wp:comment_date>2005-06-15 09:59:20</wp:comment_date>
			<wp:comment_date_gmt>2005-06-15 01:59:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我现在就在广州，请问哪儿有70块的房子啊？8毛的电影票和1块的公元票在哪儿弄?？？
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>87</wp:comment_id>
			<wp:comment_author><![CDATA[flyisland]]></wp:comment_author>
			<wp:comment_author_email>flyisland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://flyisland.blogbus.com</wp:comment_author_url>
			<wp:comment_author_IP>63.96.172.105</wp:comment_author_IP>
			<wp:comment_date>2005-06-15 11:46:42</wp:comment_date>
			<wp:comment_date_gmt>2005-06-15 03:46:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我也是在广州，呵呵，也从来没有听过有“咁大只蛤乸随街跳”，70元的房租？8毛的电影票和1块的公元票？还同时有女朋友？！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>88</wp:comment_id>
			<wp:comment_author><![CDATA[blueoxygen]]></wp:comment_author>
			<wp:comment_author_email>blueoxygen@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://spaces.msn.com/members/blueoxygencn</wp:comment_author_url>
			<wp:comment_author_IP>222.26.209.160</wp:comment_author_IP>
			<wp:comment_date>2005-06-15 13:39:54</wp:comment_date>
			<wp:comment_date_gmt>2005-06-15 05:39:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[70/month的房子？ 天堂……]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>89</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>211.94.135.4</wp:comment_author_IP>
			<wp:comment_date>2005-06-16 09:47:58</wp:comment_date>
			<wp:comment_date_gmt>2005-06-16 01:47:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[房子在花都，与人合住；

至于8毛的电影票和1块钱的公园票，我也搞不懂为什么，据说是公益性质的。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>90</wp:comment_id>
			<wp:comment_author><![CDATA[Calvin]]></wp:comment_author>
			<wp:comment_author_email>calviny@acmilan.com.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.191.14.131</wp:comment_author_IP>
			<wp:comment_date>2005-06-16 10:17:14</wp:comment_date>
			<wp:comment_date_gmt>2005-06-16 02:17:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[实在很难想象

这个年代 不可能有这么便宜的事情吧]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>91</wp:comment_id>
			<wp:comment_author><![CDATA[alin]]></wp:comment_author>
			<wp:comment_author_email>alin_ass@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.176.36.26</wp:comment_author_IP>
			<wp:comment_date>2005-06-16 17:24:54</wp:comment_date>
			<wp:comment_date_gmt>2005-06-16 09:24:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>96</wp:comment_id>
			<wp:comment_author><![CDATA[windyboy]]></wp:comment_author>
			<wp:comment_author_email>windyboy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.144.51.117</wp:comment_author_IP>
			<wp:comment_date>2005-06-22 14:45:59</wp:comment_date>
			<wp:comment_date_gmt>2005-06-22 06:45:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hehe
不知道你来过广州，我在广州，关于异步响应，或许可以聊聊
不过你回北京了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>104</wp:comment_id>
			<wp:comment_author><![CDATA[iiley]]></wp:comment_author>
			<wp:comment_author_email>iiley@sina.com</wp:comment_author_email>
			<wp:comment_author_url>http://spaces.msn.com/members/iiley/</wp:comment_author_url>
			<wp:comment_author_IP>218.19.106.119</wp:comment_author_IP>
			<wp:comment_date>2005-07-04 12:10:24</wp:comment_date>
			<wp:comment_date_gmt>2005-07-04 04:10:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这牛吹得，呵呵，广州简直被你说成天堂了。
我好期待变坏哦，可惜，来了一年多了，还是好男人。：（哈哈]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>107</wp:comment_id>
			<wp:comment_author><![CDATA[mondayw]]></wp:comment_author>
			<wp:comment_author_email>mondayw@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.147.249.217</wp:comment_author_IP>
			<wp:comment_date>2005-07-06 10:56:53</wp:comment_date>
			<wp:comment_date_gmt>2005-07-06 02:56:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[嗨，是无意中看到你的BLOG的，因为应聘工作的关系，想找一些J2EE的资料，没想GOOGLE把我带到你这里来了，看到是一个写随想的程序员，心有戚戚，就看了一下，呵呵，看到你写的关于广州的，不由哑然失笑，非常有意思，我喜欢。我在广州住了多年，已经是习惯了，但刚来时感觉可没这么好。也许人变了，环境也变了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>108</wp:comment_id>
			<wp:comment_author><![CDATA[mondayw]]></wp:comment_author>
			<wp:comment_author_email>mondayw@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.147.249.217</wp:comment_author_IP>
			<wp:comment_date>2005-07-06 10:57:46</wp:comment_date>
			<wp:comment_date_gmt>2005-07-06 02:57:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[嗨，是无意中看到你的BLOG的，因为应聘工作的关系，想找一些J2EE的资料，没想GOOGLE把我带到你这里来了，看到是一个写随想的程序员，心有戚戚，就看了一下，呵呵，看到你写的关于广州的，不由哑然失笑，非常有意思，我喜欢。我在广州住了多年，已经是习惯了，但刚来时感觉可没这么好。也许人变了，环境也变了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>113</wp:comment_id>
			<wp:comment_author><![CDATA[nsnboy]]></wp:comment_author>
			<wp:comment_author_email>nsnboy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://nsnboy.mblogger.cn</wp:comment_author_url>
			<wp:comment_author_IP>211.137.206.213</wp:comment_author_IP>
			<wp:comment_date>2005-07-19 17:20:56</wp:comment_date>
			<wp:comment_date_gmt>2005-07-19 09:20:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[70块每月的两室一厅?真的假的阿？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>158</wp:comment_id>
			<wp:comment_author><![CDATA[夕]]></wp:comment_author>
			<wp:comment_author_email>cedaronly@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://bunny.blogdriver.com</wp:comment_author_url>
			<wp:comment_author_IP>218.94.6.229</wp:comment_author_IP>
			<wp:comment_date>2005-09-01 08:41:34</wp:comment_date>
			<wp:comment_date_gmt>2005-09-01 00:41:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[貌似很不错的样子……]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>167</wp:comment_id>
			<wp:comment_author><![CDATA[Dennis]]></wp:comment_author>
			<wp:comment_author_email>xx@dennis.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.92.30.122</wp:comment_author_IP>
			<wp:comment_date>2005-09-09 09:07:59</wp:comment_date>
			<wp:comment_date_gmt>2005-09-09 01:07:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看得我实在是看不下去了. 不过我的同事给了一个正确的说法, 这个Blog 是 60 年代写的, 现在从别的主机上转到这里的. 
  p.s. 60 年代, 有 Blog 吗?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>爱心拯救程序员王俊</title>
		<link>http://michael.nona.name/archives/113</link>
		<pubDate>Tue, 28 Jun 2005 01:48:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/113</guid>
		<description></description>
		<content:encoded><![CDATA[有什么比生命更沉重？

有什么比帮助更可贵？

王俊，今年27岁，北京北方银证公司项目经理，是北京Java用户组（BJUG，<a href="http://www.bjug.org">http://www.bjug.org</a>）的核心会员，曾在BJUG的讨论会中进行了JMS、Tapestry等主题演讲，他在JavaEye的ID是"后山"，是 JavaEye成立之初的老注册会员和JavaEye高级会员（<a href="http://forum.javaeye.com/profile.php?mode=viewprofile&u=33">http://forum.javaeye.com/profile.php?mode=viewprofile&u=33</a>）。一个年轻人，有感兴趣的工作，不错的前途，还有一群可以随时交流技术的朋友，生活看起来平淡却充实。 

业余时间，王俊经常还利用blog写下自己生活和工作中的酸甜苦辣（<a href="http://befresh.blogbus.com">http://befresh.blogbus.com</a>），此外他还有一个并不富裕但却很温馨的家。

然而从今年二月份起，王俊的blog就再也没有更新过了，他也没有在BJUG的聚会和javaeye出现了，所有人都以为他出差去了。直到前天，惊闻他要换骨髓，才知道今年年初，王俊被查出患有“骨髓增生异常综合症”。

骨髓增生异常综合征目前认为是造血干细胞增殖分化异常所致的造血功能障碍。主要表现为外周血全血细胞减少，骨髓细胞增生，成熟和幼稚细胞有形态异常即病态造血。部分患者在经历一定时期的MDS后转化成为急性白血病；部分因感染、出血或其他原因死亡，病程中始终不转化为急性白血病。

这种病目前最有效的治疗手段是换骨髓。万幸的是，王俊的妹妹和他的骨髓配型一致，免疫系统的疾病发现治疗的越早，就越可能成功，他目前的身体状况还好，只要能更换骨髓，完全可以康复！但让他们一家望而却步的是，仅手术押金就需要20万，全部疗程视治疗效果可能需要30-100万。

王俊的家在浙江杭州千岛湖，父母都是农民，已然老迈且没有固定的经济收入，姐姐在当地出嫁，收入颇低，妹妹目前在北京读成人教育并在公司打工。王俊是家庭经济主要来源，他的病不仅掐断了家里唯一的经济来源，还要花上对他们而言是天文数字的钱来治病。

“文章千古事，得失寸心知”，这是王俊blog上的座右铭。细细翻看这个典型程序员的blog，就和他的人一样朴实无华，在那里满眼看到的都是对技术的孜孜追求。谁能想到一个如此活跃的头脑现在却被病魔折磨着。

生命是美好的，这世界每天都有若干悲剧发生，这次，大家每个人出一份力，这世界就会少一个悲剧，多一份美好，多一份欢笑。也许，你只是少吃一顿大餐，少买一瓶化妆品，少看一场演唱会，少买一件名牌服装，少玩一个月的网络游戏，少上一个月的网，但是你却可以为一个家庭托起一份生的希望！

<a href="http://befresh.bjug.org/"><img src="http://befresh.bjug.org/images/stories/help.gif" alt="爱心拯救程序员王俊" /></a>
<a href="http://befresh.bjug.org/"><img src="http://befresh.bjug.org/images/stories/help.gif" alt="爱心拯救程序员王俊" /></a>

请到<a href="http://befresh.bjug.org/">http://befresh.bjug.org/</a> 了解王俊以及爱心捐赠信息。

联合发起：

BJUG <a href="http://www.bjug.org">http://www.bjug.org</a><br />
CSDN <a href="http://www.csdn.net">http://www.csdn.net</a><br />
JavaEye <a href="http://www.csdn.net">http://www.javaeye.com</a><br />
JActionGroup <a href="http://www.csdn.net">http://www.jactiongroup.net/</a><br />
Huihoo <a href="http://www.csdn.net">http://www.huihoo.org</a><br />
RedSaga <a href="http://www.csdn.net">http://www.redsaga.com</a><br />
Matrix <a href="http://www.csdn.net">http://www.matrix.org.cn</a><br />
Blogbus <a href="http://www.csdn.net">http://www.blogbus.com</a> <br />
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>113</wp:post_id>
		<wp:post_date>2005-06-28 09:48:18</wp:post_date>
		<wp:post_date_gmt>2005-06-28 01:48:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%88%b1%e5%bf%83%e6%8b%af%e6%95%91%e7%a8%8b%e5%ba%8f%e5%91%98%e7%8e%8b%e4%bf%8a</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>103</wp:comment_id>
			<wp:comment_author><![CDATA[Sunshiny]]></wp:comment_author>
			<wp:comment_author_email>romejiang@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.140.233.55</wp:comment_author_IP>
			<wp:comment_date>2005-07-01 16:01:45</wp:comment_date>
			<wp:comment_date_gmt>2005-07-01 08:01:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你好，Michael Chen
  不好意思吧关于Buffalo的问题，发布到你的blog上～我找遍整个Buffalo的网站 也没有找到你的mail或者留言的地方，希望你能加个mail或者MSN什么的。
  在使用Buffalo过程中感觉非常好，Buffalo是一个设计思路清晰，开发使用简单的框架。
  在你的demo中发现可以使用bind。但使用后发现只能bind第一列数据，jheight="0" 或者 jheight="1"可以bind所有数据，但大于1就不行？这是否是个bug，你看看。
  我的MSN ： jinpxpAThotmail.com ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Buffalo1.1 dr 发布</title>
		<link>http://michael.nona.name/archives/115</link>
		<pubDate>Mon, 18 Jul 2005 09:30:16 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/115</guid>
		<description></description>
		<content:encoded><![CDATA[基本上实现了预期的构想，1.1中需要的功能都进行了扩充，包括Spring集成，绑定，自定义状态。

核心：<br />
* Spring 支持，已完成<br />
* 客户端兼容传统Burlap远程调用, 已完成<br />
* 添加同步调用支持，已完成<br />
* 可自定义异步调用时的动作，完成<br />

绑定(in very alpha state, just show demo only)：<br />
* 复选框，下拉列表框<br />
* 表格<br />
* 与JST集成<br />

文档及演示：<br />
* 改善的demo页面<br />
* buffalo重写的j2ee blueprints ajax演示<br />

欢迎各位使用！

下载：http://www.amowa.net/buffalo/download.html

http://www.amowa.net/buffalo/download/buffalo-1.1dr.zip

ps. 本版本是开发版本，文档很不充分，是为那些迫切等待1.1特别是Spring集成特性的项目准备的。在发行包中作了相关的例子，基本上都很简单，很容易上手。另外， http://groups-beta.google.com/group/amowa/ 是新开辟的专门讨论buffalo和amowa的论坛，有什么问题可以在这里提，也可以去那里。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>115</wp:post_id>
		<wp:post_date>2005-07-18 17:30:16</wp:post_date>
		<wp:post_date_gmt>2005-07-18 09:30:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>buffalo11-dr-%e5%8f%91%e5%b8%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_8dfbab59c83831d5b065c08946f6ec34</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_55a5bcbb5aa5400be89108a860e9a0c9</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>114</wp:comment_id>
			<wp:comment_author><![CDATA[berry]]></wp:comment_author>
			<wp:comment_author_email>berry_cs@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.212.11.22</wp:comment_author_IP>
			<wp:comment_date>2005-07-22 09:40:01</wp:comment_date>
			<wp:comment_date_gmt>2005-07-22 01:40:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵，反序列化中BuffaloReply.prototype.doString的问题修正了
我正在Buffalo 1.0的基础上尝试作自动生成b/s对任意关系型数据的基本操作（增、删、改、分页浏览），
buffalo的js真是让我打开眼界，原来javascript可以这么强的！
坚信楼主的工作是非常有意义的，热切关注中...
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>115</wp:comment_id>
			<wp:comment_author><![CDATA[jasonzhang]]></wp:comment_author>
			<wp:comment_author_email>z_jordon@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.101.157.253</wp:comment_author_IP>
			<wp:comment_date>2005-07-25 09:36:44</wp:comment_date>
			<wp:comment_date_gmt>2005-07-25 01:36:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[运行“猜数字游戏”时，为什么老是显示“undefined。你已经猜了undefined次”？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>116</wp:comment_id>
			<wp:comment_author><![CDATA[jasonzhang]]></wp:comment_author>
			<wp:comment_author_email>z_jordon@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.101.157.253</wp:comment_author_IP>
			<wp:comment_date>2005-07-25 10:14:16</wp:comment_date>
			<wp:comment_date_gmt>2005-07-25 02:14:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[BuffaloServiceExporter中这些代码是想干嘛呢？
public void afterPropertiesSet() throws Exception {
	    String key;
        Object value;
        for(Iterator it = services.keySet().iterator(); it.hasNext();) {
            
            key = (String)it.next();
            value = services.get(key);

            services.put(key, value);
        }
}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>122</wp:comment_id>
			<wp:comment_author><![CDATA[Zer0_x]]></wp:comment_author>
			<wp:comment_author_email>orange200310@yahoo.com.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.76.2.122</wp:comment_author_IP>
			<wp:comment_date>2005-08-01 09:32:09</wp:comment_date>
			<wp:comment_date_gmt>2005-08-01 01:32:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[支持 。。终于出新版本了 。。终于可以和spring接合了。。。。 ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>127</wp:comment_id>
			<wp:comment_author><![CDATA[squall]]></wp:comment_author>
			<wp:comment_author_email>squall_sa@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.232.0.89</wp:comment_author_IP>
			<wp:comment_date>2005-08-05 12:31:10</wp:comment_date>
			<wp:comment_date_gmt>2005-08-05 04:31:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我给你发了邮件请查收]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>184</wp:comment_id>
			<wp:comment_author><![CDATA[chen4w]]></wp:comment_author>
			<wp:comment_author_email>chen4w@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.212.11.22</wp:comment_author_IP>
			<wp:comment_date>2005-09-22 09:17:50</wp:comment_date>
			<wp:comment_date_gmt>2005-09-22 01:17:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[建议：buffalo是否可以考虑增加请求的录制和回放功能，这样，基于buffalo的应用就可以不依赖http测试工具，
完成自身的压力测试、并发测试]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Why NOT javascript?</title>
		<link>http://michael.nona.name/archives/116</link>
		<pubDate>Fri, 26 Aug 2005 01:40:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/116</guid>
		<description></description>
		<content:encoded><![CDATA[我很奇怪，为什么大多数的web框架或者开发平台都试图将javascript屏蔽给开发者，以便让丝毫不懂javascript的开发者能够编写适合框架或者平台特性的应用。这样的例子很多，典型的，WEB页面的校验，Struts便集成到了自己的validation文件中，开发者不用编写javascript就能实现web表单的验证。同样，JSValidation也是完成了类似的工作。

然而，在WEB2.0时代，这种努力将会变得毫无意义。当用户体验上升成为一个优先级较高的需求时，javascript的重要性就凸现出来。用户希望更多的操作能够在同一个页面完成（in-page operation），而不是更多的表单提交刷新页面；用户希望能够在页面上拖来拽去实现自定义的页面布局，这用典型的web应用方式简直不可能实现。这个时候如果还依然试图屏蔽javascript, 试图希望不懂javascript的开发者来开发这种新型应用，简直就像不懂java而来开发J2EE（哦，现在叫Java EE）一样滑稽。

当然，使用javascript并不表示所有的js都重头开始写；已经有相当多的成熟的javascript库可供使用，这些库涵盖了web常用组件，web特效，远程调用等诸多方面，适当采用这些库，会让web开发更容易。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>116</wp:post_id>
		<wp:post_date>2005-08-26 09:40:49</wp:post_date>
		<wp:post_date_gmt>2005-08-26 01:40:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>why-not-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>187</wp:comment_id>
			<wp:comment_author><![CDATA[zigzag]]></wp:comment_author>
			<wp:comment_author_email>zigzag.chen@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://spaces.msn.com/members/zigzagchen</wp:comment_author_url>
			<wp:comment_author_IP>59.137.211.248</wp:comment_author_IP>
			<wp:comment_date>2005-09-24 21:34:52</wp:comment_date>
			<wp:comment_date_gmt>2005-09-24 13:34:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[嗯，同意以面向对象的思路重新审视JavaScript的看法。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>168</wp:comment_id>
			<wp:comment_author><![CDATA[纯月]]></wp:comment_author>
			<wp:comment_author_email>danny_xcz@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.csdn.net/danny_xcz</wp:comment_author_url>
			<wp:comment_author_IP>210.22.200.66</wp:comment_author_IP>
			<wp:comment_date>2005-09-09 15:54:56</wp:comment_date>
			<wp:comment_date_gmt>2005-09-09 07:54:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[屏蔽javascript的另一个作用在于，把共性的东西封装起来，否则xdoclet对validate得支持，或者GUI开发工具对webform得设计便无从入手。

xajax是一个php得ajax开发框架。它把客户端的响应也封装起来

客户端


php端
function multiply($x, $y)
{
	$objResponse = new xajaxResponse();
	$objResponse-&gt;addAssign("z", "value", $x*$y);
	return $objResponse-&gt;getXML();
}

我看了您在buffalo里面的设计，基本上还是返回结果由js操纵部署到dhtml里面。那如果一个组件例如一个select在很多地方用到，那不是这一段javascript要copy,paste很多次么？
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>144</wp:comment_id>
			<wp:comment_author><![CDATA[大郎]]></wp:comment_author>
			<wp:comment_author_email>iexper@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.iexper.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP>218.204.129.77</wp:comment_author_IP>
			<wp:comment_date>2005-08-26 09:46:55</wp:comment_date>
			<wp:comment_date_gmt>2005-08-26 01:46:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[在GOOGLE的个人主页中就是自由拖拉的。很方便。
如果不是AJAX应用的出现，可能更多的人会把JS遗忘吧。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>145</wp:comment_id>
			<wp:comment_author><![CDATA[大郎]]></wp:comment_author>
			<wp:comment_author_email>iexper@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.iexper.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP>218.204.129.77</wp:comment_author_IP>
			<wp:comment_date>2005-08-26 09:47:36</wp:comment_date>
			<wp:comment_date_gmt>2005-08-26 01:47:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[外，上次见你在JAVAEYE的关于AJAX的讨论很精彩。赞一下。：）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>147</wp:comment_id>
			<wp:comment_author><![CDATA[清风]]></wp:comment_author>
			<wp:comment_author_email>paradise.qingfengATgmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.donews.net/changzheng</wp:comment_author_url>
			<wp:comment_author_IP>61.135.152.194</wp:comment_author_IP>
			<wp:comment_date>2005-08-26 18:24:00</wp:comment_date>
			<wp:comment_date_gmt>2005-08-26 10:24:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[AJAX的出现，终于把Javascript扶正了:)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>148</wp:comment_id>
			<wp:comment_author><![CDATA[清风]]></wp:comment_author>
			<wp:comment_author_email>aaa</wp:comment_author_email>
			<wp:comment_author_url>http://www.donews.net/changzheng</wp:comment_author_url>
			<wp:comment_author_IP>211.155.140.145</wp:comment_author_IP>
			<wp:comment_date>2005-08-26 21:40:08</wp:comment_date>
			<wp:comment_date_gmt>2005-08-26 13:40:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://blog.donews.com/changzheng/archive/2005/08/26/528104.aspx

写出你的癖好吧：）接力棒交给你了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>154</wp:comment_id>
			<wp:comment_author><![CDATA[AM]]></wp:comment_author>
			<wp:comment_author_email>am@am.am</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.64.200.44</wp:comment_author_IP>
			<wp:comment_date>2005-08-28 20:25:00</wp:comment_date>
			<wp:comment_date_gmt>2005-08-28 12:25:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Javascript好啊，提升了浏览器的功用。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>156</wp:comment_id>
			<wp:comment_author><![CDATA[weifeng365]]></wp:comment_author>
			<wp:comment_author_email>weifeng365@cnjm.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.221.235.90</wp:comment_author_IP>
			<wp:comment_date>2005-08-31 11:56:49</wp:comment_date>
			<wp:comment_date_gmt>2005-08-31 03:56:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我想请教一下：在ajax中，从web页面中如果传递的参数是中文，在服务器端得到的是乱码，即使在服务器端设置了httpRequest.setCharacterEncoding("GB2312") ;也没有用，但是我发现你的Buffalo中解决了这个问题，请问应该怎么解决？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>576</wp:comment_id>
			<wp:comment_author><![CDATA[ulation]]></wp:comment_author>
			<wp:comment_author_email>xcyhappy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.106.154.133</wp:comment_author_IP>
			<wp:comment_date>2005-12-29 19:21:32</wp:comment_date>
			<wp:comment_date_gmt>2005-12-29 11:21:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[javascript开发的一些缺点不容忽视：
1，安全性，Browser内完成的数据一致性check是没有意义的，Server端必须再做一遍check。
2，开发便利性，javascript不好调试，不好维护。
3，可移植性，当然现在这个问题不大。
浏览器大战的年代，比如Netscape，不同版本支持的文档对象结构不同，文档的写法是：IE4以上支持、Netscape6以上支持，Netscape4.1宣布支持但是实际不支持，Netscape4.7宣布支持但是实现的有Bug，诸如此类，任何架构设计都不希望搅和这摊子浑水的。
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>One Page, One Application</title>
		<link>http://michael.nona.name/archives/117</link>
		<pubDate>Fri, 09 Sep 2005 07:33:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/117</guid>
		<description></description>
		<content:encoded><![CDATA[前言：这篇文章本应该在一个月前就写出来，但是因为种种原因，腹稿打了数十遍，现在才有时间提笔来写。文中某些观点相对目前的web应用比较前卫，阅读者应当根据自己应用的具体情况，对此文进行批判的阅读。

<strong>一 定义</strong>

One Page, One Application(后面缩写为OPOA，或者1P1A)， 含义很简单：一个页面就是一个应用。在众多的基于Web的MIS系统中，没有人关心页面的组织形式；大多数稍微复杂的MIS系统，都采用分祯(Frame)的方式来组织页面，这样，在进行业务操作的时候，url的变化表现在一个框架页面内，从浏览器的地址看起来，只有一个地址；更有甚者，一些应用干脆弹出一个去掉了浏览器菜单、工具条、地址栏、状态栏的窗口（比如招商银行、民生银行的网上银行系统），连地址都看不见。因此，一个页面就是一个应用，从用户的角度来说，对于操作型系统，是一种非常自然的体现。用户无需了解每一个具体的操作对应的地址是什么。

这种设计背后的含义实际是：是希望由程序来控制用户的行为，还是反过来。在操作型系统中，每一步的操作往往被业务含义严格定义，无论是应用的设计者，还是其使用者，都希望在一种受控的状况下来进行操作。例如，一个审批动作，用户更希望是通过一个按钮来触发，而不是访问类似于/approve.action?itemid=123的方式。

<strong>二 场景</strong>

显然，OPOA的设计只能针对那些对URL不敏感的系统，或者说操作型系统。绝大多数MIS系统都属于这一范畴，Email系统也是这一范畴，其他领域，如监控系统，聊天室等都可以采用这种思路。反面的例子是，对于内容型系统，如新闻系统，Blog系统，论坛系统，用户更希望能够通过一个明确的URL来定位页面内容，搜索引擎也喜欢这种地址。这种应用需要的是一个合理，易懂，明确的地址。

<strong>三 设计与实现</strong>

大多数MIS系统，无论是有意识或者无意识，都遵循了OPOA的思路。要么采用框架，要么采用弹出窗口来屏蔽URL的直接访问。实现上也很简单，这里就不再赘述了。注意到上述的OPOA地实现只是对用户而言，看起来好像是一个页面一样，但实际上还是有众多的action， page在后面工作。

下面我要说的一种实现是，采用AMOWA/AJAX技术来实现真正意义上的OPOA. 简而言之：主页面（或者称布局页面）只加载一次，其他的操作页面通过AMOWA/AJAX技术来加载，并将其中的操作脚本与布局内容分开，最后进行展示。这个设计的原型在buffalo-1.1dr版本中。细心的开发者一定能注意到，在切换不同demo的时候，只是调用了一个switchPage函数，将不同的页面进行读取并显示。demo的演示速度相当快，因为每次只读取一小部分页面；如果加上缓存机制，将页面进行缓存，那么更快了。

首先存在一个布局页面，这个页面定义了一个应用大致的外观，（例如，大部分MIS系统按照上中下三栏，中间部分左右两栏分别为顶部logo, 操作菜单，具体操作内容，底部状态栏）。用你喜欢的网页编辑工具，将这个页面设计美观，然后按照应用的要求，将页面进行拆分。此时的拆分不用Frame了，只需要在不同的部位加上&lt;div id="..."&gt;就可以。

然后在主页面定义一个函数，例如switchPage, 将这个函数使用在需要进行页面切换的地方。在buffalo的sample中，switchPage函数这样实现：

	function switchPage(page) {
		pageBuffalo.remoteCall("pageService.loadPage", [page], function(reply) {
			var pageObj = reply.getResult();
			Buffalo.getElementById("body").innerHTML = pageObj.html;
			if (pageObj.script != null || pageObj.script != "") {
				execScript(pageObj.script);
			}
		});
	}

你可以用任意你喜欢的AJAX/Amowa引擎来做这件事情。

剩下的工作都可以想象了。你可以将web应用的网页资源全部用html编写，并放在一个不为人知的地方，而通过pageService来读取他们；你可以任意组织你的应用外观，更加自如的切换他们。应用的URL地址永远只有真正的一个，你的应用也要比别人快很多，因为只加载那么一小块内容。

<strong>四 小结</strong>

AJAX/AMOWA的兴起为我们开阔了很多视野。比起原来的web框架，这种OPOA的方式能够更快，减少更多的编码量，并提供更好的用户体验。当然，上文中提出的只是一个原型实现，如果尝试自行实现，可能更多的东西需要考虑，如安全，缓存，事件回调机制，内存管理等等。但这将是一个方向，一个可以提高开发体验与用户体验的方向。

<em>补充：
在buffalo的发展规划中，基于OPOA原则的页面框架将作为重要组成部分被加入。</em>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>117</wp:post_id>
		<wp:post_date>2005-09-09 15:33:40</wp:post_date>
		<wp:post_date_gmt>2005-09-09 07:33:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>one-page-one-application</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>191</wp:comment_id>
			<wp:comment_author><![CDATA[RAY]]></wp:comment_author>
			<wp:comment_author_email>overlogo@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.7.43.194</wp:comment_author_IP>
			<wp:comment_date>2005-09-26 17:18:32</wp:comment_date>
			<wp:comment_date_gmt>2005-09-26 09:18:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[读了你的文章，很出色，感觉你是一个很有思想的人，我刚刚接触JSP，有一个问题想请教一下，还望赐教。

小弟做的一个JSP页面，经测试JAVA部分能正常执行，但其中的JAVASCRIPT脚本无法执行，每次运行到脚本部分就跳过了，请高手指点一下。判断条件部分没有问题，已经测试通过，脚本部分我曾经放在IF条件外面（ 与之间 ）根本不涉及JAVA语言部分，脚本仍然无法执行，按照常理，脚本放在最前面应该首先执行，但不知道什么原因，总是跳过直接执行JAVA语句部分，不知道JSP与JAVASCRIPT之间是否有执行的优先级问题，如果将所有的JAVA代码删掉 ，脚本可以执行，该页面的功能是处理上一个页面中表单提交的数据，并将其存入数据库。JSP页面编译能正常通过，只是脚本不执行。

代码如下：

 
 
 
 
 
 
无标题文档 
 




 

 

 
  
 
var truthBeTold = window.confirm("该用户ID已经存在，单击“确定”系统将仍然使用原ID,并将您所选择控制的党组织添加到原ID所控制的党组织范围内，单击“取消”返回。"); 
if (truthBeTold==false) 
{ 
 window.location.href='admin_add.jsp'; 
} 
 

  
   

 
 
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>192</wp:comment_id>
			<wp:comment_author><![CDATA[RAY]]></wp:comment_author>
			<wp:comment_author_email>overlogo@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.7.43.194</wp:comment_author_IP>
			<wp:comment_date>2005-09-26 18:34:22</wp:comment_date>
			<wp:comment_date_gmt>2005-09-26 10:34:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[抱歉，我粘上的原代码不知道为什么不能正常在您的BLOG中显示，只有脚本部分显示了出来。JSP部分只显示成了“无标题文档 ”。
我把源代码粘到我的博客上了，希望您能过去看一下，如果有时间希望您能帮助解决，在这里或是在我的博客上留言均可。万分感谢，如果其他高人知道原因的也请不吝赐教。
我的博客地址是：
http://rayspace.blogchina.com/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>194</wp:comment_id>
			<wp:comment_author><![CDATA[shiqingxiao]]></wp:comment_author>
			<wp:comment_author_email>shiqingxiao@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.148.148.4</wp:comment_author_IP>
			<wp:comment_date>2005-09-27 19:00:47</wp:comment_date>
			<wp:comment_date_gmt>2005-09-27 11:00:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, Michael
從看到你的buffalo的demo的時候﹐我就注意到了swithPage這個js function,
因為我也在嘗試用b/s結構來實現MIS系統﹐所以我就想用switchPage的方式來切換用戶操作的頁面﹐但是在這里我遇到了一個問題﹕

我是分左右兩個div﹐左邊的div根據登錄用戶的權限顯示他能操作的系統名稱﹐如BOM系統﹐業務系統﹔USER點擊左邊的系統名稱﹐右邊的div里顯示再顯示該用戶可操作的程式清單﹐如基礎資料建立﹑報表列印等程式link﹔USER點擊這些程式link﹐系統則彈出一個新的window來供USER使用具體的程式。
在顯示左邊DIV和右邊DIV時﹐因為其內容是動態獲取的(根據用戶的權限), 而buffalo里的switchPage模式一般都是包含靜態文件(.html), 不知這里應如何解決﹖

我想了一些方法﹐但都覺得不妥﹐還請指點﹐謝謝。
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>188</wp:comment_id>
			<wp:comment_author><![CDATA[zigzag]]></wp:comment_author>
			<wp:comment_author_email>zigzag.chen@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://spaces.msn.com/members/zigzagchen</wp:comment_author_url>
			<wp:comment_author_IP>59.137.211.248</wp:comment_author_IP>
			<wp:comment_date>2005-09-24 21:40:33</wp:comment_date>
			<wp:comment_date_gmt>2005-09-24 13:40:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我的意见是One Page, One Use Case，

 当然在不同应用中，UseCase的划分力度不同。
但是基本上一个UseCase代表了用户在系统中完成一件事情。
在这个过程中，由于数据的相关性比较强，可以在一个页面中最大程度的共享通用数据。
而又不会使得整个应用的页面控制过于集中。

综合利用了Ajax无页面刷新与传统Web分页方式的优点，你觉得呢？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>170</wp:comment_id>
			<wp:comment_author><![CDATA[davidchu]]></wp:comment_author>
			<wp:comment_author_email>davidzhu.4.2@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>166.111.216.40</wp:comment_author_IP>
			<wp:comment_date>2005-09-09 23:18:09</wp:comment_date>
			<wp:comment_date_gmt>2005-09-09 15:18:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Each page is valuable.
需要在浏览器端开发的这一层pageService，如果要求比较高的话，js会非常庞大，如果没有各种各样的库支持开发起来成本太高了。而且客户端开发往往被忽视。如果有像prototype.js一样优秀的js支持，会给客户端开发带来新的生命力。

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>172</wp:comment_id>
			<wp:comment_author><![CDATA[songlai]]></wp:comment_author>
			<wp:comment_author_email>qsonglai@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.songlai.com</wp:comment_author_url>
			<wp:comment_author_IP>218.62.29.139</wp:comment_author_IP>
			<wp:comment_date>2005-09-10 13:01:21</wp:comment_date>
			<wp:comment_date_gmt>2005-09-10 05:01:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[opoa 的说法真的很好，我也在尝试着仿照你的buffalo-1.1dr在做一个应用，过程中也确实出现了一些问题，页面表现上不是非常灵活。
例如我让整个页面不出现滚动条，而是只让显示读取出的数据的那个div有滚动条做起来就非常困难，应该说还没有实现，不知道有什么更好的方法来让页面适应不同分辨率的浏览器呢？
虽然技术要好，但客户看的只是一个页面表现]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>173</wp:comment_id>
			<wp:comment_author><![CDATA[songlai]]></wp:comment_author>
			<wp:comment_author_email>qsonglai@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.songlai.com</wp:comment_author_url>
			<wp:comment_author_IP>218.62.29.139</wp:comment_author_IP>
			<wp:comment_date>2005-09-10 13:57:48</wp:comment_date>
			<wp:comment_date_gmt>2005-09-10 05:57:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://www.songlai.com/test/
里面详细写了我遇到的问题以及我的努力的结果。。。。

有谁有好的解决方法吗？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>175</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>211.99.162.195</wp:comment_author_IP>
			<wp:comment_date>2005-09-11 21:38:31</wp:comment_date>
			<wp:comment_date_gmt>2005-09-11 13:38:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&lt;div style="width:500px;height:500px;<strong>overflow:auto</strong>"&gt;content goes here
&lt;/div&gt;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>177</wp:comment_id>
			<wp:comment_author><![CDATA[jasonzhang]]></wp:comment_author>
			<wp:comment_author_email>z_jordon@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.101.157.253</wp:comment_author_IP>
			<wp:comment_date>2005-09-12 09:52:16</wp:comment_date>
			<wp:comment_date_gmt>2005-09-12 01:52:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我担心您的这种开发方式会把AJAX用滥了。按我的理解您的这种方式就是页面上的数据都采用主动获取的方式，也就是‘拉’的方式，但是一些页面还是比较适合采用服务器‘推’的方式的，比如：
1 数据量大而且复杂，但在页面上表现却比较简单：
 拉的方式：在服务器和客户端之间传输大量数据，然后客户端再解析显示。
 推的方式：在服务器端对这些数据进行解析然后再把少量的数据往客户端‘推’呢。
2 在页面上需要获取许多不同的数据：
 拉的方式：在客户端多次获取，就是说通过多次服务器和客户端的交互来完成，
 推的方式：服务器端一次性的往客户端‘推’这些数据。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>195</wp:comment_id>
			<wp:comment_author><![CDATA[shiqingxiao]]></wp:comment_author>
			<wp:comment_author_email>shiqingxiao@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.148.148.4</wp:comment_author_IP>
			<wp:comment_date>2005-09-27 19:02:16</wp:comment_date>
			<wp:comment_date_gmt>2005-09-27 11:02:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, Michael
從看到你的buffalo的demo的時候﹐我就注意到了swithPage這個js function,
因為我也在嘗試用b/s結構來實現MIS系統﹐所以我就想用switchPage的方式來切換用戶操作的頁面﹐但是在這里我遇到了一個問題﹕

我是分左右兩個div﹐左邊的div根據登錄用戶的權限顯示他能操作的系統名稱﹐如BOM系統﹐業務系統﹔USER點擊左邊的系統名稱﹐右邊的div里顯示再顯示該用戶可操作的程式清單﹐如基礎資料建立﹑報表列印等程式link﹔USER點擊這些程式link﹐系統則彈出一個新的window來供USER使用具體的程式。
在顯示左邊DIV和右邊DIV時﹐因為其內容是動態獲取的(根據用戶的權限), 而buffalo里的switchPage模式一般都是包含靜態文件(.html), 不知這里應如何解決﹖

我想了一些方法﹐但都覺得不妥﹐還請指點﹐謝謝。
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>198</wp:comment_id>
			<wp:comment_author><![CDATA[Michael]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://michael.nona.name</wp:comment_author_url>
			<wp:comment_author_IP>211.94.135.4</wp:comment_author_IP>
			<wp:comment_date>2005-09-28 15:04:41</wp:comment_date>
			<wp:comment_date_gmt>2005-09-28 07:04:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[to shiqingxiao :

你提了一个很好的问题。但在当前的buffalo版本中，这个问题不能得到直接的解决，但还是有办法的：即直接在客户端通过AJAX抓取生成后的动态页面，例如JSP，或者xxx.action/xxx.do等。现在的switchPage方法过于简单，渲染页面的工作也过于简单，需要更多的处理。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>446</wp:comment_id>
			<wp:comment_author><![CDATA[elephi]]></wp:comment_author>
			<wp:comment_author_email>elephi.dong@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.186.119.217</wp:comment_author_IP>
			<wp:comment_date>2005-10-17 20:44:09</wp:comment_date>
			<wp:comment_date_gmt>2005-10-17 12:44:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[OpOa说的非常好。我现在就是充分地，大量地使用了 switchPage, 还自己写了 switchPart 替换页面上指定的内容。
确实非常直接。正在做的一个复杂网站，就一个 index.jsp 其他的全部都是 html 
不管异步带来的是不是用户感觉的变化，起码数据传输量比传输整个页面少了很多。
至于js的问题，我觉得，能充分利用，就充分利用。js 毕竟还是很强大的。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>569</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen&#8217;s Blog  &raquo; Blog Archive   &raquo; Ajax/Amowa框架Buffalo 1.2发布！]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://michael.nona.name/archives/124</wp:comment_author_url>
			<wp:comment_author_IP>211.144.143.133</wp:comment_author_IP>
			<wp:comment_date>2005-12-27 16:40:16</wp:comment_date>
			<wp:comment_date_gmt>2005-12-27 08:40:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] o的API更加简单！）；也可以在小型应用中承担页面切换的任务，基于OPOA的概念，让buffalo为你管理页面切换；在大型应用中，buffalo也可以在其中承担]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>582</wp:comment_id>
			<wp:comment_author><![CDATA[longware]]></wp:comment_author>
			<wp:comment_author_email>longware@126.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.sanv.org</wp:comment_author_url>
			<wp:comment_author_IP>218.108.45.163</wp:comment_author_IP>
			<wp:comment_date>2006-01-06 18:21:55</wp:comment_date>
			<wp:comment_date_gmt>2006-01-06 10:21:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[很欣赏你的想法，如果真这样做了，有点象将CS程序web化了，UI变的非常友好。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3993</wp:comment_id>
			<wp:comment_author><![CDATA[kevin]]></wp:comment_author>
			<wp:comment_author_email>kevin@google.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>125.96.82.22</wp:comment_author_IP>
			<wp:comment_date>2006-06-12 16:09:27</wp:comment_date>
			<wp:comment_date_gmt>2006-06-12 08:09:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Look this OPOA.

jsLINB--国人的一个完整Ajax/web2.0技术框架，OPOA........

[B]jsLINB--国人写的一个完整web2.0技术框架。jsLINB的在线demo：http://www.linb.net/linb/，里面包括变量类型检测、强制类型变量、javascript线程实现、完美OO模型、基于dom id的事件系统实现、dom元素的“随动”实现、高级托拽、sorted grid控件、tree grid控件等等。[/B]

[URL=http://www.linb.net/linb/#102002]jsLINB框架图[/URL]
[URL=http://www.linb.net/linb/#102101001]变量类型检测[/URL]
[URL=http://www.linb.net/linb/#102101002]强制类型变量[/URL]
[URL=http://www.linb.net/linb/#102101003]javascript线程实现[/URL]
[URL=http://www.linb.net/linb/#102101103]36位guid[/URL]
[URL=http://www.linb.net/linb/#102105001]基于dom id的事件系统实现[/URL]
[URL=http://www.linb.net/linb/#102105002]dom元素的“随动”实现[/URL]
[URL=http://www.linb.net/linb/#102106002001]基本拖拽[/URL]
[URL=http://www.linb.net/linb/#102106002002]限制拖拽[/URL]
[URL=http://www.linb.net/linb/#102106002003]拖拽任何domnode[/URL]
[URL=http://www.linb.net/linb/#102106002004]网格拖拽[/URL]
[URL=http://www.linb.net/linb/#102106002005]停靠拖拽[/URL]
[URL=http://www.linb.net/linb/#102106002006]多handle拖拽[/URL]
[URL=http://www.linb.net/linb/#102106002007]图标代理拖拽[/URL]
[URL=http://www.linb.net/linb/#102106002008]多目标drop[/URL]
[URL=http://www.linb.net/linb/#102109001]快速html生成[/URL]
[URL=http://www.linb.net/linb/#102109002]DOM控制封装[/URL]
[URL=http://www.linb.net/linb/#102109004]基于线程的特效[/URL]
[URL=http://www.linb.net/linb/#102010]直接调用[/URL]
[URL=http://www.linb.net/linb/#102011]完美OO实现[/URL]
[URL=http://www.linb.net/linb/#203004003]Treebar控件[/URL]
[URL=http://www.linb.net/linb/#203005003001]sorted grid控件[/URL]
[URL=http://www.linb.net/linb/#203005003002]tree grid控件[/URL]
[URL=http://www.linb.net/linb/#203007003]window控件[/URL] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16465</wp:comment_id>
			<wp:comment_author><![CDATA[tiyi]]></wp:comment_author>
			<wp:comment_author_email>tiyilon@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.79.56.157</wp:comment_author_IP>
			<wp:comment_date>2006-10-20 00:01:47</wp:comment_date>
			<wp:comment_date_gmt>2006-10-19 16:01:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这两天我正是在折腾那么一种东西.不过最后觉得维护,开发的效率都将降低.一个应用还好.多个应用也通过一页来切,弊端较多.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37409</wp:comment_id>
			<wp:comment_author><![CDATA[shibc]]></wp:comment_author>
			<wp:comment_author_email>bcshi@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.195.166.15</wp:comment_author_IP>
			<wp:comment_date>2007-03-14 10:10:29</wp:comment_date>
			<wp:comment_date_gmt>2007-03-14 02:10:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[实际上 我觉得pageswith的概念，实际上是将页面控制器的功能转移到客户端（利用js实现），这样可以在大框架的不变的前提下，进行局部页面的刷新，带来相当好的用户体验。
但是控制流分散到各个网页中，在维护方面可能很麻烦。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>62218</wp:comment_id>
			<wp:comment_author><![CDATA[sacred]]></wp:comment_author>
			<wp:comment_author_email>sacred02@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://hi.baidu.com/javaroad</wp:comment_author_url>
			<wp:comment_author_IP>60.28.119.64</wp:comment_author_IP>
			<wp:comment_date>2007-11-29 11:02:51</wp:comment_date>
			<wp:comment_date_gmt>2007-11-29 03:02:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我们现在项目就是使用OPOA的技术, 自己对Dojo封闭后实现OPOA的. 性能跟界面友好是不用说的,但在实现的过程中,也发现有些东西太麻烦了. 例如:页面元素唯一,js函数名唯一, JS加载问题, 同步机制, 回调等……都是比较麻烦。不过通过封装了Dojo核心代码，节省了自己实现的功能。但个人感觉起来，将来维护起来压力会比较大！

总的来说，客户体验是提高了。但维护跟代码量也加重了[第一次尝试用OPOA技术，需要探索的地方还有很多]！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>软件不是蓝领做的事情</title>
		<link>http://michael.nona.name/archives/118</link>
		<pubDate>Tue, 27 Sep 2005 03:04:05 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/118</guid>
		<description></description>
		<content:encoded><![CDATA[昨天中午的时候，项目组的另外一个小组的同志下楼跟我讨论关于联机报表系统的相关设计。报表系统是我年初设计的，统一了批量报表与联机报表的API，程序员能够无差别的进行报表开发。现在多了一个需求：所有的页面上联机报表的显示统统加上Excel导出功能，并能够进行模板切换。这个需求说来轻巧，但是工程庞大：整个系统2000多张页面要进行报表输出！经过约一个小时的讨论，我提出了大致的解决思路，然后重新说明了现有报表的设计结构。他们终于能够兴冲冲的跑上楼做详细设计了。按照他们的最初的想法以及现有的编码规范，需要编写2000多个BO, DAO, 以及对应的Action; 而经过讨论后的设计，将这一部分变化独立开来，只需要进行一组独立功能的开发，其他的，只需要在页面上加一个小小的链接即可。

嗯，系统上线了，是不是仅仅会编码的人员参与维护就可以了呢？事实不是这样。在后期，却要求相关人员具备更强的能力——因为小小的改动就会影响整个系统——只有相关人员具备足够丰富的经验才可以。从各种系统的开发经验来说，编码从来不是项目的瓶颈——改动才是。一旦需求确定了，编码框架确定了，一个高级程序员花一个下午便可以做出代码生成器，一下生成数以千计的各种文件。因此，在真正形成规模的系统中，软件蓝领的存在毫无意义。在我们这个庞大的系统中，每个人——对，每个人，都或多或少，无论是明显指派的还是隐含的，都参与了业务的设计。不存在纯粹的编码人员。后果便是——那些设计不好的，或者编码不过关的，成为后期维护的工作所在。

无独有偶，晚上回公司培训，另外一个项目的PM跑过来问我：有人没？我说，要啥样的？他说："懂JavaScript, HTML的。新招来的那些学生水平不行，得要个高水平的带一带。"我想，这样的人还好找。"还得懂Java，还有FreeMarker，最好有架构的思路。" 我呆了。这分明是找一个高级程序员嘛。这样的人，哪里都需要。BJUG的maillist上，每周都会有两到三封招聘的邮件。这是一个需要高水平程序员的时代，而不是需要蓝领的时代。

软件外包也许需要软件蓝领，我不清楚相关的运作机制，因此不便妄下定论。但是，作为一个喜爱编程的程序员，谁又甘心自己永远处于编码的位置呢？从<a href="http://blog.donews.com/keso/archive/2005/08/14/508217.aspx">Keso的blog</a>上看的，几乎所有的web2.0项目都是一个always beta的项目；然而，我却可以说，几乎所有的大型的项目都是always beta的状态，这是当前客户多变的需求引起的。这种情况下，需要的软件开发者具备更丰富的技能和经验。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>118</wp:post_id>
		<wp:post_date>2005-09-27 11:04:05</wp:post_date>
		<wp:post_date_gmt>2005-09-27 03:04:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%af%e4%bb%b6%e4%b8%8d%e6%98%af%e8%93%9d%e9%a2%86%e5%81%9a%e7%9a%84%e4%ba%8b%e6%83%85</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>196</wp:comment_id>
			<wp:comment_author><![CDATA[jasonzhang]]></wp:comment_author>
			<wp:comment_author_email>z_jordon@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.101.157.253</wp:comment_author_IP>
			<wp:comment_date>2005-09-28 09:10:40</wp:comment_date>
			<wp:comment_date_gmt>2005-09-28 01:10:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[快国庆了，祝你国庆快乐^_^。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>199</wp:comment_id>
			<wp:comment_author><![CDATA[ChaSha]]></wp:comment_author>
			<wp:comment_author_email>sshw2sfc@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>210.82.77.237</wp:comment_author_IP>
			<wp:comment_date>2005-09-28 16:18:31</wp:comment_date>
			<wp:comment_date_gmt>2005-09-28 08:18:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[sorry, I cann't type chinese. Heppy GuoQing festavel]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>208</wp:comment_id>
			<wp:comment_author><![CDATA[oii]]></wp:comment_author>
			<wp:comment_author_email>xiangtool@msn.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.107.120.100</wp:comment_author_IP>
			<wp:comment_date>2005-10-04 14:13:05</wp:comment_date>
			<wp:comment_date_gmt>2005-10-04 06:13:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[seen 


签名：My Blog
http://xiangtool.nease.net]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>447</wp:comment_id>
			<wp:comment_author><![CDATA[elephi]]></wp:comment_author>
			<wp:comment_author_email>elephi.dong@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.186.119.217</wp:comment_author_IP>
			<wp:comment_date>2005-10-17 20:49:27</wp:comment_date>
			<wp:comment_date_gmt>2005-10-17 12:49:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我觉得，一个真正的高手，是摸索出一套可行的开发模式，甚至做一个 framework 。
然后一些不复杂但烦琐，而且机器也无法自动做的事情就让所谓“蓝领”去做吧。
高手，是用来构建技术体系，和解决技术难点的。不是所有的蓝领都有悟性成长为高手的。

Michael 是高手，呵呵。
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>449</wp:comment_id>
			<wp:comment_author><![CDATA[jasonzhang]]></wp:comment_author>
			<wp:comment_author_email>z_jordon@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.101.157.253</wp:comment_author_IP>
			<wp:comment_date>2005-10-18 08:47:13</wp:comment_date>
			<wp:comment_date_gmt>2005-10-18 00:47:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[高手？你以为你看金庸啊？在这个领域，只要你够努力，就可以。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>450</wp:comment_id>
			<wp:comment_author><![CDATA[elephi]]></wp:comment_author>
			<wp:comment_author_email>elephi.dong@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.169.14.86</wp:comment_author_IP>
			<wp:comment_date>2005-10-18 23:36:36</wp:comment_date>
			<wp:comment_date_gmt>2005-10-18 15:36:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[努力当然是必要的，可是一些思维方式，会影响你最终的成果阿！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Don&#039;t Lose Your Passion</title>
		<link>http://michael.nona.name/archives/119</link>
		<pubDate>Tue, 01 Nov 2005 01:54:57 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/119</guid>
		<description></description>
		<content:encoded><![CDATA[这句话写给自己，也写给我的朋友们。

前些天BJUG的maillist中，有好心人整理出了BJUG成员的Blog列表的opml. 马上有人导入。然后马上，江南白衣同志就感叹说：

<blockquote>“导入之后的感觉是，有太多兄弟太久没写技术blog了..........:(”</blockquote>

这是一个明显的信号。翻开Omea Reader, 那些熟悉的Blog很久都不再更新了。那些去年到今年初都很活跃的朋友们，现在居然都没有在更新过。比如，冰云同志，自从整理出RBAC的框架后，就再也没有写出过激动人心的文字；比如Vincent,自从扔出一颗EJB好的重磅炸弹后也变得默默无闻。是这个行业已经失去激情了，还是我们自己都失去激情了？

BJUG，这个去年五月成立的Java聚会组织，今年一岁半，刚学会走路的年龄，居然开始老去。maillist里面几个月都见不到关于技术的热烈的讨论了。这个组织正在逐渐沦落，讨论，每两周的聚会变得越来越牵强。当初的那种开源的激情，正在随着自身条件的改善，随着我们的年龄老去；我们创造了这个组织，然后利用这个组织改善了自己的生存条件，然后这个组织就像吸光了汁水的椰壳慢慢失去价值。没有人为这个领域贡献。

gigix在关于传媒的一次讨论中，非常鲜明的提出了：太阳底下没有新雪；用技术的传播换取reputation。现在的问题是：reputation有了，还剩谁在那里卖力的，没有任何目的的追求技术，传播技术呢？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>119</wp:post_id>
		<wp:post_date>2005-11-01 09:54:57</wp:post_date>
		<wp:post_date_gmt>2005-11-01 01:54:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dont-lose-your-passion</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>473</wp:comment_id>
			<wp:comment_author><![CDATA[grantbb]]></wp:comment_author>
			<wp:comment_author_email>admin@xiebing.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.xiebing.com</wp:comment_author_url>
			<wp:comment_author_IP>218.80.231.186</wp:comment_author_IP>
			<wp:comment_date>2005-11-03 09:49:26</wp:comment_date>
			<wp:comment_date_gmt>2005-11-03 01:49:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我也很久没有写blog了，不知什么原因？太忙？太懒，没怎么好好想？

捡起来，唤起激情！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>474</wp:comment_id>
			<wp:comment_author><![CDATA[corlin]]></wp:comment_author>
			<wp:comment_author_email>corlin@cybercorlin.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.136.93.46</wp:comment_author_IP>
			<wp:comment_date>2005-11-03 15:47:53</wp:comment_date>
			<wp:comment_date_gmt>2005-11-03 07:47:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&gt;0) 的确是一个很严重的问题，估计大家都没有设定路线，整个Bjug也没设定目标和愿景，只为了追逐技术而技术。
工作的确可以消磨人的意志，真的坚持下来读书/学习/写学术性blog的同志一定很少，但真的希望bjug中有1，2个这样的人，足够了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>470</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>60.191.44.142</wp:comment_author_IP>
			<wp:comment_date>2005-11-02 09:28:40</wp:comment_date>
			<wp:comment_date_gmt>2005-11-02 01:28:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[惭愧。所以本文最开头首先是写给自己。以后一定不偷懒]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>469</wp:comment_id>
			<wp:comment_author><![CDATA[jasonzhang]]></wp:comment_author>
			<wp:comment_author_email>z_jordon@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.101.157.253</wp:comment_author_IP>
			<wp:comment_date>2005-11-02 08:54:25</wp:comment_date>
			<wp:comment_date_gmt>2005-11-02 00:54:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[偶觉得，什么事情，先得自省，再省人，你好象也很少写BLOG了，自从你的BUFFALO框架推出之后.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>466</wp:comment_id>
			<wp:comment_author><![CDATA[庄表伟]]></wp:comment_author>
			<wp:comment_author_email>zhuangbiaowei@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://spaces.msn.com/members/zbw25/</wp:comment_author_url>
			<wp:comment_author_IP>222.65.237.44</wp:comment_author_IP>
			<wp:comment_date>2005-11-01 14:17:47</wp:comment_date>
			<wp:comment_date_gmt>2005-11-01 06:17:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵，可能因为我还没有拿自己的Blog换到点什么，所以还在坚持写吧。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>486</wp:comment_id>
			<wp:comment_author><![CDATA[nai ji mi  ding]]></wp:comment_author>
			<wp:comment_author_email>3108728</wp:comment_author_email>
			<wp:comment_author_url>http://3108728</wp:comment_author_url>
			<wp:comment_author_IP>222.60.0.42</wp:comment_author_IP>
			<wp:comment_date>2005-11-13 18:33:49</wp:comment_date>
			<wp:comment_date_gmt>2005-11-13 10:33:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi  jackson


]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>519</wp:comment_id>
			<wp:comment_author><![CDATA[udoo]]></wp:comment_author>
			<wp:comment_author_email>udoo@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>210.21.206.75</wp:comment_author_IP>
			<wp:comment_date>2005-11-18 15:51:58</wp:comment_date>
			<wp:comment_date_gmt>2005-11-18 07:51:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[因为51被封了,所以就不写了,虽然跟技术有关的越来越少
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48858</wp:comment_id>
			<wp:comment_author><![CDATA[elene]]></wp:comment_author>
			<wp:comment_author_email>elene_bai@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.178.237.163</wp:comment_author_IP>
			<wp:comment_date>2007-05-11 13:02:46</wp:comment_date>
			<wp:comment_date_gmt>2007-05-11 05:02:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi,Michael你好，利用午饭时间看了你的博客，不过只有一半。因为我在网上看到了你们的最新招人计划，很想加入进去。今天系统给我自动回复了一封mail,说一周内大概会有一个电话面试，作为“过来人”或者“前辈”，您能否给我一些建议呢。我留了mail地址，希望能收到你的回复！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>buffalo 1.2alpha1 released</title>
		<link>http://michael.nona.name/archives/120</link>
		<pubDate>Wed, 16 Nov 2005 06:03:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/120</guid>
		<description></description>
		<content:encoded><![CDATA[buffalo 1.2alpha1 发布，包含如下特性：
<ul>
	<li>* integrate prototype</li>
	<li>* refactor and rewrite whole code into prototype-like.</li>
	<li>* split javascript source into 4 parts: core, call, reply, bind</li>
	<li>* modify build.xml, concat the 4 parts into one js in the dist target.</li>
	<li>* modify the event system, change to buffalo.events["onLoading"]...</li>
	<li>* some bugfix</li>
<li>* 全部演示页面翻译为英文（以后发布版本的主要语言），多谢<a href="http://blog.donews.com/changzheng" target="_blank">清风</a></li>
</ul>

下载地址：
<a href="http://www.amowa.net/buffalo/download/buffalo-1.2alpha1.zip">http://www.amowa.net/buffalo/download/buffalo-1.2alpha1.zip</a>

此次的发布比原来声明的时间大约晚了三周，主要原因是一直找不到支持subversion的代码仓库。跟dev.java.net邮件往来多次，最后得知无法获得svn服务，只好作罢。多亏了<a href="http://www.redsaga.com" target="_blank">曹晓钢</a>的鼎力帮忙，在生病的情况下依然帮助我搭建并调试svn. 祝愿他早日康复。现在代码放在了redsaga上。

本想将版本号定义为1.1.1alpha, 但是由于本次版本变更在javascript部分实在巨大，完全集成了prototype的基础设施，写法跟过去有了很大不同，因此更改为1.2. 在外部api调用上，最大程度的保证了跟以前遗留代码的兼容。如果发现有问题，请在<a href="http://groups.google.com/group/amowa">buffalo论坛</a>中提出。很多常见的问题已经在那里提出了。

之所以集成<a href="http://prototype.conio.net/" target="_blank">prototype</a>, 是因为他的提供的语法级别的基础设施相当便利，并且在常见的HTML操作的处理上，提供了相当多的方便的封装，如$, $F, Form等，我相信这些便利的方法会给web开发者带来更高的工作效率。

自这个版本后，buffalo javascript部分将不再作重大更新。剩下的工作将专注于java部分的工作，包括效率，bug, 以及最主要的部分：页面框架。

建议，意见，欢迎发往buffalo 论坛<a href="http://groups.google.com/group/amowa">http://groups.google.com/group/amowa</a>。最后向那些久等的朋友们说一声：对不起，来迟了！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>120</wp:post_id>
		<wp:post_date>2005-11-16 14:03:47</wp:post_date>
		<wp:post_date_gmt>2005-11-16 06:03:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>buffalo-12alpha1-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>为什么我不公布buffalo roadmap</title>
		<link>http://michael.nona.name/archives/121</link>
		<pubDate>Fri, 18 Nov 2005 03:07:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/121</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>江南白衣-拾豆豆 说:<br />
恭喜恭喜，开源软件能坚持做下来的在中国不多阿<br />
Michael - Buffalo 1.2alpha1发布 说:<br />
是啊<br />
江南白衣-拾豆豆 说:<br />
下一站 Page Framework 的roadmap哪里能看到？<br />
Michael - Buffalo 1.2alpha1发布 说:<br />
不敢发布，怕伤害等待的人……</blockquote>

这是真的。毕竟国内做开源能坚持下来的，太少了。我们有很多的热情、创意与想法在一瞬间爆发，做成开源项目，在还没有来得及热起来的时候就迅速的冷却下去。<a href="http://www.blogjava.net/scud/archive/2005/11/16/20016.html">scud:你今天框架了吗？</a>描述了这样一种现状。管理课上，我学到了张瑞敏的一句话：把简单的事情做好就是不简单，把平凡的事情做好就是不平凡。显然，所有的项目刚出来的时候都是新的，随着进展，琐碎的事情越来越多，也就有越来越多的理由与借口来放弃这个项目。我看到很多的优秀的项目都不断的诞生与消亡，归根结底，我宁愿相信，这是一个态度问题，而并非技术问题。

我不知道buffalo最后会怎样，但是从目前得到的评价，基本上正面的居多：发给java.net，他们说very interesting, 并且随时欢迎加入他们的community, 然而由于不能提供svn服务，只得作罢；<a href="http://www.thoughtworks.com/profiles/Duan,+Shane.html">Shane</a>也表示，当buffalo代码复杂度达到一定规模的时候可以帮助将项目放到codehaus。同时<a href="http://groups.google.com/group/amowa">Buffalo论坛</a>上也有一群热心的朋友帮助使用测试评估。这些都是莫大的鼓舞。从行业趋势来说，用户体验、Web2.0, Ajax无疑是今年最hot的词。有理由相信，buffalo能够在若干方面真正对用户与程序员都具备益处。

然而buffalo现在还很小，我很忙。buffalo现在的核心功能只是一个web远程调用并且java/javascript双向透明序列化的library, 谈不上framework. buffalo还缺少大量的文档来帮助开发者迅速起步。将来要添加的page module, component module, validation module, 等等，还有很多工作要做。然而我还要为付给我薪水的雇主工作，并且加班，甚至某些周末；每天回到家里我也会累，也会不想动。谁知道在这样一种状况下，发布一个roadmap, 然后引来若干期待，会不会最后因为承诺没有兑现而死得毫无尊严呢？Roadmap其实发布过，不过都是在小范围内：buffalo的论坛(后来被迅速的删掉)，BJUG聚会的白板上，以及发给<a href="http://nemo.nona.name">nemo</a>的邮件。

<a href="http://michael.nona.name/archives/92">不怕慢，只怕站</a>，buffalo会一直走下去。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date>2005-11-18 11:07:03</wp:post_date>
		<wp:post_date_gmt>2005-11-18 03:07:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%ba%e4%bb%80%e4%b9%88%e6%88%91%e4%b8%8d%e5%85%ac%e5%b8%83buffalo-roadmap</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<wp:comment>
			<wp:comment_id>520</wp:comment_id>
			<wp:comment_author><![CDATA[crmky]]></wp:comment_author>
			<wp:comment_author_email>chenrui@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://spaces.msn.com/members/crmky</wp:comment_author_url>
			<wp:comment_author_IP>218.81.255.49</wp:comment_author_IP>
			<wp:comment_date>2005-11-18 18:10:30</wp:comment_date>
			<wp:comment_date_gmt>2005-11-18 10:10:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[如果有Roadmap，还是发出来的好：）即使没有能够按照Roadmap上的时间达成，但是至少大家还能了解项目的方向……而且有个Roadmap也是给自己的动力。

况且，现在大家使用开源项目都很实际的……要用也只会使用现在版本的功能，Roadmap上的么，等到出来后才算。

所以我觉得如果有Roadmap，还是发出来的好：）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>517</wp:comment_id>
			<wp:comment_author><![CDATA[scud]]></wp:comment_author>
			<wp:comment_author_email>cnscud@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.jscud.com</wp:comment_author_url>
			<wp:comment_author_IP>203.86.43.189</wp:comment_author_IP>
			<wp:comment_date>2005-11-18 13:11:12</wp:comment_date>
			<wp:comment_date_gmt>2005-11-18 05:11:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[yes,坚持就是胜利!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>webwork已死</title>
		<link>http://michael.nona.name/archives/122</link>
		<pubDate>Wed, 30 Nov 2005 08:03:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/122</guid>
		<description></description>
		<content:encoded><![CDATA[robbin: <a href="http://forum.javaeye.com/viewtopic.php?t=17242&#038;postdays=0&#038;postorder=asc&#038;start=15">Java视线论坛 :: 阅读主题 - webwork并入struts团队了！</a>
<blockquote>Web层方面我现在非常看好Struts Ti。Webwork从技术上是非常前卫的，即将发布的2.2版本提供了很不错的AJAX功能，并且易学易用，它的主要问题在于文档缺少，社区小，用户少。现在Struts Ti结合了Webwork的先进技术和Struts的庞大社区，再...</blockquote>

webwork 并入struts, 真的是好事吗？

从铺天盖地的评论看来，许多人对这起开源世界的合并看好，如果上市的话，说不定会吸引华尔街投资者的买入。

我不这么认为。robbin 更多从商业与社群的角度在考虑，认为技术+社区=成功。而我根本不这么认为。webwork社区不活跃是众所周知的事情，struts技术差劲也得到普遍认可。两者的合并前提是：webwork技术领先，struts社群成熟。然而，这个前提成立么？

鉴于我早早放弃了struts, 因此对其社区不熟悉，仅仅从webwork说起。webwork在早期，由于采用xwork command pattern内核，加上intercepter，成为当时设计的亮点。然而就是这些由Richard Oberg创建的东西的星光，照耀了足足N年，直到现在。各位使用webwork的同仁可以回忆一下，从webwork发展至今，它本身可曾有重大的变化？无论是从技术的领先性上，还是从对开发的支持上（如众多的tag），webwork所交出的答卷都不能让人满意。事实上，我对现在的webwork开发团队的能力充满了怀疑：Ajax出现了，这个让整个开发这世界疯狂的词，大名鼎鼎的webwork对它的态度简直让人诧异，对他的实现也是丑陋不堪：居然同时用两套独立的library来实现校验和所谓的ajax 标签。

与其说两者的结合，我情愿极端的看成，这是webwork自己的放弃。这其中也许存在不少的原因，个人能力上的，外部环境上的。但在我看来，webwork，这个象征着灵活，先进，优雅等等完全可以用一系列美好的形容词的框架，已死。用户能做出的选择将会更少，web框架之间的竞争开始重量级升级，那些小型的，美丽的框架将会由于没有商业公司或者社区的支持而死得无声无息。这个世界回归到了垄断的世界。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>122</wp:post_id>
		<wp:post_date>2005-11-30 16:03:30</wp:post_date>
		<wp:post_date_gmt>2005-11-30 08:03:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>webwork%e5%b7%b2%e6%ad%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>594</wp:comment_id>
			<wp:comment_author><![CDATA[Kirin Sai]]></wp:comment_author>
			<wp:comment_author_email>kameilnt@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.136.253.56</wp:comment_author_IP>
			<wp:comment_date>2006-01-20 23:15:27</wp:comment_date>
			<wp:comment_date_gmt>2006-01-20 15:15:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我不觉得webwork就此灭亡……]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10831</wp:comment_id>
			<wp:comment_author><![CDATA[ppppp]]></wp:comment_author>
			<wp:comment_author_email>pp@pp.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.85.72.17</wp:comment_author_IP>
			<wp:comment_date>2006-09-09 10:04:36</wp:comment_date>
			<wp:comment_date_gmt>2006-09-09 02:04:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不要这样说吧。好不好用做过的项目的心里自然清楚。我同时用过struts和webwork，webwork好用多了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20126</wp:comment_id>
			<wp:comment_author><![CDATA[jie.m]]></wp:comment_author>
			<wp:comment_author_email>jie.m@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.51.231.208</wp:comment_author_IP>
			<wp:comment_date>2006-11-24 15:21:23</wp:comment_date>
			<wp:comment_date_gmt>2006-11-24 07:21:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[恐怕是你使用的问题，而且是struts走到了头，不是ww2。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26838</wp:comment_id>
			<wp:comment_author><![CDATA[sharper]]></wp:comment_author>
			<wp:comment_author_email>sharper@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.226.60.75</wp:comment_author_IP>
			<wp:comment_date>2007-01-14 11:21:41</wp:comment_date>
			<wp:comment_date_gmt>2007-01-14 03:21:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[是不是觉得开源项目技术要多变才觉得很好啊？
象WebWork 这样架构稳定,发展有序的开源项目很少。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27264</wp:comment_id>
			<wp:comment_author><![CDATA[werwer]]></wp:comment_author>
			<wp:comment_author_email>34534@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.184.135.39</wp:comment_author_IP>
			<wp:comment_date>2007-01-18 15:21:51</wp:comment_date>
			<wp:comment_date_gmt>2007-01-18 07:21:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[适合做记者，鉴定完毕！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38549</wp:comment_id>
			<wp:comment_author><![CDATA[john]]></wp:comment_author>
			<wp:comment_author_email>4191682@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.247.177.130</wp:comment_author_IP>
			<wp:comment_date>2007-03-21 09:14:57</wp:comment_date>
			<wp:comment_date_gmt>2007-03-21 01:14:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我对struts,webwork,tapstry,jsf等等都很熟悉，觉得webwork实在不算很优秀，仅比struts强而已。个人认为最好的是tapstry。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>使用buffalo作为webwork的验证机制</title>
		<link>http://michael.nona.name/archives/123</link>
		<pubDate>Thu, 01 Dec 2005 01:25:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/123</guid>
		<description></description>
		<content:encoded><![CDATA[昨天在开发中遇到了验证的问题，结果证明，基于异步的服务器端验证是最节省力气并且效果好的。由于2.1.7的xmlhttp验证基本不可用，2.2太丑陋，因此我决定用buffalo实现验证。思考结果是……发现事情是出奇的简单，实现起来美观又优雅。

1 构造一个ValidationService(POJO), 包含一个validate方法：

List validate(String namespace, String action, Map pamameters)

这个方法实现很简单，只需要根据namespace和action, 构造一个ActionProxy,
将parameters放到ActionContext中，执行Action.execute,
然后判断这个Action是否为ValidateAware, 如果是，那么调用验证方法，将getFieldErrors中的错误按照name -
value的方式作为返回值返回即可。

2 将这个service放到buffalo-service.properties, 或者用Spring集成。这方面不赘述。

3 客户端：

<pre><code>var buffalo = new Buffalo("/appRoot/BUFFALO");
var currentForm = null;
function validate(theForm) {
   currentForm = theForm;
   //组装form内的信息，代码略
   buffalo.remoteCall("validateService.validate",
             [form.namespace, form.action, parameters],
             callback);

   return false;
}

function callback(reply) {
   var result = reply.getResult();
   if (result.length >0) {
            //有错误的处理……
   } else {
      // 无错误就提交
        currentForm.submit();
   }
}
</code></pre>
4 webwork中，对form.vm稍微进行修改，加上onsubmit=return validate(this) 即可

完毕。

由于buffalo封装了远程调用以及数据序列化的细节，使得编程更加简单并且清晰了，由于它的小巧和易于集成，使得这些工作只需要做一次，并且对开发者透明。这些代码可以自己封装，并且可以重用。我相信这个封装比webwork
2.2的dwr要好。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>123</wp:post_id>
		<wp:post_date>2005-12-01 09:25:33</wp:post_date>
		<wp:post_date_gmt>2005-12-01 01:25:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8buffalo%e4%bd%9c%e4%b8%bawebwork%e7%9a%84%e9%aa%8c%e8%af%81%e6%9c%ba%e5%88%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>539</wp:comment_id>
			<wp:comment_author><![CDATA[jasonzhang]]></wp:comment_author>
			<wp:comment_author_email>z_jordon@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.101.157.254</wp:comment_author_IP>
			<wp:comment_date>2005-12-02 08:44:14</wp:comment_date>
			<wp:comment_date_gmt>2005-12-02 00:44:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[是个好方法，不过我觉得用你的那个验证框架在客户端作验证就非常优雅了，不用写一行SCRIPT，至于服务器端嘛，需要的时候再配一下，用WEBWORK不要太简单的说^_^.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>593</wp:comment_id>
			<wp:comment_author><![CDATA[webservice]]></wp:comment_author>
			<wp:comment_author_email>webservice@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.222.177.217</wp:comment_author_IP>
			<wp:comment_date>2006-01-20 13:49:24</wp:comment_date>
			<wp:comment_date_gmt>2006-01-20 05:49:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[能否有相关的代码？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>578</wp:comment_id>
			<wp:comment_author><![CDATA[ulation]]></wp:comment_author>
			<wp:comment_author_email>xcyhappy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.106.154.133</wp:comment_author_IP>
			<wp:comment_date>2005-12-29 22:29:51</wp:comment_date>
			<wp:comment_date_gmt>2005-12-29 14:29:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[對這個方案還是存在疑惑：
Browser中完成的數據一致性Check是不可靠，不安全的，Server端Check不能被忽略。
所以適用的領域還是非常限制，如何避免這類問題，或者使用的邊界是什麽。
請Michael Chen兄指教。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>605</wp:comment_id>
			<wp:comment_author><![CDATA[SU]]></wp:comment_author>
			<wp:comment_author_email>suyejun@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.81.239.233</wp:comment_author_IP>
			<wp:comment_date>2006-02-08 12:49:48</wp:comment_date>
			<wp:comment_date_gmt>2006-02-08 04:49:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Michael兄能不能给出个例子啊，我弄了半天没搞出来]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>606</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>219.142.61.4</wp:comment_author_IP>
			<wp:comment_date>2006-02-08 15:59:22</wp:comment_date>
			<wp:comment_date_gmt>2006-02-08 07:59:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[see http://michael.nona.name/archives/137]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>607</wp:comment_id>
			<wp:comment_author><![CDATA[SU]]></wp:comment_author>
			<wp:comment_author_email>suyejun@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.81.239.233</wp:comment_author_IP>
			<wp:comment_date>2006-02-08 16:29:33</wp:comment_date>
			<wp:comment_date_gmt>2006-02-08 08:29:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[非常感谢～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>604</wp:comment_id>
			<wp:comment_author><![CDATA[su]]></wp:comment_author>
			<wp:comment_author_email>suyejun@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.80.1.160</wp:comment_author_IP>
			<wp:comment_date>2006-02-07 06:57:32</wp:comment_date>
			<wp:comment_date_gmt>2006-02-06 22:57:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Michael兄，看了您的一些文章，让我受益匪浅，我也正在学习使用buffalo
看了您的这个验证方法，我有一点不太明白，
就是这里“判断这个Action是否为ValidateAware, 如果是，那么调用验证方法”，这个验证方法是自己另外写一个还是使用webwork里面定义的，比如LoginAction-validation.xml？如果自己写的就比较麻烦了，我就这里不太懂，因为都是刚刚在学习，麻烦您抽空解答一下我的疑惑吧，谢谢]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14021</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen&#8217;s Blog &raquo; Blog Archive &raquo; 使用buffalo作为webwork的验证机制-实现]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://michael.nona.name/archives/137</wp:comment_author_url>
			<wp:comment_author_IP>61.129.70.239</wp:comment_author_IP>
			<wp:comment_date>2006-10-02 00:50:03</wp:comment_date>
			<wp:comment_date_gmt>2006-10-01 16:50:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] ValidationService.java, buffalo要使用的service, 代码不复杂，没有注释，原理见前一篇文章 [java] import java.util.ArrayList; import java.util.HashMap; import java.util.Iterator; import java.util.List; import java.util.Map; import com.opensymphony.xwork.Action; import com.opensymphony.xwork.ActionContext; import com.opensymphony.xwork.ActionProxy; import com.opensymphony.xwork.DefaultActionInvocation; import com.opensymphony.xwork.DefaultActionProxy; import com.opensymphony.xwork.ValidationAware; import com.opensymphony.xwork.config.entities.ActionConfig; public class ValidationService { public List validate(String namespace, String action, Map parameters) { List errorList = new ArrayList(); Action requestedAction = null; HashMap ctx = new HashMap(); ctx.put(ActionContext.PARAMETERS, parameters); ValidatorActionProxy proxy; try { proxy = new ValidatorActionProxy(namespace, action, ctx); proxy.execute(); requestedAction = proxy.getAction(); } catch (Exception e) { e.printStackTrace(); [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Ajax/Amowa框架Buffalo 1.2发布！</title>
		<link>http://michael.nona.name/archives/124</link>
		<pubDate>Tue, 27 Dec 2005 08:40:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/124</guid>
		<description></description>
		<content:encoded><![CDATA[经过长时间的工作和buffalo社区的支持，buffalo ajax/amowa framework 1.2发布。新版本包含了经过改进激动人心的Spring集成，Prototype集成，以及浏览器前进后退的支持。主要的新特性如下：

<ul>
	<li>* 支持浏览器前进后退（这个特性几乎可以在小型应用中替换MVC）</li>

	<li>* 重写了整个服务调用模块</li>

 	<li>* 重写了Spring集成代码，集成Spring更加容易</li>

        <li>* 重写了burlap的依赖，移除了特定版本的burlap-fix.jar。无需任何变动，现在可以在resin app server中使用buffalo了。</li>

</ul>


Buffalo Ajax/Amowa Framework是一个全新的远程调用/Web框架。他可以向JSON/DWR一样，被应用为一个web远程调用框架，简化web客户端与服务器端的调用（buffalo的API更加简单！）；也可以在小型应用中承担页面切换的任务，基于<a href="http://michael.nona.name/archives/117">OPOA</a>的概念，让buffalo为你管理页面切换；在大型应用中，buffalo也可以在其中承担页面无刷新获取数据的工作。Buffalo binding组件能够一致性地将数据绑定到html组件上，也可以绑定到JavaScript Template的模版上。目前已经有若干真正的商业应用在不同层面应用了buffalo。在这个版本中，buffalo提供了全面的文档，丰富的发行包，成熟的Demo，buffalo已经为企业应用作了充分的准备。

Buffalo站点：http://www.amowa.net/buffalo/<br />
演示：http://demo.amowa.net/buffalo-demo/index.jsp <br />
下载：http://www.amowa.net/buffalo/index.html?page=download <br />
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>124</wp:post_id>
		<wp:post_date>2005-12-27 16:40:12</wp:post_date>
		<wp:post_date_gmt>2005-12-27 08:40:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ajaxamowa%e6%a1%86%e6%9e%b6buffalo-12%e5%8f%91%e5%b8%83%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>571</wp:comment_id>
			<wp:comment_author><![CDATA[宝玉]]></wp:comment_author>
			<wp:comment_author_email>junminliu@msn.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.openlab.net.cn</wp:comment_author_url>
			<wp:comment_author_IP>211.136.92.240</wp:comment_author_IP>
			<wp:comment_date>2005-12-27 18:41:14</wp:comment_date>
			<wp:comment_date_gmt>2005-12-27 10:41:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[在IE中打开Spring integration页面时，一直有进度条显示未加载完，不知道为何？！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>570</wp:comment_id>
			<wp:comment_author><![CDATA[宝玉]]></wp:comment_author>
			<wp:comment_author_email>junminliu@msn.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.openlab.net.cn</wp:comment_author_url>
			<wp:comment_author_IP>211.136.92.240</wp:comment_author_IP>
			<wp:comment_date>2005-12-27 18:38:16</wp:comment_date>
			<wp:comment_date_gmt>2005-12-27 10:38:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[从Demo来看，用户体验相当不错
有一个待改进的地方：
虽然支持支持浏览器前进后退，但是刷新后，会回到最开始的页，而不是当前页]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>写在Buffalo1.2发布之后</title>
		<link>http://michael.nona.name/archives/125</link>
		<pubDate>Tue, 27 Dec 2005 15:09:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/125</guid>
		<description></description>
		<content:encoded><![CDATA[buffalo1.2发布了，有了许多感想，有必要写下来。开发过程中的一些点滴，也许并不像像外人一样那样容易。现在开始明白，一些独立以个人之力进行专业化软件开发之路的开发者，是多么的不容易。可以说，每一个新版本release的背后，都留下了辛勤的汗水。

从一开始，就没想到buffalo能走到现在。buffalo 1.0出现后，也许会像<a href="http://www.amowa.net/jsvalidation">jsvalidation</a>一样，轰动的来，悄悄的去，莫名无声。然而，清风和nemo大胆的在Sina的内部系统中应用了buffalo, 证明了buffalo的可用性，这给了我极大的鼓励（事实上，我一直在这样各方面的鼓励中，不断的改进buffalo）。后来社区的引入，逐渐有了像董董，宋来这样的热心的用户，不断提出意见和建议，督促着buffalo往前走；曹晓钢老师也不断提供资源的支持，amowa和buffalo站点都是在他的服务器上。没有各方面资源的支持，我想buffalo不可能走到今天。

buffalo api的实现都很简单，但是都是长期思考后得到的，我认为能够让使用者得到最大自由度的，并且不依赖buffalo的接口定义。当一个新的特性需要被加入的时候，我首先考虑的是是否会加重使用者的学习负担，其次是如何设计最直观最人性，最后才是实现。现在的开发者需要学的东西太多太多了，如果这套api不能在5分钟内告诉他们怎么用，30分钟内不能开始使用，这不能说明这个产品的成功，而正好证明了他的失败。在现在的JavaEE领域，没有把任何事情比把事情弄得复杂更加容易的事情了。复杂不是优点，是缺点。我很高兴的发现，今天发布之后，有新的使用者能够在看完api后说，功能差不多，比DWR简单。

不得不说，开发buffalo的过程是一段痛苦的过程，甚至真切的影响到了我的工作和生活。上班中，我时不时去论坛看看；下班路上，我在考虑如何添加新的特性，如何设计service接口更加兼容IoC容器和自定义的服务。周末，如果没有其他的事情，一般也是在做buffalo. 然而，工作中我也并非自由人，也要管人和被人管。遗憾的是，在这种平衡关系中，我做得并不好。


更重要的是，这种真正意义上的开源开发（至今为止，我没有从buffalo或者amowa或者jsvalidation中得到一分钱）让我的价值观也发生了一些变化。我开始理解Richard Stallman当初开发gcc的那种狂热，也能够理解菲利普·卡兹为何潦倒而终，归根结底，我开始似乎领略到那深邃的开源精神，那种以全世界使用者开心而开心，以使用者快乐而快乐的精神。这种精神能够让人逐渐忽略物质的需求而享受真正的精神世界。然而，我中毒尚浅，深深的明白，全盘接受这种价值观在国内跟自杀没什么差别。

下一步工作，我知道还有许多没有做。目前已经提出的有：表单到DTO对象的绑定，与jsvalidation的集成，对service调用的ACL控制，改进的对有状态service的支持，等等。只要开发者有需要，buffalo会一直走下去。buffalo会放到java.net或者其他的开放cvs上，以接纳更多的开发者。

ps. 我答应了博文视点，从明年开始与夏昕一起写一本关于JavaEE开发的书，工作更多了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>125</wp:post_id>
		<wp:post_date>2005-12-27 23:09:15</wp:post_date>
		<wp:post_date_gmt>2005-12-27 15:09:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%86%99%e5%9c%a8buffalo12%e5%8f%91%e5%b8%83%e4%b9%8b%e5%90%8e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>577</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>221.218.235.96</wp:comment_author_IP>
			<wp:comment_date>2005-12-29 21:47:36</wp:comment_date>
			<wp:comment_date_gmt>2005-12-29 13:47:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[1.2中BuffaloServiceServlet已经被deprecated. 请使用新的net.buffalo.web.servlet.ApplicationServlet.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>575</wp:comment_id>
			<wp:comment_author><![CDATA[JasonZhang]]></wp:comment_author>
			<wp:comment_author_email>z_jordon@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.101.100.76</wp:comment_author_IP>
			<wp:comment_date>2005-12-29 14:43:22</wp:comment_date>
			<wp:comment_date_gmt>2005-12-29 06:43:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我现在正在参与的电信的系统，也在一些地方使用了AJAX，用的当然就是buffalo，具体效果就等用户就评价吧。
不过我觉得你在BuffaloServiceServlet中的一个错误一直没有改正，就是不能把_service,_skeleton设为类的私有变量.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>572</wp:comment_id>
			<wp:comment_author><![CDATA[宋来]]></wp:comment_author>
			<wp:comment_author_email>qsonglai@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.songlai.com</wp:comment_author_url>
			<wp:comment_author_IP>218.62.29.139</wp:comment_author_IP>
			<wp:comment_date>2005-12-28 09:40:00</wp:comment_date>
			<wp:comment_date_gmt>2005-12-28 01:40:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[永远支持你！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>573</wp:comment_id>
			<wp:comment_author><![CDATA[清风]]></wp:comment_author>
			<wp:comment_author_email>paradise.qingfengATgmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.donews.com/changzheng</wp:comment_author_url>
			<wp:comment_author_IP>61.135.152.194</wp:comment_author_IP>
			<wp:comment_date>2005-12-28 11:33:14</wp:comment_date>
			<wp:comment_date_gmt>2005-12-28 03:33:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[加油，老大！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>574</wp:comment_id>
			<wp:comment_author><![CDATA[ouo]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.donews.com/ouo/archive/2005/12/28/674803.aspx</wp:comment_author_url>
			<wp:comment_author_IP>61.135.128.148</wp:comment_author_IP>
			<wp:comment_date>2005-12-28 22:31:09</wp:comment_date>
			<wp:comment_date_gmt>2005-12-28 14:31:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Michael的buffalo</strong>

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>580</wp:comment_id>
			<wp:comment_author><![CDATA[JasonZhang]]></wp:comment_author>
			<wp:comment_author_email>z_jordon@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.101.100.76</wp:comment_author_IP>
			<wp:comment_date>2005-12-31 23:07:43</wp:comment_date>
			<wp:comment_date_gmt>2005-12-31 15:07:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ApplicationServlet的实现方式比我原来想像的方式的更漂亮，只要实现接口ServiceRepository就可以用自己的方式来获取service了，只是我实现了这个接口后，要怎么使用我自己的类？你似乎还没有完成。
	private void initServiceRepository() {
		
		if (getServletContext().getAttribute(ServiceRepository.WEB_CONTEXT_KEY) == null) {
			LOG.info("initialize the service repository");
			ServiceRepository repository = new DefaultServiceRepository(getServletContext());
			getServletContext().setAttribute(ServiceRepository.WEB_CONTEXT_KEY, repository);
		} else {
                        ????
                }
	}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>583</wp:comment_id>
			<wp:comment_author><![CDATA[白衣]]></wp:comment_author>
			<wp:comment_author_email>calvinxiu@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.19.171.60</wp:comment_author_IP>
			<wp:comment_date>2006-01-09 16:03:17</wp:comment_date>
			<wp:comment_date_gmt>2006-01-09 08:03:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我们也简单写了个jsvalidation,不过不是定义在config.xml文件里的,而是直接在里面加了个contrains属性,不知到Michale觉得这个思路怎样. 

我觉得直接在input里就能看到限制比跳到config.xml好些,也少些配置文件.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>584</wp:comment_id>
			<wp:comment_author><![CDATA[JasonZhang]]></wp:comment_author>
			<wp:comment_author_email>z_jordon@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.101.100.76</wp:comment_author_IP>
			<wp:comment_date>2006-01-10 23:19:34</wp:comment_date>
			<wp:comment_date_gmt>2006-01-10 15:19:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不知道楼上说的是不是这种方式

这种方式我以前也用过，但同事都不喜欢，如果有两个相同的表单都需要表单，比如增加和编辑的表单，那不是每个表单都需要写required="true" maxLength="4"。现在我们项目用的客户端表验证就是在Michale的JsValidation上改的，但是有些客户端的浏览器在load　xml配置文件时总是会出错，头痛啊。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>585</wp:comment_id>
			<wp:comment_author><![CDATA[JasonZhang]]></wp:comment_author>
			<wp:comment_author_email>z_jordon@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.101.100.76</wp:comment_author_IP>
			<wp:comment_date>2006-01-10 23:23:15</wp:comment_date>
			<wp:comment_date_gmt>2006-01-10 15:23:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[唉，特殊标签被过滤了。
&gt; input type="text" required=”true” maxLength=”4″&lt;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>586</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://michael.nona.name</wp:comment_author_url>
			<wp:comment_author_IP>219.142.61.4</wp:comment_author_IP>
			<wp:comment_date>2006-01-11 09:48:17</wp:comment_date>
			<wp:comment_date_gmt>2006-01-11 01:48:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[jsvalidation正在考虑。一直都想那么做的，只是忙于buffalo, 没有时间来整理。以后校验的规则数据支持xml和内嵌属性两种。内嵌属性

input rules="required;minLength:10;maxLength:100" 

类似于css的语法。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Web2.0：开发者，你就是司机</title>
		<link>http://michael.nona.name/archives/126</link>
		<pubDate>Wed, 28 Dec 2005 15:12:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/126</guid>
		<description></description>
		<content:encoded><![CDATA[他们说，Web2.0是个好东西。<br />
他们说，Web2.0真正尊重我，体贴我<br />
他们说，Web2.0不是商业模式。<br />
他们说，Web2.0不一定赚的到钱，不是Web2.0一定赚不到钱。

作为开发者，驾驶着Web的快车，你要把用户带到哪里？

这世界产品的成功越来越依赖于产品是否做得用心并且颇具创意。Google的成功依赖于此。对产品的热爱，对最终用户的贴心考虑。不妨问一下，作为J2EE开发者，使用着世界上最领先的开源技术，体会着世界上最精妙的设计模式，使用着最先进的开发工具，作为开发者本人，自己做出来的应用是否愿意使用？

<blockquote>客户：XXX系统真难使用！<br />
YYY系统的开发者：是吗？比YYY系统更烂？</blockquote>

真是一个玩笑。这其中差别在于对我们创造的系统的价值的根本认知。无论是大系统还是在小系统中，开发者都被认定为代码开发者和业务功能实现者，而非奇迹创造者。而传统的工业模式限定了我们，任何事情都有明确的分工，美工做界面的事情，我们开发者只需要写程序OK了，然而这种分工将用户体验这个角色远远扔在外面，没有人关心系统的易用性。事实上，软件系统发展了这么多年，用户早已不再满意仅仅功能的实现。真正的可用系统应当是用户友好的。代码开发完毕的系统，使用上首先要过自己这一关，如果写完代码后自己都懒得多看一眼，如果自豪的给用户使用？作为开发者，他真正的价值不在于依靠什么样的技术实现了这个功能，而在于如何以恰当的方式交付给用户，让用户去创造更大价值。用户的快乐才是开发者价值的所在，用户的快乐才是开发者的快乐。

哦，忘了，我们只是写代码的，不能具备那么多能力。你可以不懂得色彩搭配和颜色布局，但你一定知道怎么操作这个系统才好用。你不必具备将界面弄得很绚丽的能力，但一定得有能力将复杂的东西弄得简单清晰。一句话，Web2.0时代，你就是司机，驾驶着各种先进技术组装的车上，带着你的乘客，快速而舒适的送乘客到达目的地。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>126</wp:post_id>
		<wp:post_date>2005-12-28 23:12:40</wp:post_date>
		<wp:post_date_gmt>2005-12-28 15:12:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web20%ef%bc%9a%e5%bc%80%e5%8f%91%e8%80%85%ef%bc%8c%e4%bd%a0%e5%b0%b1%e6%98%af%e5%8f%b8%e6%9c%ba</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>正本清源：所谓Ajax输出的三种形式</title>
		<link>http://michael.nona.name/archives/127</link>
		<pubDate>Thu, 29 Dec 2005 15:56:26 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/127</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.quirksmode.org/blog/archives/2005/12/the_ajax_respon.html">QuirksBlog: The AJAX response: XML, HTML, or JSON?</a>

说实话，我没想到Bing Ran会问我这个问题。早先这篇文章在TSS上贴出的时候，我很快的浏览，便一眼看出这篇文章作者所处的角度。事实上，AJAX概念的不完整和不严密性 ——异步的JavaScript + XML——导致作者将AJAX的输出分为三种类型：XML, HTML片断和JSON对象字符串。

首先看XML。对于RPC的数据传输，XML从来都是当仁不二的选择。对于将对象序列化为XML字符串的方式，往往有两种选择，一种是将对象本身的属性作为节点进行输出，一种是利用语言的元数据特性进行序列化输出。两者存在较大不同。对于第一种，输出案例如下：

[xml]
<books>
    <book>
        <title>JavaScript, the Definitive Guide</title>
        <publisher>O'Reilly</publisher>
        <author>David Flanagan</author>
        <cover src="/images/cover_defguide.jpg" />
        <blurb>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</blurb>
    </book>
    <book>
        <title>DOM Scripting</title>
        <publisher>Friends of Ed</publisher>
        <author>Jeremy Keith</author>
        <cover src="/images/cover_domscripting.jpg" />
        <blurb>Praesent et diam a ligula facilisis venenatis.</blurb>
    </book>
</books>
[/xml]

而对于第二种，输出案例如下：

[xml]
<list>
    <type>java.util.List</type>
    <map>
        <type>yourapp.domain.Book</type>
        <string>title</string>
        <string>JavaScript, the Definitive Guide</string>
        <string>publisher</string>
        <string>O'Reilly</string>
        <string>author</string>
        <string>David Flanagan</string>
        <string>cover</string>
        <string>/images/cover_defguide.jpg</string>
        <string>blurb</string>
        <string>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</string>
    </map>
    <map>
        <type>yourapp.domain.Book</type>
        <string>title</string>
        <string>DOM Scripting</string>
        <string>publisher</string>
        <string>Friends of Ed</string>
        <string>author</string>
        <string>Jeremy Keith</string>
        <string>cover</string>
        <string>/images/cover_domscripting.jpg</string>
        <string>blurb</string>
        <string>Praesent et diam a ligula facilisis venenatis.</string>
    </map>
</list>
[/xml]

前 一种一般来说是同一进程内（同一JVM内）对对象进行序列化和反序列化的方法，在XML-Java绑定一类的框架中比较多见，例如 XStream, JiBX, Castor等等。当同一进程内能够找到对象具备的正确类型时，这种序列化/反序列化设计和实现都不太困难，而且针对空值处理也比较容易。

可以看出，由于这种方式成本较低，有大量成熟的开源库可用，加上在AJAX中的X(ML)的“理论”指导下，许多开发者采用这种方式将对象输出给前 台浏览器，然后利用浏览器的XML能力进行输出显示。从那篇文章中可以看出，这种工作是纯粹的dirty work, 并且由于领域模型或者DTO的不同，输出的xml结构含义也不同，在对空值的处理上更是麻烦，在处理显示逻辑的时候，基本上很难在客户端对以这种方式传递 的XML以一种统一的方式进行还原。以这种方式来进行AJAX开发，小规模应用还不能显出弊端，但是大规模应用出现，领域对象较多时，必然出现怨言。而我 们使用AJAX的真实意图并非来无趣地去解析各种各样的XML，而是需要XML中代表的数据。至于XML是什么样子，除了调试阶段，没有人会关心。

第二种XML的序列化方式是绝大多数跨进程远程调用协议/框架所采取的方式。SOAP/WebService如此，XMLRPC如此， Buffalo采用的Burlap也如此。这种远程调用的特征是，在协议约定的条件下，调用方和被调用方需要保证数据语义的完整性。拿什么保证？就是数据 定义信息了。这些协议的共同特征是采用谋一些标记来描述数据类型：int, long, float, string, list...这样定义完成后，只要根据协议，任何语言都能以一种通用的方式对数据进行还原。AJAX引擎的概念也就渐渐呈现——通过某一种协议，他就处 于中间的位置，负责将调用方的请求包装为协议，转化为执行方能够理解的动作加以执行；然后将执行结果转化为协议的值，传递给客户端，客户端引擎将协议内容 解析为能够理解的对象结构传递给客户端，然后就可以利用这个数据来显示了。XML-RPC如此，WebService如此，DWR如此，JSON如此， Buffalo也如此。

综上所述，纯粹使用领域模型特定的输出XML传递给客户端是一种相当原始的做法。他只在很低的层次上印证了所谓AJAX的概念。然而，这种概念的深入思维结果便是一个AJAX引擎。

文中提到的第二种输出方式：HTML——应该被看作WEB的一个特例，应该说这是历史因素、浏览器能力、设计者等多方因素达到的一个平衡。许多历史 应用中，大多采用将页面进行一定规则的分割，然后include或者jsp 2.0 tagfile的方式对公共区域进行处理，留下一小部分进行动态显示。这里举一个例子：查询，显示书籍列表。传统做法就是上面一个搜索条件输入文本框，下 面是搜索结果列表，处于同一个页面。原来的搜索方式每次提交都要刷新整个页面，用户体验不太好，现在需要改进。按照激进的Ajax做法应该是当搜索按钮点 击时，调用bookSearchService.search(String terms)的方法，取得结果列表，然后Ajax引擎处理结果数据，将数据反序列化为javascript对象，开发者利用这些对象，要么利用DOM, 要么利用JavaScript Template, 在页面对搜索结果进行展示。然而，问题出现了：

搜索结果太多了，用DOM操作速度太慢；
开发者人手不够，没有时间，而这个页面以前写过；

那么出现这种情况时，很可能的做法便是，见原来那个搜索结果页面刨去其他不相干的部分，留下搜索结果部分，然后利用一个resultDiv.innerHTML=xmlhttp.responseText搞定。这样做，既达到了改善体验的效果，也提高了开发速度。

输出HTML另外一种方式文中也没有提及。事实上，HTML不仅仅作为片断，更重要的是作为页面视图的一部分。在buffalo的demo中，可以 看到所有的页面都被管理起来了，buffalo接管了视图的切换；这种设计也存在于gmail/163新版邮箱中。这个应用比上面的HTML片断的使用方 式还要重要，因为这里是缓存可以介入的地方。通过不同的缓存策略，可以将用户的实际和心理等待时间大大减少，从而进一步改善用户操作体验，提升产品竞争 力。（PS. 在Buffalo 1.3中将加入客户端缓存模块，无需你动手，buffalo为你缓存视图）

文中提及的第三种方式，JSON，根据第一部分的描述，应该比较清楚了。实际上他扮演了一个Ajax引擎的角色。这里不得不提的是，使用JSON的 相当危险的。因为他的协议表现与语言本身绑定太死。如果某一天，JSON协议变化了，那么使用JSON的应用基本上不可能应对这个变化——因为返回结果是 eval()得到的。而Buffalo将协议隐藏起来了，1.2版本甚至连服务器端的ServiceInvoker都将burlap实现依赖隔离开。现在 使用burlap，也许某一天不用了，buffalo的应用照样可以运行。因为里面的细节都是透明的，作为开发者，你只需要关注数据对象本身，而非用来描 述对象的那一堆字符。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>127</wp:post_id>
		<wp:post_date>2005-12-29 23:56:26</wp:post_date>
		<wp:post_date_gmt>2005-12-29 15:56:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ajax%e8%be%93%e5%87%ba%e7%9a%84%e4%b8%89%e7%a7%8d%e5%bd%a2%e5%bc%8f%ef%bc%9f%e9%99%b7%e5%85%a5%e5%88%b0%e4%ba%86%e7%ba%af%e7%b2%b9%e7%9a%84%e6%a6%82%e5%bf%b5%e4%b9%8b%e4%b8%ad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>579</wp:comment_id>
			<wp:comment_author><![CDATA[bing]]></wp:comment_author>
			<wp:comment_author_email>bing.ran@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.66.71.170</wp:comment_author_IP>
			<wp:comment_date>2005-12-30 13:10:41</wp:comment_date>
			<wp:comment_date_gmt>2005-12-30 05:10:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[谢谢你快速的分析。JSON 有意思的地方是是他返回来的是一段可执行的 JavaScript （可以包含，但不仅仅是简单的数据）。 而且在远程异步调用的时候， 可以传给服务器一个回调函数的名字。 JSON 多少实现了跨域的 javascript 调用。Yahoo 使用JSON 作为他们大部分 web service 的替代协议试看中了这种灵活性。这是不是和 Bufflalo  不同的发展兴趣呢？
 ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>581</wp:comment_id>
			<wp:comment_author><![CDATA[JasonZhang]]></wp:comment_author>
			<wp:comment_author_email>z_jordon@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.101.100.76</wp:comment_author_IP>
			<wp:comment_date>2005-12-31 23:32:11</wp:comment_date>
			<wp:comment_date_gmt>2005-12-31 15:32:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[JSON的这种协议方式我也比较感兴趣，非常简洁，省去了浏览器端解析XML的处理过程，在服务器端的处理也不比处理XML复杂，但是在客户端的实现方式,但是他的jsonrpc.js的实现方式我不是太喜欢，所以仿造buffalo实现了客户端。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4271</wp:comment_id>
			<wp:comment_author><![CDATA[On The Road &raquo; links for 2006-06-17]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://my.donews.com/kestrel/2006/06/17/links-for-2006-06-17/</wp:comment_author_url>
			<wp:comment_author_IP>211.100.33.116</wp:comment_author_IP>
			<wp:comment_date>2006-06-17 20:22:55</wp:comment_date>
			<wp:comment_date_gmt>2006-06-17 12:22:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Michael Chen’s Blog » Archives » 正本清源：所谓Ajax输出的三种形式 (tags: AJAX)     归类于： 每日文摘 &#8212; kestrel @ 8:21 pm [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37417</wp:comment_id>
			<wp:comment_author><![CDATA[shibc]]></wp:comment_author>
			<wp:comment_author_email>bcshi@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.195.166.15</wp:comment_author_IP>
			<wp:comment_date>2007-03-14 11:15:40</wp:comment_date>
			<wp:comment_date_gmt>2007-03-14 03:15:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[json和语言绑定太紧密，应该指js对json的内置支持吧。
如果是这样，用json也未尝不可
1 json是js内置的功能，因此json改变，js也会更新支持。
2 可以自己编写利用原型技术，自己编写解析器
3 json本身是有很强描述能力的协议形式]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67487</wp:comment_id>
			<wp:comment_author><![CDATA[kkfc]]></wp:comment_author>
			<wp:comment_author_email>paco42@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.144.102.43</wp:comment_author_IP>
			<wp:comment_date>2008-06-26 00:02:05</wp:comment_date>
			<wp:comment_date_gmt>2008-06-25 16:02:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[实质都是输出纯文本]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68257</wp:comment_id>
			<wp:comment_author><![CDATA[IT进行时]]></wp:comment_author>
			<wp:comment_author_email>zhengxianquan@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.108.110.77</wp:comment_author_IP>
			<wp:comment_date>2010-01-06 11:54:15</wp:comment_date>
			<wp:comment_date_gmt>2010-01-06 03:54:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[XML Or Json不是关键的所在，而在于协议的可控性和性能。
一般而言，XML在语义表述上可能更为完整，而JSON在于短小精悍加浏览器内置的解析支持。

从我对buffalo的分析看，buffalo所用的协议还是非常lightweight的，XML冗余的schema也降到了最低，个人认为是个非常好的实践

另一方面，从代码架构上也看出了michael对于两种选择的可选性，与其争论，不如同步实现json看看（如有时间我会考虑自己做出尝试）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>JSValidation move to sourceforge</title>
		<link>http://michael.nona.name/archives/130</link>
		<pubDate>Thu, 12 Jan 2006 14:27:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/130</guid>
		<description></description>
		<content:encoded><![CDATA[真是有意思，04年4月发布的jsvalidation, 在发布的时候受众不多，居然现在被越来越多的提及。看来纯粹的客户端校验还是很有需求的。今天登陆了一下sourceforge, 发现04年申请的项目jsvalidation现在可以使用了，于是索性将代码挪到了sf。

jsvalidation需要继续发展。根据需求，要加入的特性如下：


* 添加校验域的属性支持，校验规则不仅仅支持xml文件，还支持在要校验的表单元素中添加一个属性，例如 

[xml]
<input type="text" name="age" restriction="required integerRange(18,60)" />
[/xml]

* 更多的校验规则支持。原有的代码会重构，以接纳贡献者的校验规则。

* 加入校验失败时的回调动作，以方便开发者对校验错误进行自定义的显示。


还有更多的需求吗？请留言。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>130</wp:post_id>
		<wp:post_date>2006-01-12 22:27:33</wp:post_date>
		<wp:post_date_gmt>2006-01-12 14:27:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jsvalidation-move-to-sourceforge</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>589</wp:comment_id>
			<wp:comment_author><![CDATA[宝玉]]></wp:comment_author>
			<wp:comment_author_email>junminliu@msn.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.openlab.net.cn</wp:comment_author_url>
			<wp:comment_author_IP>211.136.92.251</wp:comment_author_IP>
			<wp:comment_date>2006-01-13 11:00:21</wp:comment_date>
			<wp:comment_date_gmt>2006-01-13 03:00:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[非.Net下，偶稀饭在input里面自定义几个属性，
例如
然后批量处理，足够应付大多数情况]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>590</wp:comment_id>
			<wp:comment_author><![CDATA[宝玉]]></wp:comment_author>
			<wp:comment_author_email>junminliu@msn.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.openlab.net.cn</wp:comment_author_url>
			<wp:comment_author_IP>211.136.92.251</wp:comment_author_IP>
			<wp:comment_date>2006-01-13 11:01:56</wp:comment_date>
			<wp:comment_date_gmt>2006-01-13 03:01:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[还我留言的HTML -_-!
&lt;input type="text" ErrorMessage="xxx required!" IsRequired="true" /&gt;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>591</wp:comment_id>
			<wp:comment_author><![CDATA[JasonZhang]]></wp:comment_author>
			<wp:comment_author_email>z_jordon@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.101.100.76</wp:comment_author_IP>
			<wp:comment_date>2006-01-17 11:22:36</wp:comment_date>
			<wp:comment_date_gmt>2006-01-17 03:22:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[就是还不太明白，为什么有些机器上的IE6已经把安全级别设为最低了，而且也已经取消了各种禁止功能，在截入XML，和创建ActiveXObject对象时还是会出错。
jsvalidation保持简单就好，个人意见，呵呵。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67124</wp:comment_id>
			<wp:comment_author><![CDATA[vb2005xu]]></wp:comment_author>
			<wp:comment_author_email>vb2005xu@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.220.28.218</wp:comment_author_IP>
			<wp:comment_date>2008-02-26 11:13:34</wp:comment_date>
			<wp:comment_date_gmt>2008-02-26 03:13:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我想限定输入的字符为常用英文字符或中文字符，请问怎样在配置文件中进行设置，使用两个depend是进行与判断，我想进行或判断，请教有何高招？使用mask的话岂不并非代码重用？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>BEA User Group Presentation</title>
		<link>http://michael.nona.name/archives/131</link>
		<pubDate>Sun, 22 Jan 2006 04:44:54 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/131</guid>
		<description></description>
		<content:encoded><![CDATA[昨天(1月22日)在Bea user group上做了一个演讲：《使用buffalo来加速你的web2.0应用开发》。从现场情况看来，开发者（背后是用户）对于ajax的需求还是很迫切，因此气氛还不错。

<a title="buffalo-presentation" href="/files/buffalo-presentation.rar">ppt以及演示的web app下载 </a>

演示的应用可以在<a href="http://demo.amowa.net/buffalo-example/login.jsp">http://demo.amowa.net/buffalo-example/login.jsp</a> 看到（感谢<a href="http://www.redsaga.com">曹晓钢</a>提供空间）]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>131</wp:post_id>
		<wp:post_date>2006-01-22 12:44:54</wp:post_date>
		<wp:post_date_gmt>2006-01-22 04:44:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bea-user-group-presentation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>595</wp:comment_id>
			<wp:comment_author><![CDATA[灵感点亮生活]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://qingfeng.ushared.com/blog/?p=163</wp:comment_author_url>
			<wp:comment_author_IP>210.78.148.46</wp:comment_author_IP>
			<wp:comment_date>2006-01-23 01:43:28</wp:comment_date>
			<wp:comment_date_gmt>2006-01-22 17:43:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>BEA User Group Presentation</strong>

周六的活动，可惜没能去参加。。。以下内容摘自Michael的Blog：
&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
昨]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Friendly URL应当作为web2.0应用首先要考虑的问题</title>
		<link>http://michael.nona.name/archives/132</link>
		<pubDate>Mon, 06 Feb 2006 10:24:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/132</guid>
		<description></description>
		<content:encoded><![CDATA[web2.0概念的提出给这个灰暗的web应用世界带来了鲜活的色彩；而ajax的使用又给用户提供了更好的操作体验。然而，在具体的使用上，他们 给开发者带来的考虑不是更少而是更多。ajax滥用比不用更加可恶——满屏的loading实在不是什么好的体验。如何真正给用户提供真正易于理解舒心畅 快的应用，是2.0应用开发者首先需要考虑的问题。

OPOA提出后，我一直在考虑一个问题：如何将操作型应用与内容型应用有机的结合起来呢？这个问题的提出并非空穴来风。实际上，除了类似于邮件这样 的简单应用不需要考虑友好URL之外，大部分web应用，无论是企业应用还是面向消费者的 web2.0应用，都存在面对友好URL的问题。例如：到底是portal/index.action?userid=10001比较好看还是 portal/michaelchen比较好看？到底是michaelchen/photo/12319 比较容易懂还是 photo/viewPhoto.action?userid=10001&photoid=12319 比较容易懂？

答案是很容易看明白，<a href="http://www.w3.org/Provider/Style/URI">一个好的URL不应该经常变动</a>。

一个典型的web2.0应用在URL上首先是友好的：看看成功的应用大多如此：Flickr,  del.icio.us, 豆瓣，等等。体贴的URL为传播、共享、搜索提供了潜在的巨大的便利，只有那些操作型应用系统才不需要考虑URL的组织方式。

因此，一个典型的web2.0应用，首先要考虑的是如何组织对外的URL——这个URL规则一旦建立，以后要进行变更的可能性就比较小（因为成本巨 大，无数 的人链接到了这个地址）。你可能采用某一个独立的模块来对这一部分进行维护。遗憾的是，传统的J2EE框架在这方面所做的事情少之又少，无论是 webwork还是struts, 都没有明显的对这方面的支持（所以说用这类框架做web2.0应用很痛苦）；tapestry相对好一些，在4.0中可以对url进行定制。另外<a href="http://tuckey.org/urlrewrite/">UrlRewriteFilter</a>对传统应用进行了修饰，但遗憾的是，怎么用怎么感觉不太好。

如何解决？我能想到的一个比较清晰的架构是：从一开始就考虑URL的结构，采用一个独立的servlet来管理URL链接，它的功能与 UrlRewriteFilter类似，但是它的结合点不是类似于product.action?id=xxx路径本身，而是直接指向相对应需要运行的 Struts/Webwork Action（或者Spring MVC的Controller）。

下午的时候无意中看到了<a href="http://www.djangoproject.com/">django</a>, 这个新型的类似于rails的快速开发框架，显然更懂web2.0——直接有了一个urls.py文件来对各类url映射进行配置，能够直接将某一个正则表达式支持的路径映射到一个执行的方法：

[python]
patterns = patterns('',
(r'^blog/$', 'blog.views.page'),
(r'^blog/page(?P\d+)/$', 'blog.views.page'),
)

# View (in blog/views.py)
def page(request, num="1"):
# Output the appropriate page of blog entries, according to num.
[/python]

上面的例子是不是能够给我们带来一些启发？

写到这里，我有了一些结论：一个完整的web2.0应用结构上应当包含两部分：URL处理引擎和Ajax引擎。前者用于在整个WWW范围内共享传 播，后者用于改善单个用户的操作体验。这样，架构渐渐完整和清晰了。不得不说的是，目前我还没有看到任何一个JavaEE web框架明显的独立出url处理引擎的概念，tapestry做了一些，但还不够独立，SpringMVC/Webwork/Struts更不提。也许 这与java在企业应用漫长的时间有关，但是在现在，这些框架已经表现出落后了。是不是buffalo应该做这件事情呢？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>132</wp:post_id>
		<wp:post_date>2006-02-06 18:24:49</wp:post_date>
		<wp:post_date_gmt>2006-02-06 10:24:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>friendly_url_should_consider_first_in_web_20</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>601</wp:comment_id>
			<wp:comment_author><![CDATA[robbin]]></wp:comment_author>
			<wp:comment_author_email>fankai@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.javaeye.com</wp:comment_author_url>
			<wp:comment_author_IP>222.67.48.134</wp:comment_author_IP>
			<wp:comment_date>2006-02-06 19:33:39</wp:comment_date>
			<wp:comment_date_gmt>2006-02-06 11:33:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Michael你好， friendly URL的重要性在看你这篇blog之前我确实没有意识到，感谢你的这篇blog提示了这个重要的问题！

顺便纠正一个小错误，Webwork提供了friendly URL的功能。Webwork提供了一个ActionMapper接口，用来抽象URL映射机制，默认的方式就是xxx.action?name=value这样，这是由DefaultActionMapper来处理的。此外webwork还提供了一个RestfulActionMapper，URL的处理规则是这样的，如你上面举例中：
portal/index/10001
photo/viewPhoto/10001/photoid/12319
product/xxx
当然，也完全可以自己编写一个ActionMapper实现类，然后在webwork.properties里面替换默认的DefaultActionMapper实现。

特别值得一提的是，webwork的的form tag, url tag, action tag在生成具体的URL的时候，是根据ActionMapper来生成的，所以使用这些tag来构造出来的URL不论你怎么替换ActionMapper规则，生成出来的URL总是符合你定制URL的需要，也就是说，当你项目做完了以后，你又不满意默认的URL，自己写了ActionMapper，那么你也完全不需要修改页面里面的URL字符串，页面的tag生成出来的URL已经全部自动改成你需要的URL了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>602</wp:comment_id>
			<wp:comment_author><![CDATA[robbin]]></wp:comment_author>
			<wp:comment_author_email>fankai@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.javaeye.com</wp:comment_author_url>
			<wp:comment_author_IP>222.67.48.134</wp:comment_author_IP>
			<wp:comment_date>2006-02-06 19:35:59</wp:comment_date>
			<wp:comment_date_gmt>2006-02-06 11:35:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Spring MVC我不是很熟悉，但是似乎也提供了类似可替换的机制]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>603</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>221.218.235.43</wp:comment_author_IP>
			<wp:comment_date>2006-02-06 23:10:42</wp:comment_date>
			<wp:comment_date_gmt>2006-02-06 15:10:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[多谢你，Robbin, 纠正了blog中的错误。我刚刚阅读了webwork的refence文档，看到了ActionMapper的介绍。从介绍说来，他确实可以完成类似于友好URL的操作。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>613</wp:comment_id>
			<wp:comment_author><![CDATA[oofrank]]></wp:comment_author>
			<wp:comment_author_email>oofrank@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.donews.net/oofrank</wp:comment_author_url>
			<wp:comment_author_IP>61.172.253.180</wp:comment_author_IP>
			<wp:comment_date>2006-02-10 11:17:35</wp:comment_date>
			<wp:comment_date_gmt>2006-02-10 03:17:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[受益非浅，url也是UI的一部分了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>614</wp:comment_id>
			<wp:comment_author><![CDATA[游客999]]></wp:comment_author>
			<wp:comment_author_email>test@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.18.204.156</wp:comment_author_IP>
			<wp:comment_date>2006-02-17 10:57:04</wp:comment_date>
			<wp:comment_date_gmt>2006-02-17 02:57:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[webwork2.1没有相关的接口。。是2.2吧？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2857</wp:comment_id>
			<wp:comment_author><![CDATA[shoopman]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.csdn.net/shoopman/archive/2006/05/23/750994.aspx</wp:comment_author_url>
			<wp:comment_author_IP>211.100.21.184</wp:comment_author_IP>
			<wp:comment_date>2006-05-23 13:31:30</wp:comment_date>
			<wp:comment_date_gmt>2006-05-23 05:31:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>struts项目中的JSP文件命名问题</strong>

struts项目中的JSP文件命名问题总结]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9496</wp:comment_id>
			<wp:comment_author><![CDATA[fkpwolf]]></wp:comment_author>
			<wp:comment_author_email>fkpwolf@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://hi.baidu.com/fkpwolf</wp:comment_author_url>
			<wp:comment_author_IP>202.106.78.163</wp:comment_author_IP>
			<wp:comment_date>2006-08-25 09:48:05</wp:comment_date>
			<wp:comment_date_gmt>2006-08-25 01:48:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不知道你说的是不是url rewrite的意思。
https://urlrewrite.dev.java.net/有类似的功能]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>使用buffalo作为webwork的验证机制-实现</title>
		<link>http://michael.nona.name/archives/137</link>
		<pubDate>Wed, 08 Feb 2006 07:57:16 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/137</guid>
		<description></description>
		<content:encoded><![CDATA[要的人比较多，废话少说，放代码：

ValidationError.java, 主要是错误信息的一个DTO
[java]
public class ValidationError {
	private String name;
	private String value;
	
	public ValidationError() {
		
	}
	
	public ValidationError(String name, String value) {
		this.name = name;
		this.value = value;
	}
	
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getValue() {
		return value;
	}
	public void setValue(String value) {
		this.value = value;
	}
	
}
[/java]

ValidationService.java, buffalo要使用的service, 代码不复杂，没有注释，原理见<a href="http://michael.nona.name/archives/123">前一篇文章</a>
[java]
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import com.opensymphony.xwork.Action;
import com.opensymphony.xwork.ActionContext;
import com.opensymphony.xwork.ActionProxy;
import com.opensymphony.xwork.DefaultActionInvocation;
import com.opensymphony.xwork.DefaultActionProxy;
import com.opensymphony.xwork.ValidationAware;
import com.opensymphony.xwork.config.entities.ActionConfig;
public class ValidationService {
	public List validate(String namespace, String action, Map parameters) {
		List errorList = new ArrayList();
		Action requestedAction = null;
		HashMap ctx = new HashMap();
		ctx.put(ActionContext.PARAMETERS, parameters);
		ValidatorActionProxy proxy;
		try {
			proxy = new ValidatorActionProxy(namespace, action, ctx);
			proxy.execute();
			requestedAction = proxy.getAction();
		} catch (Exception e) {
			e.printStackTrace();

			return null;
		}

		if (requestedAction instanceof ValidationAware) {
			ValidationAware va = (ValidationAware) requestedAction;
			Map fe = va.getFieldErrors();
			for (Iterator iterator = fe.entrySet().iterator(); iterator
					.hasNext();) {
				Map.Entry entry = (Map.Entry) iterator.next();
				String name = (String) entry.getKey();
				List errors = (List) entry.getValue();
				for (Iterator iterator1 = errors.iterator(); iterator1
						.hasNext();) {
					String error = (String) iterator1.next();
					errorList.add(new ValidationError(name, error));
				}
			}
		}

		return errorList;

	}

	public static class ValidatorActionInvocation extends
			DefaultActionInvocation {
		protected ValidatorActionInvocation(ActionProxy proxy, Map extraContext)
				throws Exception {
			super(proxy, extraContext, true);
		}

		protected String invokeAction(Action action, ActionConfig actionConfig)
				throws Exception {
			return Action.NONE; // don't actually execute the action
		}
	}

	public static class ValidatorActionProxy extends DefaultActionProxy {
		protected ValidatorActionProxy(String namespace, 
				String actionName,
				Map extraContext) throws Exception {
			super(namespace, actionName, extraContext, false);
		}

		protected void prepare() throws Exception {
			invocation = new ValidatorActionInvocation(this, extraContext);
		}
	}
}
[/java]

buffalo-service.properties
[txt]
validationService=your.package.ValidationService
[/txt]

更改webwork模板中的simple/form.vm:
[html]
<form onsubmit="return validate(this);" ...
[/html]

最后，加入一个validate.js。用的是buffalo 1.1版本（写的时候的版本）。
[javascript]
var currentForm = null;

var getContextPath = function() {
	var ctxPath = "";
    $A(document.getElementsByTagName("script")).findAll( function(s) {
      return (s.src && s.src.match(/buffalo\.js(\?.*)?$/))
    }).each( function(s) {
      var path = s.src.replace(/script\/buffalo\.js(\?.*)?$/,'');
	  ctxPath = path;
    });

	return ctxPath;
}

function validate(theForm) {
	var buffaloURL = getContextPath()+"BUFFALO";
	var buffalo = new Buffalo(buffaloURL);
	buffalo.events["onLoading"] = function() {}
	var parameters  = {};
	for (var i = 0; i < theForm.elements.length; i++) {
        var e = theForm.elements[i];
        parameters[e.name] = e.value;
    }
    currentForm = theForm;
    var actionName = theForm.name;
    if (actionName.indexOf("do") != 0) {
	    actionName = "do"+actionName.charAt(0).toUpperCase() + actionName.substring(1);
	}
	Form.disable(theForm.id);
    buffalo.remoteCall("validationService.validate", 
    	[theForm.getAttribute("namespace"), actionName, parameters], callback) ;
    return false;
}

function callback(reply) {
	Form.enable(currentForm.id);
	var insideTable = currentForm.getElementsByTagName("TABLE")[0];
	clearErrorRows(insideTable);
	clearErrorLabels(currentForm);
	var errors = reply.getResult();
	if (errors == null) {alert(null); return; }
	if (errors.length > 0) {
		for (var i = 0; i < errors.length; i++) {
			var error = errors[i];
			var element = currentForm.elements[error.name];
                addError(element, error.value);
		}
		
	} else {
		currentForm.submit();
		Form.disable(currentForm.id);
	}
}

function clearErrorRows(table) {
    // clear out any rows with an "errorFor" attribute
    var rows = table.rows;
    var rowsToDelete = new Array();
    for(var i = 0; i < rows.length; i++) {
        var r = rows[i];
        if (r.getAttribute("errorFor")) {
            rowsToDelete.push(r);
        }
    }

    // now delete the rows
    for (var i = 0; i < rowsToDelete.length; i++) {
        var r = rowsToDelete[i];
        table.deleteRow(r.rowIndex);
    }
}

function clearErrorLabels(form) {
    // set all labels back to the normal class
    var elements = form.elements;
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var cells = e.parentNode.parentNode.cells;
        if (cells && cells.length >= 2) {
            var label = cells[0].getElementsByTagName("label")[0];
            if (label) {
                label.setAttribute("class", "label");
            }
        }
    }

}
function addError(e, errorText) {
    try {
        var row = e.parentNode.parentNode;
        var table = row.parentNode;
        var error = document.createTextNode(errorText);
        var tr = document.createElement("tr");
        var td = document.createElement("td");
        var span = document.createElement("span");
        td.align = "center";
        td.valign = "top";
        td.colSpan = 2;
        span.className="errorMessage";
        span.appendChild(error);
        td.appendChild(span);
        tr.appendChild(td);
        tr.setAttribute("errorFor", e.id);;
        table.insertBefore(tr, row);
        var label = row.cells[0].getElementsByTagName("label")[0];
        label.setAttribute("class", "errorLabel");
    } catch (e) {
        alert(e);
    }
}
[/javascript]

调用流程：实际上表单提交前buffalo将整个表单送到了后台并利用ValidationService执行了一次action，看有没有错误，如果没有错误才真正提交，否则通过js对页面进行相应的提示。

注意事项：1, 一些拦截器需要ActionContext中含有servlet等信息，由于ValidationService不带有这些信息，因此这些拦截器可能会在校验的时候报错；2, webwork的某些校验器的错误提示信息有些并不返回，因此不是所有的校验错误都能返回，但绝大多数都能满足了；3, 不要期待你写的actionError信息也能通过这种方式返回——当然你可以自己写，但在这个实现中，只能返回校验错误信息.</form>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>137</wp:post_id>
		<wp:post_date>2006-02-08 15:57:16</wp:post_date>
		<wp:post_date_gmt>2006-02-08 07:57:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bd%bf%e7%94%a8buffalo%e4%bd%9c%e4%b8%bawebwork%e7%9a%84%e9%aa%8c%e8%af%81%e6%9c%ba%e5%88%b6-%e5%ae%9e%e7%8e%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>608</wp:comment_id>
			<wp:comment_author><![CDATA[SU]]></wp:comment_author>
			<wp:comment_author_email>suyejun@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.67.103.220</wp:comment_author_IP>
			<wp:comment_date>2006-02-08 19:46:41</wp:comment_date>
			<wp:comment_date_gmt>2006-02-08 11:46:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有个小问题，就是不能消除前一次列出的错误，每次都是新增错误，请问是不是我什么地方没有注意呢？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>609</wp:comment_id>
			<wp:comment_author><![CDATA[SU]]></wp:comment_author>
			<wp:comment_author_email>suyejun@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.67.103.220</wp:comment_author_IP>
			<wp:comment_date>2006-02-08 22:23:50</wp:comment_date>
			<wp:comment_date_gmt>2006-02-08 14:23:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[请问clearErrorLabels(form)方法有什么用呢？还有，我把代码改成如下就正常了：
var currentForm = null;

var getContextPath = function() {
	var ctxPath = "";
    $A(document.getElementsByTagName("script")).findAll( 
    	function(s) {
      		return (s.src &amp;&amp; s.src.match(/buffalo\.js(\?.*)?$/))
    	}).each( 
			function(s) {
				var path = s.src.replace(/script\/buffalo\.js(\?.*)?$/,'');
				ctxPath = path;
			});
	return ctxPath;
}

function validate(theForm) {
	var buffaloURL = getContextPath()+"BUFFALO";
	var buffalo = new Buffalo(buffaloURL);
//	buffalo.events["onLoading"] = function() {}
	var parameters  = {};
	for (var i = 0; i  0) {
		for (var i = 0; i = 2) {
            var label = cells[0].getElementsByTagName("label")[0];
            if (label) {
                label.setAttribute("class", "label");
            }
        }
    }
}
function addError(e, errorText) {
	try {
        var row = e.parentNode.parentNode;//TR
        var table = row.parentNode;//TBODY
        var error = document.createTextNode(errorText);
        var tr = document.createElement("tr");
        var td = document.createElement("td");
        var span = document.createElement("span");
        td.align = "left";
        td.valign = "top";
        td.colSpan = 2;
        td.bgColor = "yellow";
        span.className = "errorMessage";
        span.appendChild(error);
        td.appendChild(span);
        tr.appendChild(td);
        tr.setAttribute("errorFor", e.id);
        table.insertBefore(tr, row);
//        var label = row.cells[0].getElementsByTagName("label")[0];
//        label.setAttribute("class", "errorLabel");
    } catch (e) {}
}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>610</wp:comment_id>
			<wp:comment_author><![CDATA[SU]]></wp:comment_author>
			<wp:comment_author_email>suyejun@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.67.103.220</wp:comment_author_IP>
			<wp:comment_date>2006-02-08 22:26:03</wp:comment_date>
			<wp:comment_date_gmt>2006-02-08 14:26:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有几句话被屏蔽了，主要是在callback里面加了	
var insideTable = currentForm.getElementsByTagName("TABLE");
for(var i=0;i]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>611</wp:comment_id>
			<wp:comment_author><![CDATA[SU]]></wp:comment_author>
			<wp:comment_author_email>suyejun@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.67.103.220</wp:comment_author_IP>
			<wp:comment_date>2006-02-08 22:27:23</wp:comment_date>
			<wp:comment_date_gmt>2006-02-08 14:27:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有些代码不能写不出来。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>612</wp:comment_id>
			<wp:comment_author><![CDATA[baoyuhua]]></wp:comment_author>
			<wp:comment_author_email>baoyuhua@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://spaces.msn.com/baoyuhua/</wp:comment_author_url>
			<wp:comment_author_IP>219.232.0.139</wp:comment_author_IP>
			<wp:comment_date>2006-02-09 09:27:29</wp:comment_date>
			<wp:comment_date_gmt>2006-02-09 01:27:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有些问题想请教一下，我的MSN:baoyuhua@hotmail.com]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>让SpringMVC也支持自定义url mapping</title>
		<link>http://michael.nona.name/archives/139</link>
		<pubDate>Fri, 10 Feb 2006 08:26:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/139</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://opensource2.atlassian.com/projects/spring/browse/SPR-703">[#SPR-703] Make Controller aware of the url mapping - Spring Framework</a>

提供了一个RegexUrlMappingHandler, 可以支持类似于以下的使用：

[xml]
<bean id="regexUrlMapping" class="spring.handler.RegexUrlHandlerMapping">
        <property name="mappings">
<props>
    <prop key="/archive/(\d{4})/(\d{2})/(.*).html">blogArchiveController</prop>
</props>
        </property>
</bean> [/xml]

在Spring controller中：

[java]
Map objects = new HashMap();
objects.put("year", parameters.get(0));
objects.put("month", parameters.get(1));
objects.put("tag", parameters.get(2));
return new ModelAndView("/archive.jsp", objects); [/java]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>139</wp:post_id>
		<wp:post_date>2006-02-10 16:26:37</wp:post_date>
		<wp:post_date_gmt>2006-02-10 08:26:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%ae%a9springmvc%e4%b9%9f%e6%94%af%e6%8c%81%e8%87%aa%e5%ae%9a%e4%b9%89url-mapping-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>4270</wp:comment_id>
			<wp:comment_author><![CDATA[On The Road &raquo; links for 2006-06-17]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://my.donews.com/kestrel/2006/06/17/links-for-2006-06-17/</wp:comment_author_url>
			<wp:comment_author_IP>211.100.33.116</wp:comment_author_IP>
			<wp:comment_date>2006-06-17 20:22:30</wp:comment_date>
			<wp:comment_date_gmt>2006-06-17 12:22:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Michael Chen’s Blog » Archives » 让SpringMVC也支持自定义url mapping (tags: Spring Java) [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6305</wp:comment_id>
			<wp:comment_author><![CDATA[莫多泡泡2006]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://leaf.jdk.cn//default.asp?id=30</wp:comment_author_url>
			<wp:comment_author_IP>222.187.122.28</wp:comment_author_IP>
			<wp:comment_date>2006-07-11 22:16:53</wp:comment_date>
			<wp:comment_date_gmt>2006-07-11 14:16:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>让SpringMVC也支持自定义url mapping</strong>

[#SPR-703] Make Controller aware of the url mapping - Spring Framework
...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>狂想年代</title>
		<link>http://michael.nona.name/archives/140</link>
		<pubDate>Sun, 12 Feb 2006 15:25:19 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/140</guid>
		<description></description>
		<content:encoded><![CDATA[这是一个狂想的年代，没有想法的人是可耻的。

在元宵节的晚上，吃完奇大无比的元宵，我与往常一样写着各式各样不同的代码，继续在Fireworks中画来画去，然后与apache, python斗争。忽然与小龙聊了起来，他说，今年有10个项目要做，吓我一跳。2005整整一年，除了工作的项目，我也就做了一件事情而已。然而，想法多未见得是好事，比如我就没有看到他做成熟的任何一件产品。

有一些以外的耳闻：一个网络游戏币交易网站，一个月居然有300~400万的现金进出，这一点让我匪夷所思。我玩的网络游戏仅仅是WoW, 汗颜的时候直到现在一张点卡还没有完，所以很费解为什么这样的一个小网站能够赚到这样多的钱。看来，IT正在逐渐成为渗透力最强的行业，我们身处其中，却越来越看不透：因为IT已经成为了商业的组成部分，而写程序的我们，当然不懂商业。

让我觉得比较有趣的是，他打算做一个联合通行证。很明显一看就知道是什么：一个通行证能够访问所有支持这个通行证的网站/社区，享受所有的服务。这样的思路在许多很2的blog中出现过，但没有人做出来。我的担心一如大众：能不能取得足够多的社区的支持？而小龙的回答充满社会责任感：

<blockquote>这个东西本身没有什么盈利模式 但主要是提供一种方便 一种服务 <br />
一个帐户 通行神州 至少是个人网站 </blockquote>

显然，越来越多的人意识到，人性化，方便的服务正逐渐取代技术而成为产品能否成功的关键。我发现，只要提供给消费者可用、优质的服务，真心实意地为消费者考虑，一定有出路。这是一个最好的时代，也是一个最坏的时代，一个产品得到消费者认可需要的时间越来越长，只有狂想着提高产品可用性，以提供最好用户体验为目的的人/公司，才能真正获得回报。这种回报发自真心的、忠诚度极高的回报。回报是你狂想的附加值，不是你追求的目的，就像大海，浪花只是前进标志，而不是停止的信号。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>140</wp:post_id>
		<wp:post_date>2006-02-12 23:25:19</wp:post_date>
		<wp:post_date_gmt>2006-02-12 15:25:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>crazy-era</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>关于buffalo的安全问题</title>
		<link>http://michael.nona.name/archives/142</link>
		<pubDate>Wed, 22 Mar 2006 15:56:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/142</guid>
		<description></description>
		<content:encoded><![CDATA[感谢董董以及各位用户提出这个问题。这个问题在以前的时候虽然留意过，但没想到会给实际的运行用户带来这么大的影响；现在看来，很有必要为buffalo加上安全控制的部分了。

考虑到一些实际运营的系统已经上线，以及buffalo升级新版本的速度无法满足现在的需要，现在提出一些解决方案供参考。由于时间关系，这些方案没有经过实际的代码验证，但在方向以及结构上没有问题，供急切的同志使用。

1 问题提出

当一个应用部署到www.domain-a.com的时候，buffalo的特定servlet被暴露出来，这个servlet只接受buffalo请求(xml格式)。我们知道xmlhttp无法跨域访问，但在IE浏览器中，如果本地存在访问这个远程buffalo服务的网页并运行，你会发现没有任何警告就能访问远程。这是相当危险的操作，因为很多时候buffalo不仅完成读取数据，还完成修改数据的操作。恶意用户如果知道服务方法的命名，很容易模拟请求发送，造成损害。

这个场景同样存在于将页面置于http://localhost/
的情况。IE会认为这是本地操作，可以访问远程，只是会弹出一个警告是否允许与远程数据交互。但这种情况不会出现在www.domain-b.com上——也就是说，两个远程域之间的交互是不可以的。

然而，在Firefox上——根据我的测试，无论是本地，还是localhost, 都无法与domain-a.com交互。他的安全限制更严格。

2 如何解决问题？

现在我们知道这个问题归根结底是xmlhttp的问题。几乎所有的带有java->javascript序列化的框架都存在这个问题，dwr,
json, buffalo都有。http://getahead.ltd.uk/dwr/security
这里讨论了dwr的安全问题，文档中很巧妙地将这个问题回避过去，但是这里
http://iremia.univ-reunion.fr/intranet/wiki/Wiki.jsp?page=DWRandAcegi
又提供了对应的解决方案。这个解决方案针对buffalo也同样有用。

问题解决的基本原理是根据cookie来进行校验(或者session，都可以)。我们知道，从file://a.html发送到http://domain-a.com的请求，如果此时我们获取request.getCookie，是无法获取的，这可以作为判断的依据；session也一样；他们都只对特定域名以及当前应用下的请求保留session或者cookie状态，来自其他地方的请求不包含这些状态，因此可以进行区分。区分开之后，就可以拒绝这些请求，要么抛异常，要么转到其他页面。

实现方式上，根据buffalo service的部署方式的不同，可以分为两种：
i) 写在properties文件中。我估计没有多少系统这样做因为创建服务实例效率低下。但如果这么做了，可行的办法就是改写代码，在代码中加入访问来源地判断(request.getCookie).
这是简单的做法，如果代码不多可以这么完成。一些静态植入的AOP方案可以更优雅的解决这个问题，如AspectJ, AspectWerkz等

ii) 写在Spring配置文件中。这种方式下比较容易。步骤如下：
 - 将原来的service移入到ProxyFactoryBean中
 - 在ProxyFactoryBean中添加一个拦截器
 - 拦截器完成了方法调用的拦截
 - 其他代码不变

例如：原来有一个UserService:

<bean id="userService" ...>

现在改为
</bean><bean id="userServiceBuffaloTarget" ...>

添加一个ProxyFactoryBean并设置拦截器：
</bean><bean id="userService" class="...ProxyFactoryBean">
   <property name="target" ref="userServiceTarget"/>
   <property name="interceptorNames">
           <idref local="myBuffaloSecurityInterceptor" />
       </property>
</bean>

myBuffaloSecurityIntereptor:

class MyBuffaloSecurityInterceptor implements MethodInterceptor
   Object invoke(MethodInvocation i) throws Throwable {

     HttpServletRequest request = context.getRequest();
    if (request.getCookie()...) {
          return i.proceed();
     } else
    throw SecurityException;

  }

Request对象的获取方式可以加入一个filter每次请求的时候绑定到ThreadLocal中。

上述方案供参考。

3 考虑更多...

由于http是无状态的协议，xmlhttp的引入使得他远程调用的意味更加浓厚。这样的话，许多客户端可以对远程服务进行hack.
这就超出了buffalo所能控制的范围。Prototype中直接回避了这个问题而只提供AHAH的方式使得这些问题能够被传统的网站安全技术来处理。

安全方面，acegi更加全面但也带来相当的复杂性和学习成本；在这个案例中，应用的安全不是最重要的，相反访问的安全才最重要。上述的方案能够防止服务器方法被恶意执行，但无法防范被恶意重复访问。当然这可以通过常规的安全策略来控制了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>142</wp:post_id>
		<wp:post_date>2006-03-22 23:56:10</wp:post_date>
		<wp:post_date_gmt>2006-03-22 15:56:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%85%b3%e4%ba%8ebuffalo%e7%9a%84%e5%ae%89%e5%85%a8%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_33b5f2a53a0b4b1d7a63b159d74c20ec</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_de893eca5170cc073d3db5d8ed0dc6eb</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>温水煮青蛙</title>
		<link>http://michael.nona.name/archives/143</link>
		<pubDate>Wed, 29 Mar 2006 14:32:05 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/143</guid>
		<description></description>
		<content:encoded><![CDATA[对青蛙而言，这是一个相当残忍的比喻，虽然大多数引用这个比喻的人并不清楚青蛙在温水中是否真正不会跳出来而一直被煮成青蛙汤。

很久以前我写过一篇<a href="http://michael.nona.name/archives/62">blog</a>，表达了我对目前国内技术现状的一种思考：希望有更多的人能够不仅仅跟随，更能够提出震撼性的技术框架/技术特点出来。然而，那个时候许多人包括干脆放弃了希望安心的做起了传教士，安慰着自己也麻痹着别人。那个时候是J2EE的鼎盛时期，而就在那个时候一个26岁的小伙子，一个J2EE的newbie, 写了今天无人不知的Rails，以及诞生了Web2.0代表性公司：37Signals. 

接触到一些优秀的程序员，并非我们想象的那么悠闲，只是更倾向于寻求合作、贡献、参与而不是独来独往、寻找借口、不加思考的索取；更不是对思考者的漠然旁观。

现在，我们眼睁睁的看着这个软件时代逐渐分开和细化：面向企业应用的J2EE+.NET等, 面向消费应用的Python, Rails等。事实已经证明，消极的跟随只能使自己的水温越来越高，唯有贡献与参与才能永远保持警醒。努力成为使水温变高的人，而永远不要成为水盆中的青蛙！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>143</wp:post_id>
		<wp:post_date>2006-03-29 22:32:05</wp:post_date>
		<wp:post_date_gmt>2006-03-29 14:32:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b8%a9%e6%b0%b4%e7%85%ae%e9%9d%92%e8%9b%99</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>1403</wp:comment_id>
			<wp:comment_author><![CDATA[郑昀]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.csdn.net/zhengyun_ustc/archive/2006/04/22/672972.aspx</wp:comment_author_url>
			<wp:comment_author_IP>211.100.21.184</wp:comment_author_IP>
			<wp:comment_date>2006-04-22 13:38:00</wp:comment_date>
			<wp:comment_date_gmt>2006-04-22 05:38:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[收藏]不仅仅跟随更能够提出震撼性的技术框架/技术特点出来</strong>

很久以前Michael Chen写过一篇blog，表达了Michael Chen对目前国内技术现状的一种思考：希望有更多的人能够不仅仅跟随，更能够提出震撼性的技术框架/技术特点出来。然而，那个时候许多人包括]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1404</wp:comment_id>
			<wp:comment_author><![CDATA[myan]]></wp:comment_author>
			<wp:comment_author_email>meng.yan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.csdn.net/myan</wp:comment_author_url>
			<wp:comment_author_IP>219.236.60.44</wp:comment_author_IP>
			<wp:comment_date>2006-04-22 16:41:44</wp:comment_date>
			<wp:comment_date_gmt>2006-04-22 08:41:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[您的观点很精彩。因为职业的关系，我有机会接触中国程序员中一些具有开拓精神的人，他们的东西不能不说没有创新性，但是要说具有“震撼性”，我必须实话实说，没有见到过。

如果您在北京，希望有时间来CSDN坐坐，我们可以聊一下这个话题。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1408</wp:comment_id>
			<wp:comment_author><![CDATA[zhengyun]]></wp:comment_author>
			<wp:comment_author_email>zhengyun@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.csdn.net/zhengyun_ustc/</wp:comment_author_url>
			<wp:comment_author_IP>61.49.113.141</wp:comment_author_IP>
			<wp:comment_date>2006-04-23 13:04:23</wp:comment_date>
			<wp:comment_date_gmt>2006-04-23 05:04:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看了你的post，很有感触，所以申请引用，谢了！
http://blog.csdn.net/zhengyun_ustc/archive/2006/04/22/672972.aspx]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>一年~buffalo 1.2.3发布</title>
		<link>http://michael.nona.name/archives/145</link>
		<pubDate>Fri, 28 Apr 2006 09:56:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/145</guid>
		<description></description>
		<content:encoded><![CDATA[从buffalo 1.0发布到现在1.2.3, 一年。特征见 http://www.javaeye.com/jira/browse/BUFFALO. 

最大的支持：

* 支持对同一buffalo对象的remoteCall重复调用。现在你可以这么写了：

<code>buffalo.remoteCall...
buffalo.remoteCall...</code>

* 核心功能(remoteCall, bindReply) 支持Safari, Opera

* 为远程调用对象添加了Buffalo.BOCLASS属性。这个特性可以使得对象可能在服务器端与客户端进行无差别传递。




]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date>2006-04-28 17:56:33</wp:post_date>
		<wp:post_date_gmt>2006-04-28 09:56:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%80%e5%b9%b4buffalo-123%e5%8f%91%e5%b8%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>1566</wp:comment_id>
			<wp:comment_author><![CDATA[Tin]]></wp:comment_author>
			<wp:comment_author_email>iamtin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogjava.net/iamtin/</wp:comment_author_url>
			<wp:comment_author_IP>218.246.84.91</wp:comment_author_IP>
			<wp:comment_date>2006-04-28 18:44:59</wp:comment_date>
			<wp:comment_date_gmt>2006-04-28 10:44:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool！老麦在TW工作顺利么？还能抽出时间写Buffalo真不容易。支持，祝你新婚快乐！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>艰于书写</title>
		<link>http://michael.nona.name/archives/147</link>
		<pubDate>Tue, 09 May 2006 10:40:23 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/147</guid>
		<description></description>
		<content:encoded><![CDATA[不知道对于别人而言，环境的改变（时间、空间）会对他的写作、创作或者想法甚至生活产生何种的影响，但至少对我而言，从二月到现在的近三个月里，我艰难书写。一般来说，一个停止了书写，那么也必定停止了有效思考，意味着在跟从。有人做过这样的试验：将一只毛毛虫放在桌上，让它绕圈爬；然后后面跟足够多的毛毛虫，足够绕成一个圈。于是这群毛毛虫就后一个跟前一个，陷入了万劫不复的循环中，直至力竭。北京到西安，于我是对家人的一个交待；于技术或者更多层面，原本没有注意的资源一下子被抽掉，像一颗原本刚刚发芽的稻苗，被粗鲁地扯起移栽到了稻田。这种突然的感觉有点失落，比较糟糕。

今年，2006年，浮躁笼罩了整个IT圈，到处充满了欲望的气息。原来一起对技术指手画脚的朋友，现在默默地被换了代，开始为了更实际的东西而奔走；错过了六七年前那个疯狂的年代，这个癫痫的时代也许能够做些什么，为自己，为将来，为这个燃烧得差不多的青春。中国大量的有才华有想法的程序员，编写了一个又一个的应用，或仿造，或原创，将这欲望的气氛烘得更热闹。

五一过了，还有许多没有干完的事情，戒除浮躁，继续努力。

ps.1: 更新了blog的模板，我还是喜欢这种清淡简单一点界面。
ps.2: 7号去了西安北大街书城，感觉不错。共三层，没有西单，王府井书店大，但是人少，层高，过道很宽，感觉很开阔。我已基本不买计算机类图书，因此那些其他类的书对我而言足够了。买了几本小说，修身养性。:)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date>2006-05-09 18:40:23</wp:post_date>
		<wp:post_date_gmt>2006-05-09 10:40:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%89%b0%e4%ba%8e%e4%b9%a6%e5%86%99</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>1940</wp:comment_id>
			<wp:comment_author><![CDATA[Tin]]></wp:comment_author>
			<wp:comment_author_email>iamtin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogjava.net/iamtin/</wp:comment_author_url>
			<wp:comment_author_IP>61.50.213.6</wp:comment_author_IP>
			<wp:comment_date>2006-05-11 21:56:27</wp:comment_date>
			<wp:comment_date_gmt>2006-05-11 13:56:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[各个风格够简洁，但不如那个Tiger风格酷。看来去新单位也是个挑战，我以为跳了以后路会平坦呢。谁知下一跳怎样呢。但是，我倒觉得心态的变化也许和结婚有关吧。我也像今年结婚呢，到底是否可怕？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1933</wp:comment_id>
			<wp:comment_author><![CDATA[郁也风]]></wp:comment_author>
			<wp:comment_author_email>wjianxu@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.someok.com</wp:comment_author_url>
			<wp:comment_author_IP>221.137.82.152</wp:comment_author_IP>
			<wp:comment_date>2006-05-10 22:17:00</wp:comment_date>
			<wp:comment_date_gmt>2006-05-10 14:17:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵，如此相似的心境，如此相似的处境。

另外就是，随着年龄的增长，对于技术的那份狂热逐渐淡去，偶尔想想，甚是惊悚]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1955</wp:comment_id>
			<wp:comment_author><![CDATA[poo]]></wp:comment_author>
			<wp:comment_author_email>xiangtool@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.107.127.254</wp:comment_author_IP>
			<wp:comment_date>2006-05-13 21:56:44</wp:comment_date>
			<wp:comment_date_gmt>2006-05-13 13:56:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[seen 


签名：My Blog
--------------------------
http://spaces.msn.com/jiangyouxiaozi/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>大隐于市，小隐于野</title>
		<link>http://michael.nona.name/archives/148</link>
		<pubDate>Sun, 14 May 2006 12:10:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/148</guid>
		<description></description>
		<content:encoded><![CDATA[上午9点的时候，一个朋友来找我；一不小心我电话关机了，于是他很郁闷的走了一个小时的路到火车站，悻悻然准备改签到中午的火车。赶紧打电话拦住他，请吃饭后便陪他去买书。

朋友家开了一个小的租书摊，要更新若干网络小说。我一听有书可以看，兴致很高：说不定我也可以买几本书消遣了，而且会以很低的价钱。他瞥了我一眼，不屑的说：那些书你不会有兴趣的。

坐上出租，朋友说了一个相当古怪的名字——我想再让我走一遍我也不知道在哪里——出租车绕过玉祥门，进入自强东路，然后我便不知道东南西北了。出租车经过几个很窄的街道后，我都快要睡着了，朋友说，到了。下车抬眼一看：很深的一个弄堂模样的店堂，里面全是卖榔头、钳子、水泵之类的五金店铺。没搞错吧？我问他。他哼了哼声，说：你知不知道什么叫“大隐隐于市，小隐隐于野”？我恍然：难道这个图书批发的地方，夹杂在这些五金店铺里面？半信半疑，我随他走到了弄堂尽头，正愁没有路走了，他往右一拐，跨上了不足一米宽的楼梯。上了二楼，往前一看，仍是一面巨大的水泵广告牌，一些铺子开着门，一些店铺却关着。我正想说一些风凉话，没想到朋友右转一下，已经和一个中年妇女搭上话了：老板，我来看一些书。

我这才注意到进了一间大约20平米的店铺：四面墙、地上全是书。大致瞟了一眼，几乎全是网络小说，而且是那种一写就十几册的那种。注意到大部分书都印刷不太精细，封面大同小异，当然也不乏一些印刷精美的。趁着朋友挑书的间隙，我到其他店面转了一圈，发现新出版的各种文学、经管、典籍类书籍居然都有，而且印刷精美。只是不知道定价如何，转了一圈回来，最后交钱才发现，那些小说，才是定价的四分之一。

回来的路上，想着“大隐于市”的这个问题，不仅觉得有点意思。记得前几年在西安的时候，一个朋友带我去吃烤肉。一路上左拐右拐，走过一条长长的黑胡同，忽然豁然开朗，只见前方一个酷似民房的房间里，一群食客正大快朵颐，门口的烤肉摊上白烟袅袅，飘来阵阵香味。要了几串一尝，果然香而不腻，瘦而不柴，一口咬下去满嘴留香，跟外面街边的不能同日而语。是否这也算“大隐于市”呢？我虽然时常念叨着去新疆吃烤肉，但是虽非“隐”，但对于我来讲“于野”，想要达到目标，轻易还是不行的。

我知道这些解释粗俗的很。今天买书的际遇明眼人一看便知，那些卖书买书并非因风雅而隐；吃烤肉的那一次其实仔细想想，从复杂的胡同中找到一个吃烤肉的地方，这种找寻的快乐本身就要比来自舌头的要多，并且在从新疆吃完回来后，更觉天下吃烤羊肉的地方非新疆昌吉莫属。<a href="http://zhidao.baidu.com/question/34793.html">百度知道</a>的解释显然比我的这层理解要高雅许多。然而，在这个商业竞争极其激烈的今天，所谓大隐小隐，无非为了满足某些利益需求。然而，一些“隐”出现于市的时候：比如一些私人开的小玩意儿，仅仅为了满足小众需求，大隐于市。若兴趣相投，又得朋友引荐寻得门径，找寻的过程加上愉快的体验，岂非快哉。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>148</wp:post_id>
		<wp:post_date>2006-05-14 20:10:35</wp:post_date>
		<wp:post_date_gmt>2006-05-14 12:10:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a4%a7%e9%9a%90%e4%ba%8e%e5%b8%82%ef%bc%8c%e5%b0%8f%e9%9a%90%e4%ba%8e%e9%87%8e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>3457</wp:comment_id>
			<wp:comment_author><![CDATA[oxen]]></wp:comment_author>
			<wp:comment_author_email>oxen.ct@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.76.149.194</wp:comment_author_IP>
			<wp:comment_date>2006-06-01 16:12:01</wp:comment_date>
			<wp:comment_date_gmt>2006-06-01 08:12:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看了主人这篇文章，
感觉有一种很熟悉的文味，
仔细想想，这种文味不就是在村上春树的小说中体会过的吗
细节描写很多，用词考究。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>创新还是沟通，这是个问题</title>
		<link>http://michael.nona.name/archives/149</link>
		<pubDate>Tue, 06 Jun 2006 04:59:14 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/149</guid>
		<description></description>
		<content:encoded><![CDATA[听到Gino先生聊创新，说着说着，话题跑到了沟通上，随手记一些想法。

两个人，哪怕面对面，说上半个小时，如果没有相同的体验，有可能完全不知道对方在说什么；或者说就算知道，那种切身的体验，只能想象，不一定能理解。现场举了一个例子：Sam吃了一个不知名的糖，然后形容是“甜甜的，很滑，像巧克力”。Gino问Liang, 你知道他的感受吗？Liang摇头，于是吃了同样的一颗糖之后，他也开始形容：甜的，有点像巧克力。这个时候，两个人总算有了共同语言，有了真正在一定层次上的理解和沟通，而不是简单的点头同意。这个时候，两人会心的眼神比起语言更有说服力，有了真正切身的体会后，语言已是多余。

这种事情显然发生在男孩女孩之间更有说服力。路遥小说《平凡的世界》中，金波参军去青海。多才多艺的他每日听见墙外动听的歌声，于是与她对歌。几个来回过后，金波终于忍受不住内心的冲动，到墙外会见只闻其声未见其人的姑娘。在没有任何外人帮助的情况下，两个素未谋面、语言不通的青年一眼就认出了对方。更多的细节在这篇Blog中不适合描述；这里要说的是，人类许多朴素的感情与与生俱来的感受：喜怒哀乐、爱恨悲伤、音乐绘画、山川河流，他们自己比描述他们的语言更具沟通力。

人与人的交流，现在也许很容易——不是么，总有一个与你某一项兴趣相投的人。生命长度有限，宽度则取决于自己。社会能提供的远比人的数量少，因此总能找到说话的人。但要达到一定程度的沟通，却显得越来越困难，因为那些纯朴的感受已经被各式各样的外观包装起来。人们选择这些不同的外观并不一定处于同样的目的。一个简单的例子，许多人去健身，但并不是去健身房的人就能找到能沟通的人；有人无聊，有人体弱，有人喜欢运动；有人真喜欢运动，有人喜欢在运动中享受平静。在这样的一圈人中想要偶遇一定层次的沟通，概率与大街上的邂逅基本相同。

心理学家/医生在一定程度上，是这种现状的职业产物。通过一定的理论指导，丰富的人生阅历以及敏感的触觉，他们总能够倾听的时候，在恰当的时机对他的顾客进行一两句话点拨，以期有一些帮助。更多的时候，这是一种单向的帮助。它能够有效解决一定程度上的问题，更大的功能是单向情绪宣泄。

很多书在讲述如何说服别人。这是一个不太容易的事情。从许多人的经历看来，无论是充当说服者还是被说服者，这体验大多数情况都不好：因为在说服之前，几乎很少有人考虑被说服者的想法。一般是直接把观点说出来并试图别人接受。能够将这种思维倒转过来即将自己的想法埋在心里并仔细聆听对方想法的人，往往更受欢迎。如果此人更具备相当的领域背景，创新的可能是理所当然的了——一个好汉三个帮，在共同的理念下做事，事情当然做得又快又好。

说说老本行。无论是瀑布模型，RUP, CMM还是敏捷，这些方法论的支撑背后，都只有一个目的：使团队中的所有成员了解目标所在。换句话说，有共同的目标。这不能一蹴而就，只能通过某些手段。瀑布模型等采取了一种对人来说很奇怪的方式——大量的文档。要命的是，如果发生变化，这些文档瞬间变成废纸。在使用敏捷之前，我被教导：要让客户意识到，软件变化是很危险的，不能随便改变。这很奇怪。客户的观点发生改变这是很自然的事情，市场变了，为什么不变？

正如我在刚开始所说的，事实本身比描述事实的文字更有说服力。我们无法在很短的时间里让开发者、客户共享领域知识，于是敏捷采取了一个很简单的方式——让客户与开发者在一起。从这几个月参加的敏捷实践体会来讲，我隐约体会到上面所说的这些跟敏捷(Agile)“客户现场”的原则一致。我们常说，开发人员不知道客户要什么；真正的情况是，不仅如此，客户也不知道开发人员能做成什么样子。参与过的一些项目，开发者与客户相互诋毁也不少见。实际上没有人会做任何没有目的的事情，无论是开发者或是客户，都是普通人，都会有想法成熟不成熟，放在一个完全不同的领域背景下，理解的差异在所难免。客户现场的原则，将客户与开发者绑在一起，共同工作，共同体会一个软件从无到有，从bug产生到修复的完整过程，荣辱与共，风险共担；拥抱变化，使得允许普通人犯错误或者改变主意成为可能。即便外界环境发生何种变化（主要是市场），有了良好的沟通环境以及其产生的一致目标产出，使用敏捷始终交付最大价值软件成为可能。

其他一些想到的：
看到相当多的web应用开始关注用户体验，这当然是好的。web2.0的一些原则包括增强用户体验，提供创作内容的平台而不是内容本身，关注用户习惯等，这些比起传统的web应用来说确实迈进了一大步。然而，web应当更进一步，她应该更智能，更聪明，不仅仅根据你的行为猜到你的习惯，甚至能够根据你的习惯理解到你的真实想法，真正成为用户的聆听者/沟通者，为使用者提供更大的帮助。在资讯越来越发达的今天，成为聆听者也许比成为倾诉者更受欢迎。我知道这些想法未免有点惊骇，晚几天我会整理一些文字描述这些想法。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>149</wp:post_id>
		<wp:post_date>2006-06-06 12:59:14</wp:post_date>
		<wp:post_date_gmt>2006-06-06 04:59:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%88%9b%e6%96%b0%e8%bf%98%e6%98%af%e6%b2%9f%e9%80%9a%ef%bc%8c%e8%bf%99%e6%98%af%e4%b8%aa%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>4269</wp:comment_id>
			<wp:comment_author><![CDATA[On The Road &raquo; links for 2006-06-17]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://my.donews.com/kestrel/2006/06/17/links-for-2006-06-17/</wp:comment_author_url>
			<wp:comment_author_IP>211.100.33.116</wp:comment_author_IP>
			<wp:comment_date>2006-06-17 20:22:02</wp:comment_date>
			<wp:comment_date_gmt>2006-06-17 12:22:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Michael Chen’s Blog » Archives » 创新还是沟通，这是个问题 (tags: WEB) [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10657</wp:comment_id>
			<wp:comment_author><![CDATA[qindebu]]></wp:comment_author>
			<wp:comment_author_email>qindebu@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.sina.com.cn/u/1196987433</wp:comment_author_url>
			<wp:comment_author_IP>220.189.210.54</wp:comment_author_IP>
			<wp:comment_date>2006-09-06 14:14:27</wp:comment_date>
			<wp:comment_date_gmt>2006-09-06 06:14:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[蛮有道理,软件的终极体现在用户的心理,行为需求.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Web Emotion, the essential web application</title>
		<link>http://michael.nona.name/archives/150</link>
		<pubDate>Thu, 08 Jun 2006 01:00:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/150</guid>
		<description></description>
		<content:encoded><![CDATA[[update], 从搜索得到的结果，Web3.0并非我所描述这样。我所描述的这种完全没有出现的Web应用，基于这样一个假设：人们除了需要基本的交互需求外，需要一个更智能的工具来分享感受并提供建议。搜索结果大多数是描述一种行为、形态，而非真正从用户心理入手。在冰云的建议下，我将标题改为Web Emotion, 即情感化Web。这是一个够酷的名字，很贴切的描述了我的想法。

摘要：从上一篇blog《创新还是沟通，这是个问题》中，我尝试着思考了这样一个问题：人的社会行为背后到底想要的是什么。我知道这是一个相当庞大的话题，涉及到包括社会学、心理学、经济学在内的许多专门学科。但是现状是，很多学科往往用来解释已经发生的事情，而对于未来的预测往往不足。例如Web2.0概念的产生，AJAX技术的蓬勃发展。从传统的技术观点已经无法解释为什么这些简单的技术能够如此火热。许多开发者还停留在技术层面，而对其中真正最终用户的理解还没有达到。在本文中，我尝试从我上一篇blog中得到的结论来提出一个新词：Web Emotion. 我尝试解释Web版本发展的趋势，并试图为Web Emotion下一个准确的定义，以帮助Web开发，特别是以最终消费者为目标的Web应用创建出更好更贴心的Web应用。

Web, 2.0, Emotion

Web 2.0概念被提出来之前的web基本上被普遍认为是以内容为中心。当Web最早出现的时候，互联网上内容很少。需求决定流行程度。多了一个媒体渠道，人们自然会不断通过这个渠道寻找更丰富的内容。于是内容为主的网站开始流行。渐渐的，单方面的资讯逐渐不能满足用户需要，于是就有了门户网站将各种各样的信息整合到了一起，有了更多的内容可以提供给用户。随着信息的增多，用户开始不满足仅仅作为只能被动阅读的观众，更希望成为内容的提供者，更希望能够有丰富的操作手段来与同样兴趣的人进行交互。于是Web2.0产生。之前的Web被认为是内容提供者，Web2.0应用被认为是平台，用户来主导一切。这个平台只提供必要措施，所有的一切故事的发生统统交给最终用户。例如一些点评网，交友网。论坛是一种表现力不足的低级方式，通过AJAX以及更人性化的设计，Web2.0应用的可用性易用性大大加强。

从Web1.0到2.0的进化过程我们看到，技术不是主导方式。正如许多开发者认识到，许多Web2.0中的概念/技术，应当是在2.0概念之前出现就在某些应用中广泛应用的。发生变化的是外部环境。资讯越来越多，于是成就了搜索引擎；不愿意仅仅成为观看者/旁听者，于是成就了Blog提供商/Podcast提供商；想扩大交际面而不仅仅是身边的熟人，于是成就了交友网站以及各式各样的兴趣小组。一切的迹象表明，是普遍用户的心理决定了应用的发展方向，而Web，由于其得天独厚的优势，在这个进化过程中逐渐上升到进化链条的上端。与此同时进化的是各式各样的IM工具。

随着web2.0应用的发展，现在看起来的一些很不错的应用模式将会逐渐成为一个新型Web应用的基本技巧。技术方面：页面无刷新；重要操作的时候将后台层变暗而将要操作的层加亮；随处可见的搜索等。业务方面：根据一个人的在一段时间的行为从而猜测他的使用习惯；通过具备相同行为的人猜测他可能也喜欢那个人的行为等等。虽然在技术上，这些实现很复杂，但在以后将会成为基本要求。Web Emotion所关注的，从我在《创新还是沟通》一文中得到的结论，是Web尝试着通过这些行为真正去理解这个人，并作出正确的回应----Web Emotion, 所扮演的是一个具备一定专业知识的心理咨询者的角色，在默默观察用户行为，分析用户习惯的同时，努力猜测用户的所想，并提供相应的帮助。

有这样一句话：行为决定习惯，习惯决定性格，性格决定命运。许多的Web2.0应用知道，用户体验并不仅仅是交互体验的改进，更重要的是对用户习惯的捕捉，猜测并给予帮助。在一些网站的设计中如豆瓣，如果你认为一本书很不错，那么它会认为你可能也喜欢另外一个认为这本书很不错的人所推荐的书；另外，如果你一直在阅读某一类的书，你也可能会喜欢这一类中添加的新书。这是对习惯的理解。

基本上说，Web做到这个层次用户体验已经相当好。许多人因为这些体验而无可救药的爱上某一个应用。Web Emotion要做的事情比这更多。还是以读书为例，一个人读一本书往往在不同的时间，不同的心理状态下，带着不同的目的去读。我在前年冬天心情不错的时候读过米兰·昆德拉的《生命中不可承受之轻》，书很不错，我推荐；但由于书写的实在很低调，读完我很郁闷，并且不想在我心情高兴的时候读类似的书了。这时候读书网站向我推荐类似的书显然不合适。但在某些时候出于某种目的我又确实想读一些类似沉重一点的书，我不知道这些时候是什么时候，我也不知道这些书是什么书。

这样的需求看起来似乎有些离谱，但我认为是合理的。如果一个应用或者工具能够做到这些，无论这个应用是关于什么，我都会毫不犹豫的爱上它。因为它比我自己更了解我。

除了Web2.0要做的事情以外，Web Emotion要做三件事情：

一，从用户开始使用这个应用开始，观察用户行为，分析用户习惯，试图分析出用户的心理需求曲线。这个曲线至少包括时间、需求、心理期待等变量。通过这个曲线，大致可以算出这个用户的下一时刻需求是什么。人的因素很难量化，但在一个特定的应用中，任何操作都是可量化的。因此我不认为这个需求不可实现。这是按时间纵向的分析。

二，从用户开始使用这个应用开始，分析与这个用户在特定时间行为心理相似的用户，并试图推荐给使用用户。如果这个应用中存在这样的用户，试图使这两个用户建立联系。我想用户可能会真正的惊讶，为什么招来的用户这么匹配自己的兴趣。按照兴趣爱好分组进行匹配的交友网站，实际上用户在面对若干种兴趣进行勾选的时候自己并不清楚要什么。而Web Emotion的分析将会从真正的心理层次来进行匹配，因此是最准确最体贴的。

三，界面交互设计上，尝试将“用户操作界面”这种感觉转换为“用户与系统在对话”。

实现了以上三点，用户会发现，应用越来越聪明，越来越能够匹配真正的心理需求，更多的时候，感到自己与应用之间的交互像是与心理咨询师的对话。它理解每一个动作的真正心里含义，并给你恰当的推荐。适当的时候，给你推荐一个心理需求相同的人，让你安全稳妥地找到你心里真正想要的朋友。这个朋友甚至可以跟你没有相同的兴趣，但是他一定能跟你聊到一起。

Web Emotion概念的提出，与Web2.0一样，都是基于人们的心理需求。2.0的需求是需要展现自我，需要社会化；我所理解的Web Emotion需求是需要被倾听，需要适时、恰当的建议，需要交心的朋友。而这一切，是生活在当今社会需要的心理需求。

Web Emotion概念几乎可以应用在所有消费类Web应用上。评价、交友、Wishlist等都可以从中受益。

技术实现上，最复杂的莫过于针对用户的操作来进行记录和分析。一些数据分析的概念可以在这里被应用，相关的算法也可以用来参考。这个计算模型可以在各个应用通用。另外，寻找相近行为的匹配度算法也会比较复杂。

总结

Web Emotion概念的提出，继续以满足用户心理需求为目标，以丰富的交互手段为基础，在分析用户习惯的基础上，进一步分析用户心理。现有的应用没有考虑时间等其他因素，Web Emotion将会综合考虑各种影响人决策的因素并形成曲线来指导对用户的建议；另外，Web Emotion也将通过复杂的计算来找出真正与用户心理特征相近的朋友，真正提高社交质量，满足用户心理期待。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>150</wp:post_id>
		<wp:post_date>2006-06-08 09:00:43</wp:post_date>
		<wp:post_date_gmt>2006-06-08 01:00:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web-30</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>3784</wp:comment_id>
			<wp:comment_author><![CDATA[大郎]]></wp:comment_author>
			<wp:comment_author_email>iexper@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.204.137.138</wp:comment_author_IP>
			<wp:comment_date>2006-06-08 13:33:35</wp:comment_date>
			<wp:comment_date_gmt>2006-06-08 05:33:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[赞！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3798</wp:comment_id>
			<wp:comment_author><![CDATA[zhengyun]]></wp:comment_author>
			<wp:comment_author_email>zhengyun@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.csdn.net/zhengyun_ustc</wp:comment_author_url>
			<wp:comment_author_IP>61.149.87.213</wp:comment_author_IP>
			<wp:comment_date>2006-06-08 22:49:10</wp:comment_date>
			<wp:comment_date_gmt>2006-06-08 14:49:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[让系统变得像那些人类行为分析师(比如大公司的HR所经常作的那样，从一些似乎无关紧要的问题来判断你的行为模式)。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3920</wp:comment_id>
			<wp:comment_author><![CDATA[恒]]></wp:comment_author>
			<wp:comment_author_email>wang-heng32167@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.207.129.189</wp:comment_author_IP>
			<wp:comment_date>2006-06-10 10:54:10</wp:comment_date>
			<wp:comment_date_gmt>2006-06-10 02:54:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[幸亏有了百度,在搜索web2.0相关咨讯的时候,看到了您的blog,我是个普通的桥梁工程师,去年从江苏回到西安,我对IT行业可以说一窍不通,但强烈的感觉到网络是一个实现创意及其价值所受束缚最小的地方----这也是我离开毫无创造力的桥梁建筑行业,走向互联网领域的根本原因.对于我来说,没有什么比创造性的思考得以实现更令自己充实的了.于是,经过一年的思考,为了能让思想有个驰骋的空间,我放弃了公职,做了一个交友网站.然而,单枪匹马,又几乎不懂技术,无力将思想在网站建设和运做中真正的体现出来,正在彷徨之时,看见您的文章,急切的希望您能指点迷津.
  对网络进行投资风险确实很大,但我能够放弃原先工作了7年的领域而走向这座"虎山"心里是有准备的,既然已经迈出了第一步,就要坚定而智慧的走下去---为了自己活着的真正意义
 我的e-mail:wang-heng32167@163.com
       Tel:029-81912075 
       www.suo2.com  我的网站
目前,我对继续投资的方向感到很迷茫,等待您的指导----在您方便的任何时候!
    万分感谢!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>初到温哥华</title>
		<link>http://michael.nona.name/archives/151</link>
		<pubDate>Thu, 15 Jun 2006 09:18:05 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/151</guid>
		<description></description>
		<content:encoded><![CDATA[15日下午4点，国航的飞机从北京起飞。除了中间的不超过3个小时的准黑夜，飞机一直飞行在白天。这让第一次做长途飞行的我多少感到奇怪。到达温哥华是当地时间15日上午11点，北京时间16日凌晨3点。不知不觉间，竟然同时过着两天的生活。

飞机上迷迷糊糊的在北京时间晚上9点睡了，然后在温哥华时间9点半醒来，骗着自己的大脑和身体说，嗯，你已经睡了十二个小时了。然而身体显然与这种简单的把戏在作对：有点头晕。

飞机上跟邻座聊天，寒暄过后，她跟我说的第一句话居然是：你可以留在加拿大不回来，大约一年后以难民身份申请一张枫叶卡（大概是永久居留证之类）。“那岂不要放弃中国国籍吗？”我问。“不用，”她很随意地说，“我们那里的人都是这么做的。几乎每家都有偷渡去国外的，现在当地只剩下老人和小孩了。”我记起前几年北京的一位同事好像跟我说过类似的情况，我只是笑笑，以为只是个人偶尔行为——给组织偷渡的人交几十万，想办法到美国——没想到居然这么流行了。问了问她的情况，在北美餐馆打工，每天工作十几个小时，每周有一天休息，一个月下来大约能拿到2000多块（美金），确实比在国内要挣得多。跟她又聊起房价，做事的难度，基本上这些原因都使得像她那样的人，甚至即便已经攒了二三十万（二三百万人民币呢）都不愿意回来。我想说现在是中国的经济发展期，但这个话题太深，她是否能理解不谈，我是无法驾驭的；更何况对于那样的收入，很多国内做IT的人都会很不忿。“中国不仅劳力便宜，脑力也便宜”，常住加拿大的朋友Sue这样说。

离温哥华还有20分钟时，飞机开始下降，从云层上到云层下。云很干净，很厚实，像小时候准备收割的新棉花，洁白，松软，于是我忍不住拍了几张照片。机翼和窗户影响了拍摄效果，但大致能看出来那种密度和质感。飞得低了，开始看见大海。看来这是温哥华的港口，飞得更低的时候看见许多船从不同方向向着不同方向行驶；海面波光粼粼，很是漂亮。正看着，飞机越过机场的围墙，机身轻轻一震，已经落在了温哥华机场的跑道上了。

除了飞机，有警察很耐心的问好“How are you today”，然后问你此行的目的，过了这一关，进入大楼，迎面而来的是一个巨大的标志，我不知道这些标志的含义；右边是一艘小船，乍一看还以为是进了公园。广告所说“温哥华机场是北美No.1”，名不虚传，宽敞，明亮，轻松，方便。主要是人少，走着走着，比起首都国际机场的人流量简直小巫见大巫，甚至比不上西安咸阳国际机场。忽然记起由一位北美的同事，家庭电话号码才5位，想想真是有趣。

由于时间有限，下午2:25需要转机去西北部Alberta省的Calgary，我打消去市中心逛的念头。用中国联通的IP卡给Calgary的同事打了电话，200元的电话卡居然只能讲28分钟，真是……中午在机场里吃了汉堡和可乐，$8.5，合人民币约60块，这也算我一个人吃饭的最高纪录了。

PS. 其实我是一个很后知后觉的人，以至于我期待的那种惊喜感并没有如期而至——也许几天后或者几个月以后的某天会有感觉。温哥华一如其他打城市，眼花缭乱的广告，高高的建筑，同样陌生的人们。不同的是语言，以及不像北京那样的拥挤。以前我曾说，所有的大城市都差不多的。现在逐渐改变了看法——所有的大城市看上去都差不多，然而要理解并融入一个城市，需要与他息息的生活在一起。这种投入，我不一定有机会，就算有机会，也不一定有时间。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>151</wp:post_id>
		<wp:post_date>2006-06-15 17:18:05</wp:post_date>
		<wp:post_date_gmt>2006-06-15 09:18:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%88%9d%e5%88%b0%e6%b8%a9%e5%93%a5%e5%8d%8e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>4573</wp:comment_id>
			<wp:comment_author><![CDATA[zhengyun]]></wp:comment_author>
			<wp:comment_author_email>zhengyun@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.csdn.net/zhengyun_ustc</wp:comment_author_url>
			<wp:comment_author_IP>61.149.87.146</wp:comment_author_IP>
			<wp:comment_date>2006-06-21 00:02:43</wp:comment_date>
			<wp:comment_date_gmt>2006-06-20 16:02:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[机场卖东西的都黑。北京机场一盘饺子还曾经90RMB呢。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4756</wp:comment_id>
			<wp:comment_author><![CDATA[大兵]]></wp:comment_author>
			<wp:comment_author_email>bing708@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.xiebing.com</wp:comment_author_url>
			<wp:comment_author_IP>61.152.141.142</wp:comment_author_IP>
			<wp:comment_date>2006-06-22 18:50:04</wp:comment_date>
			<wp:comment_date_gmt>2006-06-22 10:50:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[真爽，不知俺什么时候能在国外转一圈。

偷渡？没准是个办法！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4853</wp:comment_id>
			<wp:comment_author><![CDATA[游客]]></wp:comment_author>
			<wp:comment_author_email>zhang145798@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.89.117.180</wp:comment_author_IP>
			<wp:comment_date>2006-06-23 15:38:40</wp:comment_date>
			<wp:comment_date_gmt>2006-06-23 07:38:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[喜欢温哥华！！！看了《别了！温哥华》就更喜欢了，希望看到你更多的在Vancouver的感受！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>66880</wp:comment_id>
			<wp:comment_author><![CDATA[st]]></wp:comment_author>
			<wp:comment_author_email>thebesttone@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.vancityjob.com/Tai649/ca649.php</wp:comment_author_url>
			<wp:comment_author_IP>75.153.119.170</wp:comment_author_IP>
			<wp:comment_date>2008-02-15 10:22:14</wp:comment_date>
			<wp:comment_date_gmt>2008-02-15 02:22:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[温哥华真美]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>功能无关性的web2.0用户兴趣相关性分析方法</title>
		<link>http://michael.nona.name/archives/152</link>
		<pubDate>Mon, 17 Jul 2006 03:35:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/152</guid>
		<description></description>
		<content:encoded><![CDATA[Web2.0最重要的特征就是，通过一定的分析方法，将具备相关兴趣的人聚集在一起。做法上，不同的应用有不同的方法。现在要说的是一种具体应用无关的分析方法。

先考虑现实中的情况。张三看了《疯狂的石头》，李四也看了。两人的在某种情况下见面聊起这部电影的时候发现观点基本相同。于是相见恨晚，以后的电影，张三推荐了，李四很有可能会看。如果恰好张三推荐的电影李四也喜欢看，两人的兴趣更接近了，意味着以后张三推荐的电影或者其他的东西，李四更可能会看会用。

很多网站做的用户兴趣相关性基于这样的现实。评价网站则严重依赖这样的事实。当用户A评价一个东西不错，用户B有相同的感受的时候，两人兴趣相投，于是对平台——就是这个网站产生了依赖。从某种程度上说，绝大多数web2.0应用所作的事情，只是把人们的社会化的需求挖掘出来，从而产生交流的欲望，进而产生对网站本身的依赖。至于提供各种服务，只是为了更好的让用户进行交流。

相关性的关联方式，可以是功能本身，例如读一本书，为某一项产品/内容做一个标签。一旦这个标签多了起来，形成一条曲线，那么根据曲线的相似程度，可以判断出这些用户的行为相近程度，进而分析出他们的兴趣相近程度。

从功能无关性的角度看来，这些都可以被抽象。读一本书可以是一个功能，打标签也可以是功能。抽象出来如下：

功能ID 动作 目标 值
1      读书 兄弟 推荐
2      标签 兄弟 余华
...

用户ID 功能ID
1        1
1        2
2        1
2        2

（上面的例子显示出，两个用户具备相同的行为，有理由想象两人有相似的兴趣）

在进行相关性分析的时候，只需要将ID与用户关联起来即可。相关性搜索算法就与具体的应用没什么关系了，一些常见的数据挖掘的技术在这里可以大显身手。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date>2006-07-17 11:35:33</wp:post_date>
		<wp:post_date_gmt>2006-07-17 03:35:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8a%9f%e8%83%bd%e6%97%a0%e5%85%b3%e6%80%a7%e7%9a%84web20%e7%94%a8%e6%88%b7%e5%85%b4%e8%b6%a3%e7%9b%b8%e5%85%b3%e6%80%a7%e5%88%86%e6%9e%90%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>经验愈多愈难行</title>
		<link>http://michael.nona.name/archives/153</link>
		<pubDate>Wed, 19 Jul 2006 09:00:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/153</guid>
		<description></description>
		<content:encoded><![CDATA[有机会开始了一个小的Flash项目。自从五年前当过一阵老师，在赛扬300上教过别人怎么用Flash后，就再也没有怎么认真碰过它。于是兴趣盎然的开始了研究，怎么获取Mic, 怎么录音，怎么保存文件，如何播放，如何使用第三方的ActionScript库来制作界面。一天半过后，居然一个像模像样的Flash应用出现在了网页中，成就感巨强。相比这几天前百无聊赖的摆弄JavaScript, Java, 以及毫无目的的阅读Ruby/Rails, 这种感受来得更真实丰满些。

想到了我那些到现在为止还处在半空中的项目，用一些熟悉的技术熟悉的方式来开发，只需要闭上眼睛就能想象出如何实现的那些特性，越来越感觉编程如果不能给自己带来快乐或者给客户提供价值，跟搬砖无异。这时候经验不是一种帮助，而是一种负担，一种严重的负担，这个时候你知道了多少东西，那些东西就联合起来，在你前行的路上形成多高的壁垒。如果技术本身不能给你带来快乐，这个时候带给你的就是痛苦，那种远望着目标，明知道一步一步就可以走到却跨不过自己筑下高墙的痛苦。

老庄：http://zbw25.spaces.msn.com/Blog/cns!BD4EFBFAF436336C!1227.entry
<blockquote>4、Blog+Digg+Dzone的展现方式，是一个不错的发展方向
与江南白衣聊天时想到的</blockquote>

即便这样想到，又如何呢？我想老庄或者白衣都至少知道100种以上的方法来如何实现这些东西，但想到不等于做到。在自己制造的漩涡中磕磕碰碰的人远比那些真正有所建树的人多，而尚未开始便已结束徒留嗟叹的人更多，而更过分的人将自己制造的壁垒越延越长，用来阻拦那些同样有想法的人。郑渊洁《智齿》中说，“创意的天敌是经验”。在真正想做一件事情的时候，经验是最大的障碍。

旧文一篇作注解：<a href="http://michael.nona.name/archives/76">学习，研究，工作，灵感——学习过程其实是一张网 </a>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date>2006-07-19 17:00:25</wp:post_date>
		<wp:post_date_gmt>2006-07-19 09:00:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%bb%8f%e9%aa%8c%e6%84%88%e5%a4%9a%e6%84%88%e9%9a%be%e8%a1%8c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>67787</wp:comment_id>
			<wp:comment_author><![CDATA[世界很宅 : Michael Chen&#8217;s Blog]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://michael.nona.name/archives/188</wp:comment_author_url>
			<wp:comment_author_IP>61.129.70.239</wp:comment_author_IP>
			<wp:comment_date>2008-08-31 21:22:52</wp:comment_date>
			<wp:comment_date_gmt>2008-08-31 13:22:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 这种想法让人沮丧。只有意志相当坚定的人才有可能不顾一切、偏执的追求并实现自己的理想。偏偏这样的人不可能成为我们的一员。这样的人要么进不来，要么留不下，或者被同质了。我自己虽然很警惕这种避免同质化的倾向，先后写了一些如经验愈多愈难行，学习，研究，工作，灵感——学习过程其实是一张网。然而真实的情况是，自从buffalo写出来到现在，几无所出，更让我汗颜的是，它还是我加入TW之前写的。我成为了宅人中的一员。 [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>当在Firefox中输入gmail.cn</title>
		<link>http://michael.nona.name/archives/154</link>
		<pubDate>Wed, 19 Jul 2006 12:10:56 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/154</guid>
		<description></description>
		<content:encoded><![CDATA[看图不说话：

<a href="http://static.flickr.com/49/193363294_8de5c3d91e_o.jpg"><img src="http://static.flickr.com/49/193363294_8de5c3d91e.jpg" width="500" height="393" alt="google-safe-browsering" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date>2006-07-19 20:10:56</wp:post_date>
		<wp:post_date_gmt>2006-07-19 12:10:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%bd%93%e5%9c%a8firefox%e4%b8%ad%e8%be%93%e5%85%a5gmailcn</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>6902</wp:comment_id>
			<wp:comment_author><![CDATA[google]]></wp:comment_author>
			<wp:comment_author_email>google@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.134.58.152</wp:comment_author_IP>
			<wp:comment_date>2006-07-20 13:54:20</wp:comment_date>
			<wp:comment_date_gmt>2006-07-20 05:54:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你装了google的插件拉。不是firefox的问题。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12109</wp:comment_id>
			<wp:comment_author><![CDATA[ncowboy]]></wp:comment_author>
			<wp:comment_author_email>zizhao_chen@no-spam.eyou.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.168.74.99</wp:comment_author_IP>
			<wp:comment_date>2006-09-18 16:21:43</wp:comment_date>
			<wp:comment_date_gmt>2006-09-18 08:21:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mozilla/5.0 (X11; U; Linux i686; zh-CN; rv:1.8.0.6) Gecko/20060728 SUSE/1.5.0.6-1.2 Firefox/1.5.0.6

我的，没有问题。
我的GOOGLE toolbar version 2.1.20060807L]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>AJAX下一站：更快的响应（关于Comet）</title>
		<link>http://michael.nona.name/archives/155</link>
		<pubDate>Tue, 25 Jul 2006 15:23:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/155</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.ruby-forum.com/topic/62907 提到了Armageddon，顺着link找，又看到了<a href="http://www.irishdev.com/NewsArticle.aspx?id=2166">COMET - the next stage of AJAX</a>， <a href="http://www.irishdev.com/NewsArticle.aspx?id=2173"> Comet: Beyond AJAX </a>。简单的解释Comet：传统的HTTP技术是客户端主动拉服务器端内容，每次更新需要刷新整个页面，这种方式在带宽不足的情况下用户体验尤其恶劣；AJAX让这个过程转到后台，将一次性的全页面载入转变为多次的小批量异步载入从而改善交互体验；而针对基于网页的及时通信等应用，这种每隔几秒的请求响应不够快，而且无状态的HTTP协议对服务器端效率的影响比较大。

如果说AJAX是新瓶装老酒，那么Comet则干脆连新瓶子都不用了。早在2002年更早的时候，<a href="http://www.pushlets.com/">pushlet</a>提出的概念让我眼前一亮，基本原理是将需要持续更新的内容放到一个永远也下载不完的页面中(JSP代码)：

<pre lang="java">< %
int i = 1;
try {
    while (true) {
    out.print(""+(i++)+"");
    out.flush();
    try {
        Thread.sleep(3000);
    } catch (InterruptedException e) {
        out.print(""+e+"");
    }
} catch (Exception e) {
    out.print(""+e+"");
}
%></pre>

这就是Comet的基本原理。其他的基于HTTP协议的Comet实现大多数原理如此，为了更好的提高效率，Event-Driven IO会被大量使用，如Java NIO, Twisted. 03年发现一个<a href="http://bbs.51js.com/viewthread.php?tid=11908&fpage=1">基于Web的网络游戏</a>，也是这个原理。在我研究Amowa期间，发现利用Flash作代理，利用它的remoting或者XMLSocket能力，也可以实现实时的web应用。

这种技术的引入将带来web应用开发方式的一些变化，基于事件的实现方式可能更容易在Comet中使用。晚些时候我再详细探讨这些概念技术对web开发带来的影响。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>155</wp:post_id>
		<wp:post_date>2006-07-25 23:23:47</wp:post_date>
		<wp:post_date_gmt>2006-07-25 15:23:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ajax%e4%b8%8b%e4%b8%80%e7%ab%99%ef%bc%9a%e6%9b%b4%e5%bf%ab%e7%9a%84%e5%93%8d%e5%ba%94%ef%bc%88%e5%85%b3%e4%ba%8ecomet%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>9119</wp:comment_id>
			<wp:comment_author><![CDATA[Ken]]></wp:comment_author>
			<wp:comment_author_email>zhengkan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.20.155.250</wp:comment_author_IP>
			<wp:comment_date>2006-08-21 22:53:10</wp:comment_date>
			<wp:comment_date_gmt>2006-08-21 14:53:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[如此一来，如果时间稍长，浏览器内存消耗岂不是很大？而且浏览器总显示未加载完。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>换用搜狗输入法</title>
		<link>http://michael.nona.name/archives/157</link>
		<pubDate>Wed, 26 Jul 2006 14:50:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/157</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.sogou.com/pinyin/">搜狗输入法</a>名不虚传，很好用。用微拼，我打了几百年的“试一试”或者“试试”看，仍然出不来这两个词，从微拼2.0到3.0，这个问题从来没有被解决过，搜狗输入法在我第二次使用的时候就牢牢记住了我的偏好，一打便出。

搜狗输入法好处在于两点，一是利用搜索引擎，将热门词汇直接作为词组在线升级，这样你有了一个活的输入法；二是将你常用的词自动放到前面。微拼也做到这一点，但是不彻底，往往你输入了数十次之后才稍稍往前挪一点，而搜狗则简单的将用过一次的词就放到最前面，这个特性深得我心。

日常使用方面，没有什么比输入法更重要的了。写作的时候，一个好的输入法保持你思维的连续性而不是SB的让你在一堆字中挑选那个恰当的字。这种事情可一而不可再。从今天的试用感觉看来，新的输入法至少提高了20%的打字速度，以及50%的心情愉快程度。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>157</wp:post_id>
		<wp:post_date>2006-07-26 22:50:33</wp:post_date>
		<wp:post_date_gmt>2006-07-26 14:50:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%8d%a2%e7%94%a8%e6%90%9c%e7%8b%97%e8%be%93%e5%85%a5%e6%b3%95-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>7192</wp:comment_id>
			<wp:comment_author><![CDATA[trier]]></wp:comment_author>
			<wp:comment_author_email>trier@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://trier.blogbus.com</wp:comment_author_url>
			<wp:comment_author_IP>211.144.96.230</wp:comment_author_IP>
			<wp:comment_date>2006-07-27 09:07:43</wp:comment_date>
			<wp:comment_date_gmt>2006-07-27 01:07:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我也是最近几天开始用搜狗拼音输入法，很有同感啊。尤其是你说的那个“试试”！另外，微拼好像根本记不住我的常用词组。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7193</wp:comment_id>
			<wp:comment_author><![CDATA[yichao zhang]]></wp:comment_author>
			<wp:comment_author_email>yichao.zhang@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.107.158.43</wp:comment_author_IP>
			<wp:comment_date>2006-07-27 09:25:28</wp:comment_date>
			<wp:comment_date_gmt>2006-07-27 01:25:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[很有同感!我也刚换用了搜狗
补充两点:
1 输入英文时也不会因为有同音的中文而打出来,而是由最后按回车还是空格来控制

2 多了几种翻页的选择,个人比较喜欢用,.

不过,搜狗输入中文时,即使使用全角，打出来的句号还是个点儿．不是个圈，不知道为啥这个自立门户]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7198</wp:comment_id>
			<wp:comment_author><![CDATA[zhengyun]]></wp:comment_author>
			<wp:comment_author_email>zhengyun@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.csdn.net/zhengyun_ustc</wp:comment_author_url>
			<wp:comment_author_IP>61.49.245.184</wp:comment_author_IP>
			<wp:comment_date>2006-07-27 15:33:53</wp:comment_date>
			<wp:comment_date_gmt>2006-07-27 07:33:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不知道微软亚洲研究院的同仁们如何面对这个新起来的挑战？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7841</wp:comment_id>
			<wp:comment_author><![CDATA[pengmz]]></wp:comment_author>
			<wp:comment_author_email>pmzcn@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://hi.baidu.com/pmzcn</wp:comment_author_url>
			<wp:comment_author_IP>220.231.10.90</wp:comment_author_IP>
			<wp:comment_date>2006-08-10 20:27:53</wp:comment_date>
			<wp:comment_date_gmt>2006-08-10 12:27:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[去试试，一直用拼音加加，看看这个搜狗怎么样]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30492</wp:comment_id>
			<wp:comment_author><![CDATA[游客]]></wp:comment_author>
			<wp:comment_author_email>a@mail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.18.52.165</wp:comment_author_IP>
			<wp:comment_date>2007-02-07 14:18:22</wp:comment_date>
			<wp:comment_date_gmt>2007-02-07 06:18:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[搜狗好用吗？没用过。一直用紫光输入法，你们说的那些优点都有。常用的词汇，用过一次就记住了，学习能力很强。越用越适合自己。比如你说的“试试”，不用选直接就能打出来。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35252</wp:comment_id>
			<wp:comment_author><![CDATA[灯火隔夜凉]]></wp:comment_author>
			<wp:comment_author_email>majia_0001@sohu.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.sogou.com</wp:comment_author_url>
			<wp:comment_author_IP>58.30.5.5</wp:comment_author_IP>
			<wp:comment_date>2007-03-04 16:45:37</wp:comment_date>
			<wp:comment_date_gmt>2007-03-04 08:45:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[搜狗比紫光更好的就是有强大搜索引擎讲热门词汇定期升级，比如娱乐，品牌名称，甚至一些中译的鸟名字都能很快的打出来！！！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35253</wp:comment_id>
			<wp:comment_author><![CDATA[灯火隔夜凉]]></wp:comment_author>
			<wp:comment_author_email>majia_0001@sohu.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.sogou.com</wp:comment_author_url>
			<wp:comment_author_IP>58.30.5.5</wp:comment_author_IP>
			<wp:comment_date>2007-03-04 16:45:58</wp:comment_date>
			<wp:comment_date_gmt>2007-03-04 08:45:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[搜狗比紫光更好的就是有强大搜索引擎讲热门词汇顶起升级，比如娱乐，品牌名称，甚至一些中译的鸟名字都能很快的打出来！！！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48165</wp:comment_id>
			<wp:comment_author><![CDATA[aspirer]]></wp:comment_author>
			<wp:comment_author_email>h@h.com</wp:comment_author_email>
			<wp:comment_author_url>http://hexun.com/aspirer2008</wp:comment_author_url>
			<wp:comment_author_IP>222.92.14.201</wp:comment_author_IP>
			<wp:comment_date>2007-05-09 12:53:17</wp:comment_date>
			<wp:comment_date_gmt>2007-05-09 04:53:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[即使我用的是极点五笔，我还是对每一个拼音输入使用者推荐使用搜狗拼音输入法。因为我推荐过几个同学都说好用。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49120</wp:comment_id>
			<wp:comment_author><![CDATA[eric]]></wp:comment_author>
			<wp:comment_author_email>eric_qian@126.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.trucy.org/blog/eric</wp:comment_author_url>
			<wp:comment_author_IP>219.236.56.5</wp:comment_author_IP>
			<wp:comment_date>2007-05-12 23:05:54</wp:comment_date>
			<wp:comment_date_gmt>2007-05-12 15:05:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我也是用了多年的微软输入发改用搜狗的,确实好用,有几个小功能很符合我的习惯]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>用JEdit进行Ruby/Rails开发</title>
		<link>http://michael.nona.name/archives/158</link>
		<pubDate>Sun, 20 Aug 2006 03:42:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/158</guid>
		<description></description>
		<content:encoded><![CDATA[在windows/linux下面，我尝试了多种组合来进行rails开发，所进行的尝试包括：

* windows: Editplus（我用了好多年的编辑器） + 控制台
* windows/linux: RadRails
* linux: GEdit + snippet plugin + terminal
* windows/linux: jedit

最终发现，自定义能力极强以及插件/Macro众多的JEdit可能是TextMate之外最方便的编辑器。下面是截屏：

<a href="http://mechiland.googlepages.com/jedit-rails-1.PNG"><img src="http://mechiland.googlepages.com/jedit-rails-1.PNG" alt="" width="200"/></a>

打开文件：

<a href="http://mechiland.googlepages.com/jedit-rails-2.PNG"><img src="http://mechiland.googlepages.com/jedit-rails-2.PNG" width="200" alt="" /></a>

特点：

* 自定义功能极强的abbreviation功能，类似于TextMate中的snippets, Eclipse中的Template。Linux下GEdit也有类似的插件
* 语法加亮
* rails项目视图
* 快速打开某一个文件（我现在将这个功能绑定为Ctrl+N，用起来跟IntelliJ IDEA一样了）
* 精心的类比TextMate的配色

基础配置参考<a href="http://saimonmoore.net/permalink/jedit-for-ruby-rails-development">这里</a>

注意，最好安装JEdit 4.2stable版本，4.3版本与文中提到的某些插件（如SupperAbbrev）并不兼容。我所做的一些增强如下：

* 从<a href="http://rubyjedit.org/download/">这里</a>下载ruby mode语法文件。jedit自带的语法不够全面。
* 从<a href="http://community.jedit.org/?q=filestore/browse/21">这里</a>找到更新的html/css的语法文件并覆盖原有的mode文件，注意备份。Jedit自带的mode支持有限。
* 到<a href="http://community.jedit.org/?q=filestore/browse/23">这里</a>找到更漂亮的图标。许多人放弃JEdit是因为默认的图标实在太难看了。
* 下载我调制的颜色方案：<a href="http://mechiland.googlepages.com/RealTextMate.jedit-scheme">在这里</a> 放在~userhome/.jedit/schemas 目录下面，用Editor Schema Selector插件选择使用。
* 从<a href="http://synthesis.sbecker.net/articles/2006/03/20/jedit-snippets-for-ruby-on-rails">这里</a>下载rails的缩写文件 （重要!）。以后如果要扩展自己的缩写片段，可以参考已有的，或者参考<a href="http://www.ifakedit.com/log/2006/02/19/jedit-tutorial-a-how-to-on-abbreviations-superabbrevs-in-html-ruby-on-rails-and-more/">这里</a>
* 安装增强Mac字体，有两个选择：<a href="http://www.gringod.com/2006/02/24/return-of-monacottf/">Monaco</a>或者<a href="http://www.tobias-jung.de/seekingprofont/">ProFontWindows</a>。当然你可以用你喜欢的字体，这两个字体是Mac的默认字体。
* 定义自己的快捷键。我定义的快捷键：Ctrl+H: 显示文件结构，Ctrl+ENTER: 自动扩展缩写，Ctrl+SPACE: 自动完成，Ctrl+D: 复制一行，Ctrl+Y: 删除一行，CTRL+ALT+UP/DOWN: 行上移/下移。

通过以上配置，你就可以在windows下面拥有一套相当便利的rails开发环境了。在出手MacBook之前，这就是我开发rails应用的IDE。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date>2006-08-20 11:42:33</wp:post_date>
		<wp:post_date_gmt>2006-08-20 03:42:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%94%a8jedit%e8%bf%9b%e8%a1%8crubyrails%e5%bc%80%e5%8f%91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>19964</wp:comment_id>
			<wp:comment_author><![CDATA[alex]]></wp:comment_author>
			<wp:comment_author_email>leo197445@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>130.214.25.250</wp:comment_author_IP>
			<wp:comment_date>2006-11-21 16:47:24</wp:comment_date>
			<wp:comment_date_gmt>2006-11-21 08:47:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[那为什么不用Textmate?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20683</wp:comment_id>
			<wp:comment_author><![CDATA[Ruby on Rails IDE Collects at Caiwangqin&#8217;s blog]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.caiwangqin.com/post/271</wp:comment_author_url>
			<wp:comment_author_IP>72.36.190.242</wp:comment_author_IP>
			<wp:comment_date>2006-12-05 15:16:18</wp:comment_date>
			<wp:comment_date_gmt>2006-12-05 07:16:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] JEdit: 用JEdit进行Ruby/Rails开发 [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50033</wp:comment_id>
			<wp:comment_author><![CDATA[shir]]></wp:comment_author>
			<wp:comment_author_email>shirlyliu8734@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://shirly8734.blogbus.com</wp:comment_author_url>
			<wp:comment_author_IP>124.114.16.142</wp:comment_author_IP>
			<wp:comment_date>2007-05-20 20:06:10</wp:comment_date>
			<wp:comment_date_gmt>2007-05-20 12:06:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[like ur name!
hope u'll happy everyday!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67599</wp:comment_id>
			<wp:comment_author><![CDATA[i18n]]></wp:comment_author>
			<wp:comment_author_email>i18n@sohu.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.242.212.85</wp:comment_author_IP>
			<wp:comment_date>2008-07-15 22:00:15</wp:comment_date>
			<wp:comment_date_gmt>2008-07-15 14:00:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[兄弟，你好
我在xp下用jdk1.6的环境安装的jedit4.2final
在对话框里出现的全是乱码，比如在打开菜单-&gt;的时候。

在java控制台那里也找不到换成英文的选项。jdk1.6也没找到英文版的。现在想不出方法了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Buffalo 2 vs Buffalo 1: +30% performance </title>
		<link>http://michael.nona.name/archives/159</link>
		<pubDate>Sun, 01 Oct 2006 16:49:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/159</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://lh3.google.com/mechiland/RR_vqYNWABI/AAAAAAAAAUQ/logNQGECuRQ/benchmark.jpg" alt="buffalo benchmark" />

说明：测试机器配置：笔记本Pentium M 2.0G, 2G内存。第一列是循环调用次数；Request / Second是每秒能够处理的请求数（吞吐量）。由于新的实现加入了众多缓存，因此在小数量调用时不能体现优势，但真正在高并发请求的场景中，2要比1.2提高30%的性能。在运行Demo应用时，明显感觉速度有所提高

buffalo2.0的发布时间还没有确定，需要试验的请通过<a href="https://buffalo.dev.java.net">cvs</a>获取。另外，我很想与DWR的处理速度进行一个对比，但仔细看了DWR代码，代码写的与servlet api太紧，很难单独抽出来进行测试。哪位有相关数据的请给我帮助。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date>2006-10-02 00:49:52</wp:post_date>
		<wp:post_date_gmt>2006-10-01 16:49:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>buffalo-2-vs-buffalo-1-30-performance</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
	</item>
	<item>
		<title>buffalo 2.0-alpha1 released</title>
		<link>http://michael.nona.name/archives/160</link>
		<pubDate>Sun, 08 Oct 2006 05:08:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/160</guid>
		<description></description>
		<content:encoded><![CDATA[没什么可说的了，从2005年4月至今，buffalo走过了1.0, 1.1, 1.2到现在的2.0

最大的改变是彻底抛弃了burlap，新的协议以及实现完全重新编写（相当于一个定制的xml pull parser）速度相当快，几乎接近于纯文本的处理速度。另外的改变是为了适应项目国际化以及更好的代码环境，buffalo从java.net迁移到了sourceforge，并且使用maven作为项目管理工具。另外，修复了若干bug。

完整的特征列表如下：

* 支持方法重载
* 重新实现协议，更好的解析和缓存，效率比1.2.x系列提升30%
* onTimeout和onException事件支持
* 更友好的错误信息显示
* 代码库迁移到sourceforge，采用subversion
* 采用maven管理项目

下载地址：

* <a href="http://buffalo.sourceforge.net">http://buffalo.sourceforge.net</a>
* <a href="http://sourceforge.net/project/showfiles.php?group_id=178867&package_id=206392&release_id=453305">下载2.0alpha1</a>

这个版本的推出主要是为了检验新的协议解析器，有任何问题请到<a href="http://groups.google.com/group/amowa">buffalo论坛</a>进行讨论。2.0正式版的发布将主要取决与文档的完善情况。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>160</wp:post_id>
		<wp:post_date>2006-10-08 13:08:29</wp:post_date>
		<wp:post_date_gmt>2006-10-08 05:08:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>buffalo-20-alpha1-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<wp:comment>
			<wp:comment_id>16452</wp:comment_id>
			<wp:comment_author><![CDATA[luhy]]></wp:comment_author>
			<wp:comment_author_email>gg_smile@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.100.22.30</wp:comment_author_IP>
			<wp:comment_date>2006-10-19 15:17:23</wp:comment_date>
			<wp:comment_date_gmt>2006-10-19 07:17:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看到你写了Xdoclet的blog内容，有个问题想请教。我的工程中扩展XmlSubTask的class都无法编译通过，提示的错误是the type xjavadoc.XJavaDoc.cannot be resolved.It is indirectly referenced from required .class file，请问可以帮我看看是怎么回事吗？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16505</wp:comment_id>
			<wp:comment_author><![CDATA[tiyi]]></wp:comment_author>
			<wp:comment_author_email>tiyilon@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.79.56.157</wp:comment_author_IP>
			<wp:comment_date>2006-10-21 00:01:41</wp:comment_date>
			<wp:comment_date_gmt>2006-10-20 16:01:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[应该是xdoclet的版本问题.更新一下相应的jar看看.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19988</wp:comment_id>
			<wp:comment_author><![CDATA[lip]]></wp:comment_author>
			<wp:comment_author_email>lipeng@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.169.14.225</wp:comment_author_IP>
			<wp:comment_date>2006-11-22 08:55:35</wp:comment_date>
			<wp:comment_date_gmt>2006-11-22 00:55:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Buffalo2.0和最新的2..0 apha2中。在weblogic下，返回的中文的话，会出错，报没有此对象，这个问题按照你说的用wls8.1.6，并且在weblogic.Xml文件中加中文编码配置也没有用。

 

不知道这个问题能否关注一下，很多项目开始用buffalo，如果这个问题存在，会导致无法使用。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41570</wp:comment_id>
			<wp:comment_author><![CDATA[atuchina]]></wp:comment_author>
			<wp:comment_author_email>atuchina@sina.com</wp:comment_author_email>
			<wp:comment_author_url>http://no</wp:comment_author_url>
			<wp:comment_author_IP>222.183.199.87</wp:comment_author_IP>
			<wp:comment_date>2007-04-07 22:17:30</wp:comment_date>
			<wp:comment_date_gmt>2007-04-07 14:17:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[如果可以与yui-ext配合就好了，我是说集成到一起，对web开发来说就只需要关注业务逻辑的实现，就象delphi一样，只是需要知道如何使用这些控件就行了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43530</wp:comment_id>
			<wp:comment_author><![CDATA[chenlb]]></wp:comment_author>
			<wp:comment_author_email>chenlbphoto@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.41.253.8</wp:comment_author_IP>
			<wp:comment_date>2007-04-21 13:58:55</wp:comment_date>
			<wp:comment_date_gmt>2007-04-21 05:58:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[希望加Calendar组件]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>归去，归去</title>
		<link>http://michael.nona.name/archives/162</link>
		<pubDate>Wed, 06 Dec 2006 12:50:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/162</guid>
		<description></description>
		<content:encoded><![CDATA[终于要回来了，感概良多。
 
Jacqui听到我说已经待三个月要回去了，吃惊的张大了嘴巴：“Oh no!” 我笑笑说确实已经三个月了。想想也挺快的，12个星期，在客户那里已经干了12个星期了，虽然到现在也没机会见到客户使用我们开发的系统，虽然几乎所有的代码最后都会被后来的人从svn打上自己的标签，虽然短短三个月的记忆很快会被磨灭，但对于我而言，是不那么容易忘记的。
 
这三个月发生的事情挺多的，有幸参与了悉尼，墨尔本的公司聚会，一个人住在有两个房间、独立客厅、阳台以及透明浴室的别墅一样的房间里；头一回用英文做了演讲；完成了一个项目的开发任务并开始一个几乎全新的项目居然完成得七七八八；还在闲暇时间做了公司另外一个项目的三张卡；发布了buffalo的新版本；居然还写了几章小说；头一次去冲浪居然能站起来；参加客户极其奢华的圣诞聚会，与客户一起疯狂跳舞；更有幸的是，这一切都有同事共同分享。这短短三个月的时间，过得异常丰富。三个月生命的长度有限，但广度与以前的生活无法比拟。
 
终于要回去了。一方面我如此的期待着回去：文化的差异不是简单的通过代码、How are you、啤酒能够掩盖的，我需要更高层次的交流，语言其实是很其次的东西，形成语言背后的巨大的文化鸿沟难以逾越；但另一方面还是有些不舍。不止一个人问我们：When would you come back? Come back? 我的回答含含糊糊，no idea。感觉很奇怪，为什么说是回来呢？难道他们不知道我们的家在中国吗？问得多了，还是能体会他们的感情，他们也不舍得我们离开，客户也很依赖那两个做卡做得比BA写得还要快的中国人。不舍的原因很简单，那种在项目中培养初来的感情比什么都来得真。我们的项目成员来自不同国家：印度，伊朗，印度尼西亚，美国，法国，英国，菲律宾，中国，当然还有澳大利亚。一到开会的时候，闭着眼睛听口音就知道是谁在说话。不同口音的英语在会议室响起的次数多了，一来二往，渐渐有了感情。这就是项目团队的锤炼吧。另外，说实话，我还从没见过那么敏捷的客户。

是为记，供回忆。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>162</wp:post_id>
		<wp:post_date>2006-12-06 20:50:52</wp:post_date>
		<wp:post_date_gmt>2006-12-06 12:50:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%bd%92%e5%8e%bb%ef%bc%8c%e5%bd%92%e5%8e%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>20959</wp:comment_id>
			<wp:comment_author><![CDATA[ALeX (Beijing ITer)]]></wp:comment_author>
			<wp:comment_author_email>kiss__sky@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.48.64.235</wp:comment_author_IP>
			<wp:comment_date>2006-12-09 20:32:42</wp:comment_date>
			<wp:comment_date_gmt>2006-12-09 12:32:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[回来就好，外国的世界很精彩，金窝银窝还是自己的狗窝好，看了你走的文章，现在看到你回的文章。

一切很好，

就好。

Beijing ITer]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>21471</wp:comment_id>
			<wp:comment_author><![CDATA[chong]]></wp:comment_author>
			<wp:comment_author_email>zhs0567@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.152.168.149</wp:comment_author_IP>
			<wp:comment_date>2006-12-20 17:30:14</wp:comment_date>
			<wp:comment_date_gmt>2006-12-20 09:30:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[超人啊。。。。怎么有这么高的效率干活啊。。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26537</wp:comment_id>
			<wp:comment_author><![CDATA[Lydia.W]]></wp:comment_author>
			<wp:comment_author_email>samantha5233@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.61.122.116</wp:comment_author_IP>
			<wp:comment_date>2007-01-11 16:37:59</wp:comment_date>
			<wp:comment_date_gmt>2007-01-11 08:37:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Welcome back, Michael!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30163</wp:comment_id>
			<wp:comment_author><![CDATA[Ten]]></wp:comment_author>
			<wp:comment_author_email>tanjie-1987@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://null</wp:comment_author_url>
			<wp:comment_author_IP>203.187.184.114</wp:comment_author_IP>
			<wp:comment_date>2007-02-05 15:44:04</wp:comment_date>
			<wp:comment_date_gmt>2007-02-05 07:44:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[想联系你，能不能发封邮件给我，tanjie1987@gmail.com]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48166</wp:comment_id>
			<wp:comment_author><![CDATA[aspirer]]></wp:comment_author>
			<wp:comment_author_email>h@h.com</wp:comment_author_email>
			<wp:comment_author_url>http://hexun.com/aspirer2008</wp:comment_author_url>
			<wp:comment_author_IP>222.92.14.201</wp:comment_author_IP>
			<wp:comment_date>2007-05-09 12:55:40</wp:comment_date>
			<wp:comment_date_gmt>2007-05-09 04:55:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不怎么认识你，但觉得你是一个值得尊敬的IT前辈。我留下言，闪了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>56418</wp:comment_id>
			<wp:comment_author><![CDATA[huangyingqi]]></wp:comment_author>
			<wp:comment_author_email>hyqly-xly@sohu.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>133.87.1.153</wp:comment_author_IP>
			<wp:comment_date>2007-07-08 15:14:40</wp:comment_date>
			<wp:comment_date_gmt>2007-07-08 07:14:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[最近我在看lz算法，搜索菲力普.卡兹的时候到了你的博客,发现很多观点和困惑相似啊,很是欣赏你的人品,很想认识你,我找了一小时找不到你的联系方式,请与我联系,邮箱:hyqly-xly@sohu.com,最近我在国外,也许能用这个邮箱:hyqlyxly@complex.eng.hokudai.ac.jp
谢谢!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>置身事外：能力与勇气</title>
		<link>http://michael.nona.name/archives/163</link>
		<pubDate>Fri, 23 Mar 2007 10:05:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/163</guid>
		<description></description>
		<content:encoded><![CDATA[一台完美的晚会，演员为了观众而投入的表演，观众被表演而吸引，或捧腹或感动，而主持人一定是不温不火的那一个。他看起来不属于舞台：既不需要投入的表演，也不能忘我的欣赏节目，他最需要做的，就是按照既定的节奏，引导整台晚会逐步完成。观众笑，他可以笑但不能毫无顾忌；演员演得不尽人意，他通常也不能冲上去救场。他只能冷静的（无论从外表看起来他与观众、演员、嘉宾交流多么投入）按照时间规划，客观、严格的完成节目。

看起来，好像主持人是置身事外的。作为一台晚会，他没有参与其中最重要的部分。但从没有人质疑主持人的重要性，同时人们对这种分工也觉得很自然。但如果场面变一下：主持人跟观众一样感动得没了分寸，又或者觉得演员表演欠佳，他冲上去临时换着扮演，破坏演员节奏，恐怕最终结果不会那么乐观。劳动分工的精确含义在于，充分相信那个角色在当时场景下所做的努力，并尽最大努力帮助你的伙伴，不受干扰，节奏平稳的完成他的工作。

我现在依然看到，很多软件项目中，项目经理往往是一个悲情角色。他往往需要对整个项目负责，技术很强（开发背景），同时还要把握需求，控制需求，还需要跟客户（或者业务部门）交流，以及汇报。早些年参加软件工作的时候，我一直很羡慕项目经理的职位，呼风唤雨，加班（那时一直认为加班是一件很光荣的事情），随意抽调人，出差。后来有机会做了一些类似的工作，才发现这个职位几乎不能由人来胜任。项目经理要日常管理的同时，还需要是一个技术领袖，能够审核开发人员的代码。在这种情况下，项目经理一人之力撑起了一把伞，其他角色心安理得的躺在伞下，不用担心任何问题。

敏捷项目中，程序员更希望项目经理是一个看不见的角色。项目最终看起来是什么样子？由BA/QA决定。项目最终质量如何？由那帮写代码的决定。项目经理要做的，是置身事外。这里的事，就是具体的开发。冷眼旁观，但不评价，不插手，充分信任。置身事外需要勇气，即便在客户的高压下，也能够不加班的勇气；需要能力，需要辨别风险需求的能力。作为项目交付这台大的晚会，作为主持人，要做的就是保护你的程序员，是他们在任何情况下，能够持续稳定的产出可工作的、高质量代码。

勇气

作为极限编程中的原则（或者价值观）之一，在其他方面同样有效。项目经理要面对的最大的风险往往是需求的变更。作为一个正常的项目，大部分来自客户的变更都是有意义的。客户至上的理念在这里并不通用。在敏捷叠帽子游戏中，大部分的参与者都认识到时间与质量之间有一个平衡，总得拿些东西来换的。然而面对真正的客户，我们是否有勇气对一个看似合理的需求变更说不？说不很可能意味着客户不高兴，或者永久失去了一个客户。我们永远需要记住的是，客户需要100%，我们在规定时间内交付合格的哪怕50%都比交付不合格的99%要有意义得多。

能力

劝说客户是需要技巧的。与客户交流是需要技巧的。这些技巧程序员天生不具备。缜密的逻辑思维让他们不能在若干种模棱两可的商业外交语中如同编程代码一样游刃有余。这需要一个真正逻辑清楚并且沟通较好的人来完成。不要期待这样的人也能够写出比hello world级别更高的代码。通常情况下，他们只需要了解三层架构等等概念性的东西。与客户沟通，项目管理，分析项目开发进度，找到影响开发速度的地方并持续改进开发过程，适当激励才是项目经理需要做的事情。这些事情可以通过个人魅力，但也是需要技巧的。

置身事外

置身事外不是放纵。最大意味着，信任。一个团队中一定有一两个编程方面突出的人。保护这些激情并引导成为成就感，而不是架起一座大伞他们可以躺在伞下睡觉。不断强调整体团队与荣辱与共，这样项目的成功才能成为所有人的成功，而不是一个人的成功。

作为管理者或者推动者，是一个相当不能进入状态的角色，很多时候他们需要警惕破坏团队的因素并不断改进。上面的每一点都可以展开说去，每一点都是知易行难。我逐渐发现构建一个新的团队的过程远比引入新技术复杂的多。但不怕慢只怕站，持续改进，你的团队将成为最可怕、效率最高的团队。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>163</wp:post_id>
		<wp:post_date>2007-03-23 18:05:04</wp:post_date>
		<wp:post_date_gmt>2007-03-23 10:05:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%bd%ae%e8%ba%ab%e4%ba%8b%e5%a4%96%ef%bc%9a%e8%83%bd%e5%8a%9b%e4%b8%8e%e5%8b%87%e6%b0%94</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<category domain="category" nicename="agile"><![CDATA[敏捷]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>39709</wp:comment_id>
			<wp:comment_author><![CDATA[艳子]]></wp:comment_author>
			<wp:comment_author_email>www.huyan198921@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.174.175.108</wp:comment_author_IP>
			<wp:comment_date>2007-03-28 09:11:47</wp:comment_date>
			<wp:comment_date_gmt>2007-03-28 01:11:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[纸上谈兵]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39575</wp:comment_id>
			<wp:comment_author><![CDATA[大萝卜]]></wp:comment_author>
			<wp:comment_author_email>equalto@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.238.121.194</wp:comment_author_IP>
			<wp:comment_date>2007-03-27 15:44:48</wp:comment_date>
			<wp:comment_date_gmt>2007-03-27 07:44:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呓语。。。。。。。。。。。。。。。

谁都会这么说，但是现在的情况为什么会是这样？？？？
有没有想过，现状的产生原因？
有没有了解到，国内其它尝试很完美的软件模式的结果？

如果要解决现在的问题，需要有哪些前置条件，又要做哪些工作？？


这样的言辞，我见的太多了，只当是废话，当是抱怨。因为没有分析问题，对症下药，提出解决的手段和过程。就在那里空想。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40158</wp:comment_id>
			<wp:comment_author><![CDATA[jessica]]></wp:comment_author>
			<wp:comment_author_email>jessica.kjm@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://kkjmyazi.cnblogs.com</wp:comment_author_url>
			<wp:comment_author_IP>59.172.70.162</wp:comment_author_IP>
			<wp:comment_date>2007-03-31 00:30:21</wp:comment_date>
			<wp:comment_date_gmt>2007-03-30 16:30:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不明白为什么楼上留言说是纸上谈兵。也不明白为什么楼上的楼上说是空想。
勇气 是 一种能力。 与客户真正做到了情感沟通的人，随时都会有这种勇气，有的时候反而不需要我们说不。我碰到过客户不停替我们着想的。

管理上有个说法，真正做的好的大老板，就是看看报纸，喝杯茶，晃晃悠悠就行了。
置身事外是有可能并完全可做到的。前提是你真正做到了只充当“教练”，不当“队长”。

支持楼主。
ps：楼主的文笔让人嫉妒啊！收藏了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>54928</wp:comment_id>
			<wp:comment_author><![CDATA[http://www.microhelper.cn/pligg]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.microhelper.cn/pligg/story.php?id=35</wp:comment_author_url>
			<wp:comment_author_IP>208.97.139.18</wp:comment_author_IP>
			<wp:comment_date>2007-06-13 10:26:00</wp:comment_date>
			<wp:comment_date_gmt>2007-06-13 02:26:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>置身事外：能力与勇气-Michael Chen’s Blog</strong>

项目经理的的职责是什么？怎么做一个优秀的项目经理？有人选择事事亲历亲威，也有人选择置身事外。虽然不100%赞同文章的观点，但是有几点是很认同的：
项目的成功应该是所有人的成功]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>纸上得来终觉浅？</title>
		<link>http://michael.nona.name/archives/164</link>
		<pubDate>Mon, 26 Mar 2007 02:12:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/164</guid>
		<description></description>
		<content:encoded><![CDATA[在过去很长的一段时间里，我基本不看电视，不读报纸，不上新浪或者搜狐类的综合类网站。在我看来，那些媒体大多无意义，无论你是否主动阅读，大的新闻总能通过各种渠道传到你的耳朵里，不多不少。道听途说，广告墙，广播等这些强制媒体大多无法逃过。

不读新闻的另一个原因就是，新闻大多负面，在关系普通人，或者说那些弱势阶层的新闻方面，我偏偏又有点害怕麻木，有点受不了那么多生命的悲伤。于是索性不管不闻，一任自己在技术中两耳不闻窗外事。

一则很简单的新闻：<a href="http://news.cnwest.com/content/2006-07/06/content_236165.htm">少女术后变成植物人 终审医院判赔10余万</a>，以及相关的<a href="http://www.google.com/search?hl=en&rlz=1B2GGGL_enCN177&q=%E6%A4%8D%E7%89%A9%E4%BA%BA+%E5%91%A8%E5%92%AA&btnG=Search">结果</a>

这是很简单的新闻：没有吸引眼球的噱头，没有煽情的情节，没有沉重的眼神或者背景音乐。大多数人看到这则新闻都会一跳而过，好心的人心里会难受一下，叹息一声继续自己的生活。然而幸与不幸，我却昨天在东大街亲眼看到了这位因为医疗事故而变成植物人的小女孩，以及满面憔悴、绝望中依然残留希望的父亲。他们躺在用广告纸糊起来的破板车上。小女儿依偎在父亲的旁边，看得出父亲很细心，这个叫周咪的小女孩脸上干净而清秀，大眼睛纯净，但无神，瘦骨嶙峋的胳膊——那是真正的瘦啊，能看见的是包住骨头。父亲一脸忧伤，胡子和头发都很长，但依然抚慰着女儿。破板车的前面，是一个装满钱的纸盒。

从新闻看来，只是一则普通的医疗事故——这样的事情太多了啊。然而，从新闻上看到的，可能想到、也可能永远想不到，这会给这个原本幸福的家庭带来多大的打击。医院的进行完第一步手术后，发现束手无策，让家人准备后事，然而这个时候昏迷的女儿突然睁开眼睛：爸，我想活下去。受不了刺激的母亲直接疯了，父亲踏上了为女儿筹集20万手术款的而乞讨的路。大多数读者不会考虑到，这样一则简单的新闻背后，是这样一个凄凉的家破人离的故事。

在留我能给的帮助后，我沉重黯然的离开。不知道这对父女最终会怎样，但我能深深的体会那种无奈，那种希望。只能在这里祝福他们。

05年中，拯救程序员王俊的行动由BJUG发起，他是幸运的，在不长的时间里筹集到了相当数量的捐款并且成功实行了手术。然而程序员是一个相对资源富余的行业，沟通和交流都要容易得多；那些眼界被限制在特定阶层的人们，只能在烈日之下，躺在广告纸糊成的板车上，苦苦等待着路人一块两块，十块二十块的施舍。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>164</wp:post_id>
		<wp:post_date>2007-03-26 10:12:49</wp:post_date>
		<wp:post_date_gmt>2007-03-26 02:12:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%ba%b8%e4%b8%8a%e5%be%97%e6%9d%a5%e7%bb%88%e8%a7%89%e6%b5%85%ef%bc%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>39736</wp:comment_id>
			<wp:comment_author><![CDATA[dennis]]></wp:comment_author>
			<wp:comment_author_email>killme2008@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.162.145.162</wp:comment_author_IP>
			<wp:comment_date>2007-03-28 13:13:30</wp:comment_date>
			<wp:comment_date_gmt>2007-03-28 05:13:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这个社会下的大部分人都已经是犬儒主义者，包括我，我们改变不了，无能为力。无论是彻底地抗争，还是彻底的麻木都办不到]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39864</wp:comment_id>
			<wp:comment_author><![CDATA[another dennis]]></wp:comment_author>
			<wp:comment_author_email>hhee4j@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.21.108.43</wp:comment_author_IP>
			<wp:comment_date>2007-03-29 11:30:03</wp:comment_date>
			<wp:comment_date_gmt>2007-03-29 03:30:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[每天会看到一些人，蜷缩在暖气通风盖的旁边取暖，自己能做的是经过的时候给他们一点同情的目光，一点点帮助。我知道一个人改变不了什么，但可以帮点就帮点。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40800</wp:comment_id>
			<wp:comment_author><![CDATA[tastesnow]]></wp:comment_author>
			<wp:comment_author_email>hailinghit@yahoo.com.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.2.164.21</wp:comment_author_IP>
			<wp:comment_date>2007-04-03 20:29:22</wp:comment_date>
			<wp:comment_date_gmt>2007-04-03 12:29:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[媒体，使原来无法接触到的消息铺天盖地而来，让我们原本就柔弱的心无法承受，也让那些原本走投无路的人有了更多的希望。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41344</wp:comment_id>
			<wp:comment_author><![CDATA[Loga]]></wp:comment_author>
			<wp:comment_author_email>loga2001@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.150.43.47</wp:comment_author_IP>
			<wp:comment_date>2007-04-06 09:21:30</wp:comment_date>
			<wp:comment_date_gmt>2007-04-06 01:21:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[出来混的都不容易，能帮就帮。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>58585</wp:comment_id>
			<wp:comment_author><![CDATA[晃倒乔丹]]></wp:comment_author>
			<wp:comment_author_email>martin_tree@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.231.200.141</wp:comment_author_IP>
			<wp:comment_date>2007-09-05 22:51:17</wp:comment_date>
			<wp:comment_date_gmt>2007-09-05 14:51:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这个世界悲剧太多了，喜剧也太多了，没办法这就是世界。
顺便问你一下你住在西安啊？
种种迹象表明你在西安--东大街、西部网]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68163</wp:comment_id>
			<wp:comment_author><![CDATA[iStone]]></wp:comment_author>
			<wp:comment_author_email>060515@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://meiyou.org</wp:comment_author_url>
			<wp:comment_author_IP>58.244.38.50</wp:comment_author_IP>
			<wp:comment_date>2009-04-03 14:46:41</wp:comment_date>
			<wp:comment_date_gmt>2009-04-03 06:46:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[真是无法承受的痛.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>buffalo 2.0 最终版正式发布</title>
		<link>http://michael.nona.name/archives/165</link>
		<pubDate>Tue, 24 Apr 2007 14:59:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/165</guid>
		<description></description>
		<content:encoded><![CDATA[[Update] InfoQ中文报道：
<a href="http://www.infoq.com/cn/news/2007/04/ajax-framework-buffalo2">http://www.infoq.com/cn/news/2007/04/ajax-framework-buffalo2</a>

从2.0-alpha1发布至今，经过长达半年多的测试阶段，buffalo 2.0正式版本发布。2.0最大的关注点在于性能的提升和完全自行实现的java到javascript协议转换。根据评测，2.0版本要比前一阶段版本最高提升30%性能。这得益于新的协议实现以及为大规模AJAX调用而进行的优化。

对于一直使用alpha版本的用户，此次升级很简单，只需要将相应的jar和js进行替换即可。从1.2.x版本升级的用户，升级也很简单：

* 删除所有burlap*.jar, buffalo*.jar, 替换为buffalo.jar
* 替换新的buffalo.js
* 将继承自BuffaloService的类，对session等信息的使用替换为对RequestContext.getContext().getXXX的使用。（注意，目前有开发者报告在resin 2.1服务器上偶尔会出现丢session的现象）

2.0正式版本的发布意味着完全自我独立的协议实现，为后续特性的开发打下了基础。

继续感谢：一直使用、提出Bug以及解决办法、在论坛帮助他人的朋友们，没有你们，buffalo无法走到今天。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>165</wp:post_id>
		<wp:post_date>2007-04-24 22:59:31</wp:post_date>
		<wp:post_date_gmt>2007-04-24 14:59:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>buffalo-20-%e6%9c%80%e7%bb%88%e7%89%88%e6%ad%a3%e5%bc%8f%e5%8f%91%e5%b8%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="amowa"><![CDATA[Amowa]]></category>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>67267</wp:comment_id>
			<wp:comment_author><![CDATA[陈红旭]]></wp:comment_author>
			<wp:comment_author_email>chenccut@tom.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.6.191.137</wp:comment_author_IP>
			<wp:comment_date>2008-04-03 10:50:15</wp:comment_date>
			<wp:comment_date_gmt>2008-04-03 02:50:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[中国人开发的框架为什么使用英语作为主流文档？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>想象的黄昏</title>
		<link>http://michael.nona.name/archives/166</link>
		<pubDate>Sat, 05 May 2007 15:30:58 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/166</guid>
		<description></description>
		<content:encoded><![CDATA[很久以来我一直在JavaEye的AJAX和海阔天空板块转悠，突然有一天注意到首页已经面目全非：以前只有导航，没什么人问津的博客之星，剩下的内容主要就是最近好贴及其摘要了；现在突然变成了典型的“无意识导航”的首页：到处都是链接，大大的没什么含义的所谓新闻图片，频道一个接一个，链接一堆连着一堆，一眼望去让人生畏：这个世界倒退了么？回到了CSDN、奇虎之类的那种类型的站点了么？JavaEye的读者突然发现自己不能主动选择要读什么而选择在链接的海洋里游弋么？

我现在已经很少去51JS，但前些日子偶尔跑去，突然发现了首页由原来的论坛，已经变成了大杂烩，从JavaScript初级问题到高级概念，从ASP到JSP，从冰天雪地跪求到聊天灌水。一摞摞的链接看得人眼花缭乱。

想象力就这么容易被环境同化吗？Web的想象力，已经日薄西山，到了黄昏了吗？

这里我并不想讨论新型UI和旧的UI之前的差别，只是从亦步亦趋的这种方式，不是一种好的态度，更重要的是，他会损伤用户的期待。这方面失败的例子，是大名鼎鼎的谷歌。这个带着Google帽子的中国公司，几乎从取名到现在，几乎没有做过一件让他的粉丝高兴的事情，甚至觉得丢人：Google上网导航？百度笑了；谷歌拼音输入法？搜狗笑了。跟在竞争对手的屁股后面亦步亦趋，不仅是迟钝的，更重要的是从一家以创新型著称，以整合信息为使命的互联网公司，这是不可接受的。

Stabletable是一个英国人的专利，原理很简单，就是用一叠橡胶片来调节高度，从而垫住不稳的桌子。这个小发明在申请专利的时候得到了耻笑，说是这是世界上最没有价值的专利。然而两年后，专利的主人在网上销售了总价值500万英镑的橡胶垫片，并把生意做到了海外，宜家等都从他那里订货。这是想象，这是坚持，这是不与世俗妥协。当屈从于大众的做法、想法的时候，想象就到了黄昏，很快就沉入黑夜。只有破陈出新，才可能形成真正的竞争力，并吸引那些真正喜欢你产品 的人。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>166</wp:post_id>
		<wp:post_date>2007-05-05 23:30:58</wp:post_date>
		<wp:post_date_gmt>2007-05-05 15:30:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%83%b3%e8%b1%a1%e7%9a%84%e9%bb%84%e6%98%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>杂谈：Mac, 注意力，好的产品</title>
		<link>http://michael.nona.name/archives/167</link>
		<pubDate>Thu, 10 May 2007 14:18:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/167</guid>
		<description></description>
		<content:encoded><![CDATA[这两天一直处在拥有一台MacBook Pro的兴奋当中。毫无疑问，MacBook Pro是几乎每一个程序员梦寐以求的终极开发平台，无论是硬件还是软件，Apple一贯的简约华丽让人过目难忘。在过去一年多里，在windows/linux上，我一直在寻找OSX外观的模仿，OSX软件的模仿，现在那些日子终于过去了，我手上，现在，敲出的这些文字，正出自MacBook Pro, MA609. 

去年我在悉尼的时候Gianny Damour(Geronimo commiter之一，ThoughtWorker)说，Mac能够显著提高生产力。我当时不以为然；然而现在在OSX上写着代码，我大概明白了为什么能显著提高生产力：原因在于注意力。

看得出来Mac OSX花了很大的心思在让用户忽略OSX本身上。在使用Dell D610的时候，每次开机，右下角的那些驻留程序一个又一个的启动，浮出不同的提示告诉你，嘿，我启动成功了；我找到了一个无线网络，我连上了，等等。Mac启动很快，大概二三十秒，短暂的开机音乐后，系统启动完成，上面浮出Finder的菜单，下面浮出Dock面板，机器就安静的等待着你的指令。无线网络自动连上了并且以深色显示在右上角上，没有多余的声音、动画。开启一个程序，菜单条在最顶上，这是因为任何一个稍具经验的聪明的用户使用菜单的频率都远小于使用窗口本身，加上快捷键的支持，菜单只是一个入门的手段。用户的注意力在窗口本身而不是菜单，既节约了屏幕空间，又节约了时间。

Aqua界面简洁清爽。大多数成功的Web 2.0应用或多或少借鉴了osx的设计：看看Google Calendar和iCal；看看37Signals的产品。干净设计加上对用户注意力的保护，这种应用很难不在现今内容堆砌的web应用海洋中崭露头角。

说到Mac，自然要提TextMate的。emacs和VIM的愤青族自然要保护他们钟爱的编辑器：功能强大，自定义能力极强，无所不能的编辑功能，等等。没错TextMate要比emac、vim在单文件的编辑上能力要弱，但是……问题是那么多功能，需要开发需要记忆的功能，你真得用得上吗？作为现代编辑器，基本的tab编辑，简单但是快速的项目支持，多文件导航，emacs, vim显得有点力不从心。更重要的是，根据大多数程序员的经验整理而出的Bundle, 是对开发生产力的极大提升。我想好的产品，除了功能不能弱之外──TextMate的编辑能力还是很强的──更重要的是不让程序员做重复的事情，特别是在动态语言如此流行的今天，TextMate这款编辑器做到了极致。没有很复杂的技术，没有超越emacs/vim的编辑能力，仅仅通过添加项目支持和Bundle, 使得它的用户一经使用，便爱不释手。

Mac带给我的不仅仅是一台新的机器，更重要的是提高了生产力，以及界面、交互上的一些思路以及在制造成功产品方面的一些思考。我更加坚信buffalo所走的“简单”的道路是正确的，事实上，无论产品的制造者如何考虑，产品的使用者总是希望产品能够带来强大功能的同时不丧失使用的简单性。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>167</wp:post_id>
		<wp:post_date>2007-05-10 22:18:15</wp:post_date>
		<wp:post_date_gmt>2007-05-10 14:18:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9d%82%e8%b0%88%ef%bc%9amac-%e6%b3%a8%e6%84%8f%e5%8a%9b%ef%bc%8c%e5%a5%bd%e7%9a%84%e4%ba%a7%e5%93%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>距离</title>
		<link>http://michael.nona.name/archives/168</link>
		<pubDate>Mon, 21 May 2007 15:13:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/168</guid>
		<description></description>
		<content:encoded><![CDATA[从没有想法到有想法：1步。

从想法到开始行动：1公里。

从行动到完成：100公里。

从完成到成功：100光年。

<img src="http://mechiland.googlepages.com/distance.jpg" alt="Distances" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>168</wp:post_id>
		<wp:post_date>2007-05-21 23:13:13</wp:post_date>
		<wp:post_date_gmt>2007-05-21 15:13:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%b7%9d%e7%a6%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>AJAX: 模式？实践！</title>
		<link>http://michael.nona.name/archives/169</link>
		<pubDate>Sat, 26 May 2007 14:50:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/169</guid>
		<description></description>
		<content:encoded><![CDATA[我一直以为自己已经不需要看任何与AJAX相关的书籍了──无论是我过去的工作（XMLHttp based BI client, LiveChat...），还是我现在在这方面所做的工作(amowa, buffalo, OPOA)，都或多或少不能让我看清楚这个领域更多更新的东西。然而大概读完《AJAX模式与最佳实践》后，我才了解到，自己那些对AJAX这个buzz word的零散理解居然可以被系统整理到这样清晰、易懂并且可实践。

任何实践都只能是一个系统化理论的切片。虽然AJAX赖以生存的关键技术XMLHTTP早已实现，但自从Google推出Gmail之后，相关的讨论才如雨后春笋纷纷出土。各种语言、各种平台、各种所谓的最佳实践、对这种技术的种种好处、罪过的讨论，瞬间涵盖了去年至今的大部分技术话题。这种出现既有历史的原因──IT系统已经不仅仅满足到“能工作”这个阶段，还上升到了“可用”、“易用”了；还有技术成熟度的原因──悄然之间Xmlhttp已经在主流浏览器全部实现了。由于优秀的部署模型，越来越多的企业采用Web技术来实现他们的业务系统。AJAX成为改善用户体验的关键技术。然而，正如前面所说，太多的实现、讨论，让开发人员在进行选型与技术实现的时候思考再三。特别是刚开始进行技术转型的开发人员，在众多的迷惑面前，往往不知道怎么做才是正道。

《AJAX模式与最佳实践》解除了所有的迷雾。通过模式的阐述方式，这本书将每一种模式意图、动机、适用性、架构、实现以及注意事项表现在你面前。读这本书的时候，我发现自己之前所做的思考和工作，居然都在这9种模式中，而且有了贴切的名字。模式中的阐述，已经远远超过了零星的思考，更加全面，更具指导力。作者Christian Gross深厚的技术背景，将这些看似繁杂的技术分解，总结出适用于绝大多数人场景的9种模式。同时应该感谢李锟及其团队的努力。在翻译这本书的过程中，我听到了李锟的诉苦。谢天谢地，他坚持下来了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>169</wp:post_id>
		<wp:post_date>2007-05-26 22:50:39</wp:post_date>
		<wp:post_date_gmt>2007-05-26 14:50:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ajax-%e6%a8%a1%e5%bc%8f%ef%bc%9f%e5%ae%9e%e8%b7%b5%ef%bc%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>双向流模拟同步HTTP连接</title>
		<link>http://michael.nona.name/archives/170</link>
		<pubDate>Fri, 08 Jun 2007 09:56:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/170</guid>
		<description></description>
		<content:encoded><![CDATA[AJAX毫无疑问，增强了单个用户的体验。然而，对于如何能够增强“参与感”的技术，能够见到的论著寥寥无几。例如，聊天室，如何能有效、低延迟、高伸缩性的进行多人聊天？我们能够想到的方式有如下几种：

* HTTP pull. 通常的实现方式是隐藏帧刷新，或者XMLHTTP访问。每隔一段时间（2秒或者更多）对服务器进行访问从而获得更新信息。
* HTTP Push. 现在有了一个更流行的名词：Comet。基本实现原理是通过服务端向客户端回复一个永远不会断开的连接。通过不断输出可以直接执行的javascript代码，或者一块可以被应用程序解析的字符串，达到相互通信的目的。

第一种方法的缺陷一目了然：效率低，延迟高。由于并非每一次请求都会有返回的数据，当次请求的返回值则毫无意义。而这其中建立HTTP 连接的时间，服务器处理的时间，客户端消耗时间等，让这些请求毫无价值。没有数据的请求让服务器疲于应付无效请求，浪费了计算资源。另外，由于没有一个合理的请求频率策略，导致应当及时返回的消息在最坏的情况下于延迟时间返回。例如，用户在00:01发送了一条消息，系统每隔2秒扫描一次，在00:03秒，另外一个用户才得到这个消息。当然在聊天应用没有关系，但是实时性要求更高的场景下这些往往不一定可以接受。

第二种方法解决了实时连接的问题，然而这要求更高超的服务器端编程技巧。现在看到的WEB服务器都并非为长连接而设计，你可以看到将这种方案部署到常见的Web应用服务器上的时候性能下降得多么厉害。更为现代的Web服务器，如twisted, 基于MINA的asyncWEB采用了event driven IO以及线程重用等技术，在这方面表现很好。然而，这种长连接最大的问题是，无状态架构不能很好的被应用，从而影响了系统的伸缩性。

目前更好的一种方案是：<a href="http://www.xmpp.org/extensions/xep-0124.html">BOSH</a>。这种原本为了jabber设计的规范，在应付这种需求的时候显得格外合适。它的基本原理不是常见的采用1条HTTP通道，而是不多不少的两条。策略如下：

* 系统启动后，客户端向服务器端发送请求（通道1）
* 如果有消息，服务器直接向客户端返回消息。客户端收到消息后，除了完成业务处理外，还立即向服务器发送一条新的请求。
* 如果没有消息，服务器保持通道1的请求。如果这个时候客户发来另外一个请求（通道2），服务器立即向通道1返回空响应，并保持通道2的请求。
* 如果很长一段时间没有任何消息（例如，30秒），服务端返回空给持有的通道。这个消息立即会触发客户端的一个新的请求。
* 如果很长时间没有接到用户的请求（30秒，例如），服务器断开客户端相关的session信息并清理相关资源。

我们看看有没有解决上述的问题：
* 效率：可以看到，只有当有数据的时候才会真正的完成请求（完成传输），无效的传输大大减少。通过规划合理的心跳检查时间，可以最大化传输的有效性。
* 延迟：由于在任意时候都有一条HTTP通道保持连接，因此可以想象延迟降到了最低。
* 伸缩性：由于采用两条通道轮换处理，常见的无状态架构可以被应用，不会影响伸缩性。

可以看到，通过增加一条HTTP通道进行轮换处理，提升了传输效率，降低了延迟同时不牺牲系统的可伸缩性，值得尝试。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date>2007-06-08 17:56:12</wp:post_date>
		<wp:post_date_gmt>2007-06-08 09:56:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8f%8c%e5%90%91%e6%b5%81%e6%a8%a1%e6%8b%9f%e5%90%8c%e6%ad%a5http%e8%bf%9e%e6%8e%a5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>54814</wp:comment_id>
			<wp:comment_author><![CDATA[Think in Read &raquo; links for 2007-06-11]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://my.donews.com/rainhanket/2007/06/11/links-for-2007-06-11/</wp:comment_author_url>
			<wp:comment_author_IP>211.100.33.116</wp:comment_author_IP>
			<wp:comment_date>2007-06-11 09:17:22</wp:comment_date>
			<wp:comment_date_gmt>2007-06-11 01:17:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Michael Chen’s Blog » Blog Archive » 双向流模拟同步HTTP连接 (tags: ajax http comet) [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>阿穆，回去吧</title>
		<link>http://michael.nona.name/archives/171</link>
		<pubDate>Sat, 09 Jun 2007 15:35:26 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/171</guid>
		<description></description>
		<content:encoded><![CDATA[阿穆成为今晚第二个被淘汰的选手。我觉得这对他是最好的归宿。长沙不适合他，更确切的说，这样的一种以选秀为目的的比赛不适合他。在今晚演绎的三首歌中，马头琴伴奏下的《狼》，阿穆表现得比原唱要有豪情的多。《我的未来不是梦》也展示了阿穆宽广的音域，蒙语歌没听明白，然而情深意真，配上他清澈的眼神，让人感动。

我去过新疆，然而没有机会见到一望无际的草原。我却深深的知道一个生长在视野不受阻碍的地方的人，来到高楼林立的都市那种无助与慌张。热爱音乐没有错，当音乐被这样一种方式包装出来的时候，从话筒里发出的声音，那么，还是当初想表达的那个声音吗？方仲永被拉出去秀了几圈后最终“泯然众人矣”，我不希望看到这样的阿穆。

一直非常非常喜欢那种原生态的声音，不要任何包装的声音。那迂回百折却又扶摇直上的曲风，让人无论身在何处，心却被带着飞上云霄。有很多很多人喜欢这种音乐，阿穆，即便以你现在音乐成就，仍然还有很远的路要走。

回去吧阿穆，回到草原，回到有马头琴，大草原，天低得伸手就能触到的地方，聆听昆仑神的声音，聆听来自西域真正野性的声音，让这些声音，借你的歌喉，传递给我们这些生活在视线不超过100米的人们，让我们暂时忘掉俗陈事务，让心涤荡在苍凉的天地之中吧……]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>171</wp:post_id>
		<wp:post_date>2007-06-09 23:35:26</wp:post_date>
		<wp:post_date_gmt>2007-06-09 15:35:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%98%bf%e7%a9%86%ef%bc%8c%e5%9b%9e%e5%8e%bb%e5%90%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>56420</wp:comment_id>
			<wp:comment_author><![CDATA[huangyingqi]]></wp:comment_author>
			<wp:comment_author_email>hyqly-xly@sohu.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>133.87.1.153</wp:comment_author_IP>
			<wp:comment_date>2007-07-08 15:19:08</wp:comment_date>
			<wp:comment_date_gmt>2007-07-08 07:19:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[最近我在学lz算法，搜索菲力普.卡兹的时候到了你的博客,发现很多观点和困惑相似啊,很是欣赏你的人品,很想认识你,我找了一小时找不到你的联系方式,请与我联系,邮箱:hyqly-xly@sohu.com,最近我在国外,也许能用这个邮箱:hyqlyxly@complex.eng.hokudai.ac.jp
谢谢!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>56421</wp:comment_id>
			<wp:comment_author><![CDATA[huangyingqi]]></wp:comment_author>
			<wp:comment_author_email>hyqly-xly@sohu.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>133.87.1.153</wp:comment_author_IP>
			<wp:comment_date>2007-07-08 15:30:01</wp:comment_date>
			<wp:comment_date_gmt>2007-07-08 07:30:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你说的那个程序员王俊现在怎么样了?他的相应网站打不开啊?所以大家要注意身体啊,编程很辛苦啊.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>非结构化形式表现结构化内容</title>
		<link>http://michael.nona.name/archives/174</link>
		<pubDate>Mon, 30 Jul 2007 12:23:55 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/174</guid>
		<description></description>
		<content:encoded><![CDATA[关于可用性设计，说到底是对用户操作心理期待的把握。如果操作反馈低于用户期待，感觉会很差；如果正好符合期待，用户感觉会很平滑；如果超出用户期待，做得比用户想象的更多，大多数用户都会惊喜并很快接受新的方式。

界面的表现形式占据了很大分量。在过去C/S年代，几乎没有非结构化内容。界面约等于数据库表，无论是外观或是功能。而随着Web2的介入，越来越多的应用引入了非结构化形式来表现结构化内容，以达到更好整合信息的目的。关于非结构化形式，有一些非常明显的特征：

* 使用用户用户的语言而不是计算机语言作为界面。非常典型的如使用“昨天”、“前天”取代2007-7-29等计算机友好时间。
* 使用松散布局而非紧凑布局。几乎绝大部分成功的Web2应用都拥有独一无二过目难忘的布局和色调
* 几乎不使用Grid控件。作为C/S年代代表的Grid, 几乎每个写代码的人都会用到。然而在成功的消费类应用的中，几乎没有人使用Grid, 如果需要使用，也是美化过后，或者采用能够表现对应单元格属性的表现方式。例如一条 张三  男 记录很可能被表现为张三的小图标以及象征性别特征的图片。
* 尝试将更多的信息而不是更少的信息放在首页。对于常规应用的开发者而言，这几乎是噩梦。因为这意味着信息整合。Portal就是这类问题的解决方案。然而看看Campfire的basecamp, 通过将常用的信息摘要放在首页，用户几乎不用进行额外的点击。

然而，非结构化形式并非意味着凌乱。凌乱的排版和信息堆砌给用户一种暗示：我可以在这里为所欲为。破窗户理论在这里同样有效。这可以解释为什么绝大多数看着很乱的聊天室内容也很乱。真正有意义的非结构化信息及其组织方式完全来自于真实用户的真实体验。

得出的结论是，结构化的表现形式造出的软件像工具，因为大多数人对工具的理解就是灰色、规整、耐用，同时乏味。非结构化表现形式造出的软件像精致的消费品，美观舒心。值得一提的是，Dell公司已经开始在沃尔玛摆起了柜台卖电脑。笔记本这个曾经商务人士标榜的东西，已经成为消费品。我们现在正在为客户开发的项目中，已经加入了很多消费类程序才有的UI特性。从长远看，消费品将是不可避免的终极目标，因为用户不是机器。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date>2007-07-30 20:23:55</wp:post_date>
		<wp:post_date_gmt>2007-07-30 12:23:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%9d%9e%e7%bb%93%e6%9e%84%e5%8c%96%e5%bd%a2%e5%bc%8f%e8%a1%a8%e7%8e%b0%e7%bb%93%e6%9e%84%e5%8c%96%e5%86%85%e5%ae%b9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>那些被遗忘的神圣</title>
		<link>http://michael.nona.name/archives/175</link>
		<pubDate>Mon, 20 Aug 2007 12:34:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/175</guid>
		<description></description>
		<content:encoded><![CDATA[魔兽世界历史中，萨格拉斯是伟大的战士，他在上百万年的时间里一丝不苟的履行这职责，摧毁他能找到的任何一个恶魔。虽然他轻易的战胜了每个强大的恶魔，但他被这种生物的堕落和无比的邪恶感到十分费解，高贵的萨格拉斯无法控制思想中不断翻腾的疑惑和失落，继而失去了他的信仰和作为泰坦的理智。萨格拉斯开始认为秩序的教条本身是愚蠢的——并且混乱和堕落是黑暗、寂寞的宇宙中唯一的真理。虽然他的泰坦伙伴们试图劝说他放弃错误的想法并平息愤怒的火焰，但他坚持认为他们的说辞都是谎言。最终外形随着内心发生巨大改变，他组织了强大的军队对抗泰坦……

这只是暴雪的策划师编写的故事，但也算是真实。无论是在东方还是西方神话中，这样的先例并不少。没有任何一件事情，比让一个人重复做着一件事情更加让人麻木。在很早写的小说江湖年代中，霍羽因为对小月强烈的思念和对骆武的仇恨，让他在北冰洋与恶劣自然界斗争的两年时间里逐渐神智迷失，忘却了那些美好的过往，沦为杀人机器。

我始终坚信人之初性本善，那些神圣难道不是我们早在若干年前就已经建立么。还有多少人记得第一次上学的激动，第一次恋爱的悸动，第一次与好友促膝的和洽，第一次解决难题的喜悦，第一次帮助别人的平静，第一次爬上大山，一览无遗的震撼……

我们的圈子越来越小。我们的话题越来越俗。 我们能玩的东西越来越大众，我们能去的地方越来越集中。我们开始对所谓的小众越来越偏爱，同时却越来越避讳。

那些神圣，那些纯净的想法，那些简单的行为，那些尝试突破禁锢做的尝试，你，你，你都忘了么？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>175</wp:post_id>
		<wp:post_date>2007-08-20 20:34:10</wp:post_date>
		<wp:post_date_gmt>2007-08-20 12:34:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%82%a3%e4%ba%9b%e8%a2%ab%e9%81%97%e5%bf%98%e7%9a%84%e7%a5%9e%e5%9c%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>58443</wp:comment_id>
			<wp:comment_author><![CDATA[ShiningRay]]></wp:comment_author>
			<wp:comment_author_email>test123@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://shiningr.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>222.66.60.242</wp:comment_author_IP>
			<wp:comment_date>2007-08-24 16:27:28</wp:comment_date>
			<wp:comment_date_gmt>2007-08-24 08:27:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我觉得，你还是考虑一下宇宙和“熵”，在回头想想为什么萨格拉斯要堕落吧

生物对于宇宙来说，多么渺小和不值一提]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>62554</wp:comment_id>
			<wp:comment_author><![CDATA[Shawn the R0ck]]></wp:comment_author>
			<wp:comment_author_email>citypw@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://citypw.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>222.209.217.159</wp:comment_author_IP>
			<wp:comment_date>2007-12-04 13:02:58</wp:comment_date>
			<wp:comment_date_gmt>2007-12-04 05:02:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[人之“初”到底指的多久,人是有罪性的,靠者宗教,道德,哲学是不可能摆脱罪性,建议读,和量子物理.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>62555</wp:comment_id>
			<wp:comment_author><![CDATA[Shawn the R0ck]]></wp:comment_author>
			<wp:comment_author_email>citypw@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://citypw.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>222.209.217.159</wp:comment_author_IP>
			<wp:comment_date>2007-12-04 13:03:54</wp:comment_date>
			<wp:comment_date_gmt>2007-12-04 05:03:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[人之“初”到底指的多久,人是有罪性的,靠者宗教,道德,哲学是不可能摆脱罪性,建议读圣经,尚书和量子物理.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>62645</wp:comment_id>
			<wp:comment_author><![CDATA[一学生]]></wp:comment_author>
			<wp:comment_author_email>ypyh8@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://ypyh8163.com</wp:comment_author_url>
			<wp:comment_author_IP>222.240.131.194</wp:comment_author_IP>
			<wp:comment_date>2007-12-07 16:07:16</wp:comment_date>
			<wp:comment_date_gmt>2007-12-07 08:07:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[楼主要是一直坚持写博多好啊.
很期待

我是无意之意搜到的.觉得写得很好,希望楼主坚持写下去.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>软件开发2.0大会 演讲归来</title>
		<link>http://michael.nona.name/archives/176</link>
		<pubDate>Fri, 30 Nov 2007 13:10:28 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/176</guid>
		<description></description>
		<content:encoded><![CDATA[这次大会的规模远远超出了我的想象。两天，4个分会场，40+个session, 1000+开发者。准备了一个多星期（实际上从1一个多月钱就开始构思）的幻灯片，现场效果自我感觉还不错。然而作为第二天最后一场，会场只有一半人左右参加，多少觉得有点失望。

见到了老朋友Peter Cheng, Ben Wang，还有若干平时常见到名字的人。总体来说，这次大会感觉非常棒！

这次演讲的幻灯片下载：

<a href="http://mechiland.googlepages.com/MichaelChen-MixLanguageDevelopment.pdf">混合语言开发</a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date>2007-11-30 21:10:28</wp:post_date>
		<wp:post_date_gmt>2007-11-30 13:10:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%af%e4%bb%b6%e5%bc%80%e5%8f%9120%e5%a4%a7%e4%bc%9a-%e6%bc%94%e8%ae%b2%e5%bd%92%e6%9d%a5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>62422</wp:comment_id>
			<wp:comment_author><![CDATA[mediar]]></wp:comment_author>
			<wp:comment_author_email>2053588@qq.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.133.6.22</wp:comment_author_IP>
			<wp:comment_date>2007-12-01 18:47:24</wp:comment_date>
			<wp:comment_date_gmt>2007-12-01 10:47:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你好，在网上搜LIVECHAT，发现你写过，并且开源，真是非常兴奋！但是遗憾的是没有找到下载的地址，不知道你现在还有没有做研究，有没有代码，十分希望能得到你的大作！

     mediar
        email:2053588@qq.com]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>62497</wp:comment_id>
			<wp:comment_author><![CDATA[庄表伟]]></wp:comment_author>
			<wp:comment_author_email>zhuangbiaowei@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.228.28.78</wp:comment_author_IP>
			<wp:comment_date>2007-12-03 09:10:28</wp:comment_date>
			<wp:comment_date_gmt>2007-12-03 01:10:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://zbw25.spaces.live.com/blog/cns!BD4EFBFAF436336C!1599.entry

这是我前段时间跟徐昊的一次聊天，应该跟你的思路非常接近。
“在现在越来越多语言混合编程的趋势下，语言本身的特性演化，也开始向多范式的方向发展，以便更好的与其他语言协作。”

也就是说，ruby比java能够更好的适应这样的趋势。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>又回北京</title>
		<link>http://michael.nona.name/archives/177</link>
		<pubDate>Mon, 10 Dec 2007 10:26:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/177</guid>
		<description></description>
		<content:encoded><![CDATA[世事真无常。05年这个时候我计划着离开北京，两年后的今天又回到了这里。刚到就赶上2007年第一场大雪，然后我就狠狠的再次领略了北京的交通：出站花了一小时等到出租，出租车司机说别去东直门了，送你到军博地铁吧。看着军博地铁两分种一辆呼啸而过，拖着巨大行李的我实在没有勇气挤进去。等了好一会儿，横下心反方向坐到八宝山……到公司时，已经是三小时后了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>177</wp:post_id>
		<wp:post_date>2007-12-10 18:26:46</wp:post_date>
		<wp:post_date_gmt>2007-12-10 10:26:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8f%88%e5%9b%9e%e5%8c%97%e4%ba%ac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>62946</wp:comment_id>
			<wp:comment_author><![CDATA[dreamhead]]></wp:comment_author>
			<wp:comment_author_email>dreamhead.cn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dreamhead.blogbus.com</wp:comment_author_url>
			<wp:comment_author_IP>219.235.233.66</wp:comment_author_IP>
			<wp:comment_date>2007-12-10 21:50:48</wp:comment_date>
			<wp:comment_date_gmt>2007-12-10 13:50:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[难怪你今天来晚了！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>2008 - 破冰之年</title>
		<link>http://michael.nona.name/archives/178</link>
		<pubDate>Thu, 03 Jan 2008 01:42:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/178</guid>
		<description></description>
		<content:encoded><![CDATA[不像<a href="http://gigix.thoughtworkers.org/2007/12/29/happy-new-year">gigix</a>, 动不动来个许愿，我翻看了一下从2004年到现在的blog, 几乎没有任何关于许愿的帖子。这不是意味着自己没有计划，相反，而是将计划看得太重要，重要到以至于在新年到来的时候做回顾，都不曾记起曾经计划过什么。

2007年碌碌却无大作为。buffalo成功发布新版本，我却莫名奇妙的在后续的日子里做WPF富客户端应用开发到年底，看起来要做到明年；因为不想某人而开始玩魔兽世界，却有了做企业应用完全没有的新的技术体验。去软件开发2.0大会做关于混合语言开发的演讲，或多或少找到了技术传道者的感觉。

然而有太多的东西盘旋在脑海挥之不去：做一些用户群更广泛的东西是我一直的想法，然而这些想法在没有被天才般的同事打败之前，就被自己缺乏行动力的想法打败。太熟悉，太聪明并非都是好事。至少从外观看来，我除了工作本身，没有多少值得提及的东西。

另外郁闷的是，活动的圈子小了，转来转去，看来看去，都是熟悉的人名，熟悉的字眼。

2008对我而言，将是破冰的一年。让想法盘旋而去的最好做法是让它实现。无论是技术的或是非技术的，这里列举余下：

- 一个成熟到至少100人在线的应用 [0/1]
- 参加一次义工活动(组队) [0/1]
- 写一本非技术的书 [0/1]
- 每周至少一篇Blog [0/51]

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date>2008-01-03 09:42:47</wp:post_date>
		<wp:post_date_gmt>2008-01-03 01:42:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2008-%e7%a0%b4%e5%86%b0%e4%b9%8b%e5%b9%b4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
	</item>
	<item>
		<title>构建基于慢速网络的实时应用</title>
		<link>http://michael.nona.name/archives/179</link>
		<pubDate>Thu, 03 Jan 2008 14:35:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/179</guid>
		<description></description>
		<content:encoded><![CDATA[HTTP连接往往被考虑为慢速的。通常不会考虑在之上构建所谓实时应用。然而玩过网络游戏的人都知道，除了类似于CS之类实时性要求非常高的外，延迟在500毫秒以下是可以继续游戏的，而750毫秒以下也可以勉强凑合，如果放到网页中，需要用户之间实时交互的应用延迟在1秒左右完全可以接受。据我的检测，国内绝大部分ISP到用户桌面的延迟远远小于这个数字。技术催生需求，这种情况下我们可以考虑利用这些特性来做一些有趣的应用。那么在这种情形下，我们该如何编写具备实时性的客户端代码？

在前面讨论的<a href="http://michael.nona.name/archives/170">双向流模拟同步HTTP连接</a>中，我提到了<a href="http://www.xmpp.org/extensions/xep-0124.html">Bidirectional-streams Over Synchronous HTTP (BOSH)</a>。然而经过验证，这种通用的设计在项目设计中并不吃香。原因之一是过于复杂，无论是服务器端还是客户端。如果有成熟的服务器端还好，否则要自行实现双通道HTTP连接的控制，这其中设计大量的低级Socket以及线程操作，相当需要技巧。在此之上，如果有更复杂的伸缩性需求，整个实现将会使梦魇。实现的复杂性同样会出现在客户端。客户端需要控制消息的拆包、封包，更高级些，能够精巧的控制Http连接（基本上是XMLHTTP的连接）个数。这些也需要相当的功底。

有一种更加简单，并且容易实现的方式，经过我的实验，能够完美的应用到新的应用中，能够满足实时性的要求。基本原理就是：

<strong>当上一个请求返回之前，不要发起下一个请求。一旦上一个请求返回，立即发起下一个请求。</strong>

这是一个非常简单的设计。但非常有效。写成代码就是：

<code>
function forever_request() {
new Ajax.Request('url', {onCompleted: function(response) {
  //do your stuff
  forever_request();
}})
}
</code>

这个确实很简单，但这不是构建实时应用的全部。实时意味着，大多数的用户操作需要广播到所有当前可见用户的桌面上。理想情况下，界面只是一个哑终端，只是如实的表现服务器端传递过来的消息。forever_request方法有两个作用：用来发送消息以及获取服务器响应。增强后的forever_request方法就是：

<code>
function forever_request() {
new Ajax.Request('url', 
  parameters: pendingMessages.pickAll().serialize();
  {onCompleted: function(response) {
  <strong>responseMessage(response.Text);</strong>
  forever_request();
}})
}
</code>

responseMessage方法负责对从服务器端收到的消息进行展示。例如，某一次的请求中，他得到了类似于userA MOVE 3,4的消息，客户端只需要将userA移动到3,4的位置。

pendingMessages负责收集所有的用户操作。为了节约网络流量，并非每一次的用户操作都将发起一次网络请求，而是将其压入到pendingMessages中。例如，在3秒内，用户说了一句话，点击了另外一个用户查看详细信息，pendingMessages中就有了类似于如下的记录：

SAY 大家好啊
GETINFO  userB

在下一次请求，这些消息被发送到服务器端，用户可以得到响应。

这是基本的实现了。可以看到这种实现非常简单，任何一个具备基本javascript技巧的人都可以在半天内写出实现来。然而这仍然不是全部。构建基于慢速网络的实时应用需要我们对流量、并发数非常在意。只要用户察觉不出来，尽可能少的数据，尽可能少的与服务器交互。现在带宽资源非常昂贵——共享10M与独享10M之间的价格差别可能让你咂舌。我们可以引入ConnectionManager对forever_request方法进行统筹调用，例如，当用户不怎么活跃（Idle）的时候降低更新量，尝试将更多的message pending并发送，等等。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>179</wp:post_id>
		<wp:post_date>2008-01-03 22:35:03</wp:post_date>
		<wp:post_date_gmt>2008-01-03 14:35:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9e%84%e5%bb%ba%e5%9f%ba%e4%ba%8e%e6%85%a2%e9%80%9f%e7%bd%91%e7%bb%9c%e7%9a%84%e5%ae%9e%e6%97%b6%e5%ba%94%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
	</item>
	<item>
		<title>友谊？</title>
		<link>http://michael.nona.name/archives/180</link>
		<pubDate>Sat, 12 Jan 2008 00:34:53 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/180</guid>
		<description></description>
		<content:encoded><![CDATA[有一句流行的黑话，形容友谊：一起同过窗，一起扛过枪，（还有两句不太和谐，想知道的人自然有办法知道）

稍微花点时间回顾一下，作为具备一般性收入从事一般工作过着一般生活的普通人，与朋友、同事在一起的除工作外的生活是什么？KTV或者其他类似的娱乐项目？健身？吃饭？再回忆一下，你与同事朋友们之间的这些社交活动，你还记得多少？

我的回答是，那些活动在大脑里只能存在一个模糊的轮廓，具体的记忆几乎没有。我更记得的是与他们一起工作的日子。

作为我一贯的写作风格，还是说一段小故事。

去年7月开始的时候，由于种种原因，我重新开始玩魔兽世界。在三区找了一个人最少的服务器，开始了一个联盟的圣骑士。圣骑士在20级的时候有一个史诗级别的职业任务，这个职业任务有一步需要到影牙城堡去找点东西。当时我与一个20级不怎么会玩的战士，20级的新手法师从铁炉堡出发，一路穿过丹莫罗，萨尔多大桥，湿地，阿拉希高地，南海镇。稍微了解这个游戏地形的人应该知道有多远……他们俩人（战士是女生）陪着我从一开始就跑过去，一路上见到了湿地的阴晦，阿拉希瀑布的壮观，一边体会着游戏的景色，一边聊天。最后到达了影牙城堡。影牙城堡是适合18~23级的5人副本，里面的怪都是精英级别——血量以及各项攻击、防御属性比它同级的怪要高的多。我们三人死了很多次，每次都停下来商量怎么打，不知道多长时间后终于拿到了任务物品。

游戏中我不知道他们怎么想的，现实中我们从未谋面，后来战士在43级的时候AFK(注：离开)，在以后的三个月里从未上过线；法师也AFK很久。但我对这个过程却一直铭记于心：有一段不是很容易的经历我们曾经一起度过，我们每个人都为此付出努力。虽然不是在现实——但游戏中的体验谁又能说不是一种现实呢。

类似的体验不可多得。后来我还有其他的帮忙，满级的角色来帮我完成，他们毫无难度的完成了任务，我也没有那种一起完成事情的激动；帮其他的低级别小号做任务，自己没有什么成就感，更不谈记得那些我帮助过的人了。

回到工作中吧。IT从业者是脑力劳动者。我们无法知道，一个人在看起来冥思苦想的时候，他究竟是不是真的如此。然而我们可以知道（或者明显感觉到）的是，花一段时间共事，这个人到底有没有如他看起来那样努力工作。每天上班，第一件事情是开浏览器看新浪，还是看前天的构建结果？是在构建的间隔扫一眼娱乐头条，还是与你身旁的同事讨论有没有更好的解决方案？一个人工作的时候，是做着与工作相关还是不相关的事情？这些问题涉及到拷问一个人的专业精神，然而我却觉得，他更影响到团队成员之间的友谊。成员之间交流的时候，更多的是看双方共同的体验。一个人在工作的时候他的同事在做别的事情，他们之间在同一件事情上不会产生共鸣。如果一段时间都两个人都不在一个共同的场景中，那么这段时间他们不会产生共鸣。如果这样的次数多了，勤奋工作的一方很快对不怎么勤奋的一方不信任。而信任，才是友谊的根本。

再来一个很简单的问题：在过去的从业经验中，你对你的同事的回忆，集中在哪些方面呢？技术上的争执，一起加班，……

毫无难度的共事会让记忆匮乏，毫无冲突的共同经历会让经历平淡。友谊是建立在一起处理那些高难度的工作上。所以，善待与同事一起的时间吧，若干年后，你们还有记忆一起分享。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>180</wp:post_id>
		<wp:post_date>2008-01-12 08:34:53</wp:post_date>
		<wp:post_date_gmt>2008-01-12 00:34:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8f%8b%e8%b0%8a%ef%bc%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>66827</wp:comment_id>
			<wp:comment_author><![CDATA[小船语菡]]></wp:comment_author>
			<wp:comment_author_email>ypyh8@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.103.114.12</wp:comment_author_IP>
			<wp:comment_date>2008-02-13 15:16:11</wp:comment_date>
			<wp:comment_date_gmt>2008-02-13 07:16:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[2008年，希望更加进步，希望更加健康，希望更加热爱生命，更希望活出人生的灿烂来。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67248</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>219.235.233.66</wp:comment_author_IP>
			<wp:comment_date>2008-03-27 13:29:06</wp:comment_date>
			<wp:comment_date_gmt>2008-03-27 05:29:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[buffalo会继续开发，我自己就在使用。这些修改会被加入到下个版本中。下个版本会支持自定义的bind，允许自己定义bind的方式。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67203</wp:comment_id>
			<wp:comment_author><![CDATA[aboutibm]]></wp:comment_author>
			<wp:comment_author_email>aboutibm@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.101.197.36</wp:comment_author_IP>
			<wp:comment_date>2008-03-21 14:04:50</wp:comment_date>
			<wp:comment_date_gmt>2008-03-21 06:04:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Buffalo在绑定table时的Bug及解决办法

Buffalo版本:Buffalo.VERSION="2.0";

问题再现:
在调用Buffalo.Bind.bind绑定table时,jHeight为3,即table第一行为表头,第二行为奇数行样式,第三行为偶数行样式,第一次读取数据行数为3,没有问题,但是第二次(以此类推)返回的数据行数如果小于2,比如数据只有一行,就会留下上次数据的第二行没有被删除掉,正常情况是应该出现一行数据,但是却出现了两行数据,第二行是上次数据遗留下来的第二行,又比如当返回的数据行数为0,期待的应该是没有数据行出现,但是会出现上次数据的前两行,总的来说就是当jHeight为3时,如果数据小于两行,就会出现删除不干净的情况.
分析:
看了下原代码,在分析buffalo.js里的"bindTable: function(elem, value) "这个函数发现了其绑定的实现是每次绑定时,先删除掉除了一二三行以外的所有行(jHeight为3时),第二三行直接取原来表格的第二三行,后面的行按奇偶克隆二三行,采取了先删除多余行,再添加和返回的数据长度一样的行,再填充数据的办法,这时候问题就来了,因为其添加的行数是按照返回的数据长度添加的,如果返回的数据行数小于2,比如只有一行,那么,绑定时就会先删除原来数据的所有行,剩下前三行,然后往里面填充数据,因为只有一行数据,故只有第一行的数据(也就是表格的第二行)被更新,第二行数据(也就是表格的第三行)没有被删除掉,依然是上次的数据的第二行(也就是表格的第三行),以此类推,当返回数据的长度为0时,就会出现上次遗留的两行数据,而不是出现期待的数据行为空,同理,当jHeight为2时也会出现该情况.
解决办法:
在尽量不影响源代码的指导下,我采取了隐藏多余行的办法可以完美解决:
在buffalo.js里的bindTable: function(elem, value)中(大概在760行左右):
1.if (jHeight == 2) {//加上下面5行
	if(value.length==0){//没有值
		tBody.rows[1].style.display='none';
	}else{
		tBody.rows[1].style.display='';
	}
......
2.if (jHeight &gt;= 3) {//加上下面10行
	if(value.length==0){//没有值
		tBody.rows[1].style.display='none';
		tBody.rows[2].style.display='none';
	}else if(value.length==1){//有一行值
		tBody.rows[2].style.display='none';
		tBody.rows[1].style.display='';
	}else{
		tBody.rows[1].style.display='';
		tBody.rows[2].style.display='';
	}
......]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67204</wp:comment_id>
			<wp:comment_author><![CDATA[aboutibm]]></wp:comment_author>
			<wp:comment_author_email>aboutibm@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.101.197.36</wp:comment_author_IP>
			<wp:comment_date>2008-03-21 14:15:37</wp:comment_date>
			<wp:comment_date_gmt>2008-03-21 06:15:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[在使用Buffalo时发现这真是一个好东西,很符合我开发Ajax的习惯,我已经在我开发的系统总使用Buffalo,不知道您是否还打算继续开发Buffalo,我想提些建议:
1.修正bind table的bug
2.在做bind table的分页是遇到一个问题,就是关于table行的操作,比如要求在table的最后一行加上对这行记录的修改/删除/查看等应用,bind就很难实现,必须等bind结束后自己在动态增加一列
3.对select的绑定时,希望增加对optgroup的绑定,并提供第一个选项为空的绑定,因为在某些时候我们需要在select留一个空白选项

暂时就这些:-)
msn:guangpin_ye@hotmail.com]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>弹棉花</title>
		<link>http://michael.nona.name/archives/182</link>
		<pubDate>Thu, 27 Mar 2008 05:22:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/182</guid>
		<description></description>
		<content:encoded><![CDATA[前天上地铁，跟同事突然说起弹吉他的事情，不知怎么说到谈得不好的人就跟弹棉花一样。我却不大乐意，反问一句：你见过弹棉花没？他摇头。我就跟他解释如何弹棉花，解释弹棉花的韵律和美感。他依然一头雾水，却最终同意弹棉花也并非意味着毫无技术含量。

今天突然想到，随意上网搜了一下，发现了这个：

<object codebase="http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,18,0" width="460" height="390"  align="middle"><param name="allowScriptAccess" value="always" /><param name="allowFullScreen" value="true" /><param name="FlashVars" value="vid=YiBF-w2B1kufHjh1" /><param name="movie" value="http://img.ku6.com/common/V2.0.1.swf" /><embed src="http://img.ku6.com/common/V2.0.1.swf" flashvars="vid=YiBF-w2B1kufHjh1" width="460" height="390" align="middle" allowScriptAccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" /></object>

不得不说，这个人弹的真的不怎么样，没什么节奏不说，院子里面棉絮满天飞。记得小时候，在一个比被子稍大的房间，任何一个弹花匠都可以踩着四四拍，三下闷音一下长音或者两短一长一短，几小时内弹出一床厚厚的棉被来。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>182</wp:post_id>
		<wp:post_date>2008-03-27 13:22:02</wp:post_date>
		<wp:post_date_gmt>2008-03-27 05:22:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%bc%b9%e6%a3%89%e8%8a%b1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>67250</wp:comment_id>
			<wp:comment_author><![CDATA[aboutibm]]></wp:comment_author>
			<wp:comment_author_email>aboutibm@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.101.197.36</wp:comment_author_IP>
			<wp:comment_date>2008-03-28 15:15:33</wp:comment_date>
			<wp:comment_date_gmt>2008-03-28 07:15:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[还在继续开发就太好了,还有些问题如下
1.Buffalo在http://www.open-open.com/网站的连接为:
http://www.open-open.com/open124367.htm
上面公布的Buffalo主页http://www.amowa.net/buffalo/已经失效,希望更新主页.
2.关于Buffalo应用的恶意点击控制,防止用户的多次恶意点击,希望有相应的处理,因为我发现用户似乎很喜欢不断的点击列表来更新对应列表,这样会对服务器造成不小压力,我还没有找到什么好的解决办法,延时不是好办法,会造成响应过慢,有没有什么方法判断用户是在恶意点击
......
继续关注Buffalo]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>没有顿悟。</title>
		<link>http://michael.nona.name/archives/184</link>
		<pubDate>Thu, 26 Jun 2008 17:22:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/184</guid>
		<description></description>
		<content:encoded><![CDATA[一直以为，总有一天魔兽世界会从我生活里面过去，就像被生活碾压过后的花草，伤痕只存在与那个秋天一样。然而，不知不觉间，它已经陪伴我度过了一年。一年前，因为一个荒唐的逃避生活的理由，我开始了游戏，选择圣骑士开始了我在另外一个世界的生活。跌跌撞撞了很久，辗转好几个区，现在有了好的装备，了解了游戏的背景，具备了丰富的经验和操作技巧...那么，突然发现，它已经不再是插曲，而成为生活本身。

这种感觉让人丢脸。我不能不沮丧的想起，去年12月在javaeye上，我是如何兴致勃勃的为沉迷的人找理由，说网络游戏只是正常消费生活的一部分——虽然当时我并不沉迷。事实上当时我还从魔兽中体会到了很多关于富客户端应用开发的东西。然后，在后来的日子里，一些不良的征兆一直在提醒着我，比如，在不工作的时候，我要没就在玩魔兽，要么就在想着怎么玩魔兽。同时，放着那么多的事情没有做，在忘我的游戏之后，带着困顿的大脑沉沉睡去的时候，那种低落，那种失败感，应该是很多相似经历的人都能体会的吧。

所以，我删掉了游戏。删掉了帐号。生活中没有顿悟发生。每当尝试掩盖什么的时候，一定是掩盖的地方除了问题。我写下这些文字，并非没有考虑到这会给我带来什么影响，然而，更大的痛楚往往意味着更大的觉醒。这一次，就让这些事情过去吧，毕竟，真正的生活中有太多游戏不能包含的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>184</wp:post_id>
		<wp:post_date>2008-06-27 01:22:35</wp:post_date>
		<wp:post_date_gmt>2008-06-26 17:22:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e6%b2%a1%e6%9c%89%e9%a1%bf%e6%82%9f%e3%80%82</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>67488</wp:comment_id>
			<wp:comment_author><![CDATA[dennis]]></wp:comment_author>
			<wp:comment_author_email>killme2008@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.137.107.152</wp:comment_author_IP>
			<wp:comment_date>2008-06-27 02:45:24</wp:comment_date>
			<wp:comment_date_gmt>2008-06-26 18:45:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[毕竟是一种经历呀。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67489</wp:comment_id>
			<wp:comment_author><![CDATA[killvin]]></wp:comment_author>
			<wp:comment_author_email>killvin@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.90.144.124</wp:comment_author_IP>
			<wp:comment_date>2008-06-27 11:38:02</wp:comment_date>
			<wp:comment_date_gmt>2008-06-27 03:38:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[静下心来，你真的觉得游戏有意思吗？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67500</wp:comment_id>
			<wp:comment_author><![CDATA[wangwei]]></wp:comment_author>
			<wp:comment_author_email>wangwei@1.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.242.148.34</wp:comment_author_IP>
			<wp:comment_date>2008-07-02 12:56:18</wp:comment_date>
			<wp:comment_date_gmt>2008-07-02 04:56:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不是游戏有没有意思的问题，感觉到了还是一样的，呵呵

有些东西就是这样的，合理对待吧，如果有更好的对付方法，也希望共享下哦！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67766</wp:comment_id>
			<wp:comment_author><![CDATA[no happy]]></wp:comment_author>
			<wp:comment_author_email>nohappy@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.125.9.83</wp:comment_author_IP>
			<wp:comment_date>2008-08-28 11:19:17</wp:comment_date>
			<wp:comment_date_gmt>2008-08-28 03:19:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[除了享受魔兽世界带给你的快乐，还有就是逃避现实生活的那个你不想触及的东西，但是掩盖始终是存在的，要么解决，要么离开。不要让某些责任性的东西捆绑住你，你想要什么样的生活，你自己应该很清楚，不然你会给别人也带来更大的痛苦～～～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>富客户端最佳实践之首要：异步</title>
		<link>http://michael.nona.name/archives/185</link>
		<pubDate>Mon, 30 Jun 2008 16:33:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/185</guid>
		<description></description>
		<content:encoded><![CDATA[异步操作是改善的用户体验的王道。这个原则用在富客户端开发上，显得更加重要。采用Java/.NET或者其他具备线程操作能力语言的富客户端开发提供了真正的异步执行的能力。

理解并且将这个原则贯穿于整个开发过程并不容易。异步编程往往期待一个基于回调的编程方式，这种编程方式需要在写代码的时候对可能的用户交互进行更多的思考，而不仅仅是实现功能。从编程实践上，这种方式往往牵涉到计算线程与UI绘图线程的交互操作，当有很多的操作同时出现的时候，异步先后执行的无序性也让调试和跟踪变得很麻烦。为异步代码编写测试也相当有挑战。

<strong>1. 起步</strong>

先看一个例子，界面上有一个按钮，每点击一次，界面上显示当前服务器时间。假定我们使用C#和WebService来实现这个服务器调用：

<pre lang="java">
public void button1_clicked() 
{
   DateTime serverNow = timeServiceProxy.now();
   label1.Text = serverNow;
}
</pre>

毫无疑问，这段代码是工作的。然而有个可用性问题：当这个webservice调用耗掉很多时间的时候，客户端会一直冻结住。用户感觉就像整个应用程序死掉一样。这时因为C#只有一个绘图线程——事实上，其他语言也一样。当把运算线程与绘图线程放在一起的时候，结果就是绘图线程被锁住。而消息循环往往与绘图线程在一起。消息无法循环了，自然用来响应窗口事件的各种行为如鼠标点击、窗口拖动等也就无法响应。

那么，如何改善？

很简单，将运算放到另外一个线程中。用Java实现大致如下：

<pre lang="java">
private JLabel label;
	
public void buttonClicked() {
  final Date now;
  <strong>Thread t = new Thread (new Runnable(){
    @Override
    public void run() {
        now = serviceProxy.now();
        label.setText(now.toString());
    }
			
  });</strong>
  t.start();
}
</pre>

这个基本可以工作。其原理是将运算、耗时的工作放到另外一个线程中。在Java Swing中有一些方便的类来简化这个工作，例如SwingUtilities.invokeLater和SwingUtilities.invokeAndWait. 他们都用来在不阻塞UI线程来执行运算操作，并且与UI组件进行交互的方式。.NET WPF中的Dispatcher提供了类似的功能，而BackgroundWorker提供了更细致的控制能力，我们稍后谈。

<strong>2. 反馈</strong>

仅仅将异步执行放到独立的线程执行是不够的。用户往往希望在后台进行耗时操作的时候，前端能够显示一些提示信息。最简单的提示信息是在界面上的某个地方显示“正在操作，请稍后”。

依然沿用刚才的Java代码，实现方式很简单：

<pre lang="java">
private JLabel label;
	
public void buttonClicked() {
  final Date now;
  <strong>label.setText("请稍后，正在操作...");</strong>
  Thread t = new Thread (new Runnable(){
    @Override
    public void run() {
        now = serviceProxy.now();
        label.setText(now.toString());
    }
			
  });
  t.start();
}
</pre>

基本原理就是，当开始耗时操作的时候，在某个地方显示等待消息；当操作结束后，取消等待消息。

继续，如果在进行耗时操作的时候出现异常，也应当进行相应的反馈，代码如下：

<pre lang="java">
private JLabel label;
	
public void buttonClicked() {
  final Date now;
  label.setText("请稍后，正在操作...");
  Thread t = new Thread (new Runnable(){
    @Override
    public void run() {
       try {
          now = serviceProxy.now();
       } <strong>catch(Exception ex) {
           label.setText("访问失败..");
       }</strong>
        
        label.setText(now.toString());
    }
			
  });
  t.start();
}
</pre>


<strong>3. 通用异步处理过程</strong>

上述是基本原理。然而在实际的编程中，如此原始的方式很难吸引聪明程序员的兴趣。在.NET中，提供了BackgroundWorker, 相关的API有：

<pre lang="csharp">
worker = new BackgroundWorker();
worker.DoWork += delegate(object sender, DoWorkEventArgs e) {...}
worker.RunWorkerCompleted += delegate(object sender, RunWorkerCompletedEventArgs e){...};
</pre>

BackgroundWork提供最重要的两个事件是DoWork和RunWorkerCompleted事件。前者提供了异步执行耗时运算的能力；后者为结果运算成功后与UI进行交互提供了回调，并且提供了如果运算出现异常，提供相应的异常信息。这个思路同样可以借鉴到Java以及其他的方式中。


<strong>4. 上升到框架级别</strong>

BackgroundWorker的出现可以在一定程度上通用化异步编程，然而，富客户端情况下，线程资源同样珍惜。每次新创建一个类似于BackgroundWorker类似的管理器，意味着每次都会创建新的线程。一个可以参考的思路是，自行开发一个线程池，来管理异步执行的线程。在更复杂的情况下，可以实现对于很多任务进行排列的算法。这已经超出本文的范围。当能够实现到前3步的时候，第四步的提出和实现只是时间问题。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>185</wp:post_id>
		<wp:post_date>2008-07-01 00:33:12</wp:post_date>
		<wp:post_date_gmt>2008-06-30 16:33:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%af%8c%e5%ae%a2%e6%88%b7%e7%ab%af%e6%9c%80%e4%bd%b3%e5%ae%9e%e8%b7%b5%e4%b9%8b%e9%a6%96%e8%a6%81%ef%bc%9a%e5%bc%82%e6%ad%a5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>随想：企业系统集成</title>
		<link>http://michael.nona.name/archives/186</link>
		<pubDate>Thu, 24 Jul 2008 15:16:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/186</guid>
		<description></description>
		<content:encoded><![CDATA[从某种意义上说，我们现在做的系统是在刚开始看来是苦不堪言的：一个总页面数量不超过两位数的web项目需要跟超过10个外部系统进行集成，集成的协议包括WebService In/Out(安全与非安全的)、FTP、Email、XML/XSD/XSL等等。然而5个月后第一个版本准备发布的时候，我们发现居然解决了大部分的集成问题（我们对此有准备并且，有最好的组员！）。在与第三方集成的过程中，与WebService、XSD等标准协议的集成相对比较容易，而与那些封闭协议则苦不堪言，耗费大量时间并且整个过程毫无乐趣可言。

例如，需要将PDF通过FTP发布到一个第三方网站。由于PDF不具备自描述特性，传输PDF的同时还需要传一个文本文件来描述这个PDF文件，例如作者是谁，出版时间等等。为了阐述这个文本文件的写法, 第三方系统提供了少则十多页，多则数个DOC文档、PPT演示等让我们学习如何使用这些API。研究和学习使用这种“土制”API充满了挫折感：再丰富的文档也不能涵盖开发的各个方面，通过自身系统的领域模型产生出这样的一个个文本文件的过程并不有趣——想象一下手写webservice文件的过程，更何况这些土制API完全没有规则可言，几乎类似于汇编。这些不是最严重的，更严重的是，对于开发者而言，这些知识——如果他们是知识的话——毫无价值。无论是这些API的维护方还是使用方，一旦转到其他的项目，这些耗费精力学习和掌握的东西立刻价值为零。

相对而言，采用WebService方式的要好的多。一个好的WebService接口明确定义了输入和输出类型。在简单的了解各个属性的业务含义后，开发阶段只需要跟WebService的WSDL交互，开发和测试都很容易。在支持开放标准的IDE帮助下，土制标准带来的无谓时间和精力损耗降到最低，利用开放标准带来的系统之间的耦合也随之降低。其他的，如XSD，也同样具备描述系统接口契约的能力，使用方也能够充分使用工具支持，来完成业务功能。

以前无数次听说开放标准会使系统造价更经济。现在看起来确实如此。观察我前一个项目，一个Outlook插件，运行在Outlook进程中的WPF Rich Client程序。微软乱糟糟的技术在Outlook中得到了集大成。由于对通信内部状态的未知，我们不得不写了很多的Hack方法来绕过各种限制，得到的恶果是严重的性能问题我们不得不推迟上线。痛定思痛，在下一个项目中坚决采用了Web技术，而通过<a href="http://www.answers.com/main/ntquery?s=icalendar&gwp=13">iCalendar</a>协议与Outlook交互。这种方式下，系统之间通过开放标准来隔离彼此的变化，两边的编程模型清晰而简单，没有无谓的猜测。

当然，很多时候我们不得不使用土制协议，如我们，使用的协议是使用了20多年的，要修改绝非一朝一夕的事情。对协议进行直接使用是很愚蠢的，采用接口隔离是一般的做法；另外，为QA提供一个对应的假的实现对于开发阶段的测试也会相当有帮助。

一些想法：

- 把应用往小而专的考虑比大的好。如果不能，说明分析不够。

- 一旦两个系统之间发生了两个以上的同类型交互，一定要警惕——如果他们不能合并到一起通过一个统一的API来交互，那么一定是你的分析出了问题。

- REST很好，但在古板的企业系统中，WebService、XSD带来的强类型的好处，甚至比Rest更好。

- 如果在你的系统中使用了非标准的协议，例如，我们的项目中使用了Buffalo, 那么请确保这个协议的使用范围被限制在某一个层次之内。Buffalo只是用在Service层与Web层之间的传输，在API的封装下几乎可以被忽略。良好的Service、Web分层结构使得Buffalo不那么重要，虽然实现上他确实很重要。

- 说服你的客户采用标准协议。如果不能，继续说服，直到说服为止。否则，惨的不仅仅是你自己，还包含客户。与非标准技术斗争很麻烦却一点挑战性也没有，对于程序员职业生涯而言更是毫无价值；而且在浪费客户的钱。

- 一旦项目被要求做微软系列产品的插件，在没有决定之前，尝试说服客户不要这么做；如果不能，那么做的越少越好；如果还不能（比如被要求在Outlook meeting面板画个新窗口之类），趁早想退路。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>186</wp:post_id>
		<wp:post_date>2008-07-24 23:16:30</wp:post_date>
		<wp:post_date_gmt>2008-07-24 15:16:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e9%9a%8f%e6%83%b3%ef%bc%9a%e4%bc%81%e4%b8%9a%e7%b3%bb%e7%bb%9f%e9%9b%86%e6%88%90</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<wp:comment>
			<wp:comment_id>67683</wp:comment_id>
			<wp:comment_author><![CDATA[flyisland]]></wp:comment_author>
			<wp:comment_author_email>flyisland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://flyisland.blogbus.com</wp:comment_author_url>
			<wp:comment_author_IP>198.17.70.8</wp:comment_author_IP>
			<wp:comment_date>2008-07-25 12:09:12</wp:comment_date>
			<wp:comment_date_gmt>2008-07-25 04:09:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵，不错不错，真是肺腑之言啊。我们前段时间单单是集成一个后台遗留系统，也是耗费了不少精力。

这个系统对外直接传送C Struct的内存块，我们决定转换成WebService。其实协议的转换还好办，毕竟一劳永逸；主要的原来的API设计过于随意，几乎没有分层，格式僵化，要在这个基础上设计出良好的WebService比较痛苦。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67856</wp:comment_id>
			<wp:comment_author><![CDATA[taowen]]></wp:comment_author>
			<wp:comment_author_email>taowen@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.188.125.98</wp:comment_author_IP>
			<wp:comment_date>2008-09-12 00:25:28</wp:comment_date>
			<wp:comment_date_gmt>2008-09-11 16:25:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[规范和纪律性很重要。前提是有一个正确的方向和良性的架构。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>世界很宅</title>
		<link>http://michael.nona.name/archives/188</link>
		<pubDate>Sun, 31 Aug 2008 13:22:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/188</guid>
		<description></description>
		<content:encoded><![CDATA[如果硬要我记起那些对技术社区狂热的日子，我想一定是03、04年的时候。那时候自己在梦想中挣扎，蜗居在十几平米的小房间里，每天对这两台电脑工作十四个小时。想到当初那段经历对心灵的影响我仍然有所感觉：出门看见人就眼晕，不会跟人说话，脑袋转速远超过了表达速度。然而那是我成长最快的两年。怀着对未知技术的探索和狂热，我先后认识了limo, 8X（也不知道是好是坏）, gigix, 老曹等等这群人。我参加的时候已经有像样的场所了，然而离我都很远。周末的时候我不得不坐上八通线、1号线、2号线、公交车再走上一截子，大概两个小时才能到达目的地。那时候每次都能学到体会到新的东西，各种各样的想法来回交叉激荡。

后来那群人七七八八都进了同一家公司。人越来越熟，创造性的东西却越来越少了。细数进公司之前和之后，除了少数还能坚持写blog的外，几乎已经找不到有任何创造力的东西了。相同的兴趣进了同一家公司，好事；然而却破坏了由于陌生产生的思维冲突以及由此产生的思维火花，从这个产业来说，却完全不是好事。之前我偶尔悲哀的想起：成就了一家公司，却摧毁了一个社区。

我很想深究为什么同质化的环境不能造就高创造性的智力产出。从自然环境看来，似乎就是这个道理。近亲繁殖一般下一代都很糟糕；杂交水稻产量喜人。窝在家里缩在一个小的虚拟世界里面打游戏的人不可能有什么行动力；整日朝九晚五沿着固定轨道面对同一群人上下班也难有什么创新。在同质化的环境里，大家相互了解到了精神层面，一群人成为了一个人。思维的惰性往往向着不好的方向发展，就这样，创新就被扼杀在了萌芽阶段，甚至来不及露出来。那种长时间奋斗、隐藏、出成果、惊喜的过程不再存在，在耳边或多或少、怀疑或者肯定的声音或者眼神中，创新的想法——姑且不论是不是——早早的流掉了。整个大环境幻化为一个框，里面所有的人融为一个悲苦的人，把镜头拉远，远远往这群人看去，就是一个“囧”字。世界很宅。

这种想法让人沮丧。只有意志相当坚定的人才有可能不顾一切、偏执的追求并实现自己的理想。偏偏这样的人不可能成为我们的一员。这样的人要么进不来，要么留不下，或者被同质了。我自己虽然很警惕这种避免同质化的倾向，先后写了一些如<a href="http://michael.nona.name/archives/153">经验愈多愈难行</a>，<a href="http://michael.nona.name/archives/76">学习，研究，工作，灵感——学习过程其实是一张网</a>。然而真实的情况是，自从buffalo写出来到现在，几无所出，更让我汗颜的是，它还是我加入TW之前写的。我成为了宅人中的一员。

之前混<a href="http://bbs.51js.com">51JS</a>的时候——坦白的说，那里大多数讨论都入不了各位看官的法眼；然而他们对界面效果的追求，对挑战Web不可能极限的狂热让人叹服，那时候的产出包括JS星际，JS WebRPG，JS LiveChat等等，直到现在，也是让大多数人叹为观止的。就是这样的陌生，让不同背景的人，在大多数无人打扰的时候，埋头苦干，再在发布的时候引来众多跟帖的惊叹。当然整个浮躁的IT环境导致现在去那里提问的大都是属于问完就跑的类型了，当初那些热闹的讨论已经很少了。

低质量的交流是造就一个环境“宅”的重要原因。下棋到了一定状态的人，一般都很敬重技术高的棋手。伯牙和钟子期之所以是高山流水的知音，这跟他们具备相当的音乐造诣密不可分。《笑傲江湖》中的曲洋和刘正风同理；每三十年一次的华山论剑同理。这是一种高质量的交流。他们的可贵之处在于，参与者都是在独立的环境下不懈努力达到了与对手旗鼓相当的能力。而低质量、没有多少准备的讨论会让参与人沮丧。这些准备并不仅仅来自于内容本身，还来自于这些内容背后，有多少自己付出的努力和汗水。比较一下，是上大学时那些哽咽着抑扬顿挫念起《孔雀东南飞》的老先生教的中文让你觉得敬重并有所得，还是那些正在上拿着教案念课本的研究生。

现在的世界是由那些意志坚定的偏执者推动的，比如苹果的史蒂夫乔布斯。他疯狂的说把电脑做得更小些更小些，于是在IBM时代人们无法搬动一台电脑的时候，人们已经可以背着苹果电脑上街。这当然有背后那些追随他的技术、工程人员。然而，我在《少有人走的路 - 心智成熟的历程》中学到的一句话是：逃避责任就是放弃自由，换而言之，承担责任就能获得更多自由。承担默默工作不为人知的责任，就获得了充分底气表达新创意想法的自由，就获得了不再宅的自由。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>188</wp:post_id>
		<wp:post_date>2008-08-31 21:22:42</wp:post_date>
		<wp:post_date_gmt>2008-08-31 13:22:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e4%b8%96%e7%95%8c%e5%be%88%e5%ae%85</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>67791</wp:comment_id>
			<wp:comment_author><![CDATA[Li Xiao]]></wp:comment_author>
			<wp:comment_author_email>iam@li-xiao.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.235.233.66</wp:comment_author_IP>
			<wp:comment_date>2008-09-01 10:02:48</wp:comment_date>
			<wp:comment_date_gmt>2008-09-01 02:02:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[真的吗？还是说年纪大了，阅历多了，可以执着的时间少了？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67793</wp:comment_id>
			<wp:comment_author><![CDATA[corlin]]></wp:comment_author>
			<wp:comment_author_email>corlin@cybercorlin.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.cybercorlin.net</wp:comment_author_url>
			<wp:comment_author_IP>61.130.8.3</wp:comment_author_IP>
			<wp:comment_date>2008-09-01 13:39:09</wp:comment_date>
			<wp:comment_date_gmt>2008-09-01 05:39:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[的确年纪大了，人也懒下来了，现在opensource等都很少去。另外，住通州和朝阳真的很宅哦，每次活动都要跑好累。可惜我家在通州。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67813</wp:comment_id>
			<wp:comment_author><![CDATA[REN Yingyan]]></wp:comment_author>
			<wp:comment_author_email>renyingyan5678@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.235.233.66</wp:comment_author_IP>
			<wp:comment_date>2008-09-05 17:03:38</wp:comment_date>
			<wp:comment_date_gmt>2008-09-05 09:03:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[随着年龄成长，敏感度反比例降低，且受着众多外来事物的冲击，能持续保持或调整争取保持在理想状态越来越难。都加油吧！
作者的观点十分坦率，句句入心，读来时常汗颜。有些思想需要批判继承，不能完全入模。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67855</wp:comment_id>
			<wp:comment_author><![CDATA[taowen]]></wp:comment_author>
			<wp:comment_author_email>taowen@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.188.125.98</wp:comment_author_IP>
			<wp:comment_date>2008-09-12 00:23:06</wp:comment_date>
			<wp:comment_date_gmt>2008-09-11 16:23:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有一个感觉是知道少的时候，容易有表达的冲动。知道多的时候，觉得一切都是理所当然的，或者反而怕考虑不周起来。自己现在最有兴趣的东西，也都是在那些了解不多的领域。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67865</wp:comment_id>
			<wp:comment_author><![CDATA[df]]></wp:comment_author>
			<wp:comment_author_email>liudf74@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.123.9.70</wp:comment_author_IP>
			<wp:comment_date>2008-09-15 15:49:29</wp:comment_date>
			<wp:comment_date_gmt>2008-09-15 07:49:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[同感。疲惫感应该是个很大的问题。长期持久的兴趣难以保持。倒是建议大家一起出去游玩一下，搞软件开发的旅游的较少，其实这个完全是个充电的过程，不是指技术上，而是指心灵上和思维的恢复上。有机会一起联系一下，我在深圳。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68142</wp:comment_id>
			<wp:comment_author><![CDATA[yujiaao]]></wp:comment_author>
			<wp:comment_author_email>yujiaao@msn.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.121.229.61</wp:comment_author_IP>
			<wp:comment_date>2009-02-24 23:21:44</wp:comment_date>
			<wp:comment_date_gmt>2009-02-24 15:21:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[创造性需要激情，激情是因为有梦想，梦想是因为对这个世界不了解。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>蹦极：无畏，勇敢还是鲁莽</title>
		<link>http://michael.nona.name/archives/189</link>
		<pubDate>Mon, 06 Oct 2008 13:22:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/189</guid>
		<description></description>
		<content:encoded><![CDATA[国庆节间挑战了自己一把，在龙庆峡蹦极。

本来犹犹豫豫不想去，受不了8X钱钱马波众人的怂恿，他们赞助了数十元后（最多的赞助了十块），我签字走上了跳台。

我紧张，没话找话。问工作人员需要注意什么，他说没什么，别用手抓绳子。我又问他跳过没有。他摇头：没事跳这个干嘛。一时间有种被阴的感觉。远远看去，赞助商8X马波钱钱们远远站在围栏外等着看。说话间工作人员已经把我的双脚分别套紧，并用铁环勾上绳索。工作人员开始利索的把我往跳台边缘推。我觉得我一辈子都没有迈过如此小的步伐：每一步大概只有5厘米。仍然很快，我站在了跳台边缘的突出部分上，很小，我的双脚占据了大约三分之二的面积。工作人员依然在身后喊着：打开双臂，调整呼吸，往前，往前，往前……我底头很快的看了一下脚下，龙庆峡的水波光粼粼，再抬头平看去，山峦起伏，天空蓝蓝的，心里竟不知如何害怕，时间似乎静止了。

不确定是自己栽了下去还是被推了下去，头朝地坠落的那一刹那我闭了一下眼，没有任何感觉的。再睁开眼时发现水面在逐渐靠近，过了几秒钟，脚上被重重的扯了一下，整个人被拉了上去。倒过来看，远处的山，近处的水，俯视角度下的大河，山川，脑海中突然浮现出两个字，故乡。在空中静止的瞬间，整个人忽然无所冀盼，绝望的快感，让我闭上眼睛，不禁想到，这样，这样死掉似乎也挺好。来往的风声，使我呼吸非常顺畅，我很想大吼几声，张开嘴，却喊不出来。

两个开着快艇的船员在绳子不再弹跳时候靠近，用棍子固定着牵引我下来。他们在聊天，丝毫没有讨论我刚才那一跳是多么惊心动魄。倒是我爬上岸的时候，无数的游客看着我。

回想起来，现在还有些害怕。站在公司的11楼往下看，依然感到眩晕。当时跳跃的人真的是我吗？当时签名的时候，我发现那页纸上有很多放弃的人──超过3分钟不跳即为放弃。我依然记得小时候跟一群小朋友爬上树，然后纷纷往下跳，我却胆小蹲在树叉中间不敢跳，委屈的哭起来。而现在蹦极的，从40多米高空跳下的还是我吗？我是变得无所畏惧了，勇敢了，或者是干脆是鲁莽？



不清楚。





即便是在这秋天，龙庆峡大部分山还是被绿色的不知名的植物覆盖。小木船在清冽的水中静止的时候，我听到涧水轻轻拍打岸边石头的声音，一些灌到石缝，一些拍打石岩，嘀嘀咕咕，格外静谧。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date>2008-10-06 21:22:42</wp:post_date>
		<wp:post_date_gmt>2008-10-06 13:22:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%b9%a6%e6%9e%81%ef%bc%9a%e6%97%a0%e7%95%8f%ef%bc%8c%e5%8b%87%e6%95%a2%e8%bf%98%e6%98%af%e9%b2%81%e8%8e%bd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>67976</wp:comment_id>
			<wp:comment_author><![CDATA[朱雀雀]]></wp:comment_author>
			<wp:comment_author_email>phoenixtoday@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://phoenixtoday.blogbus.com</wp:comment_author_url>
			<wp:comment_author_IP>219.235.233.66</wp:comment_author_IP>
			<wp:comment_date>2008-10-07 17:29:47</wp:comment_date>
			<wp:comment_date_gmt>2008-10-07 09:29:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[SUI 了吧？留下后遗症了吧？被钱钱、8X他们阴了吧？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67968</wp:comment_id>
			<wp:comment_author><![CDATA[DenMark]]></wp:comment_author>
			<wp:comment_author_email>fake@email.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.41.205.225</wp:comment_author_IP>
			<wp:comment_date>2008-10-06 23:56:33</wp:comment_date>
			<wp:comment_date_gmt>2008-10-06 15:56:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool!
你没有放弃,就是成功了~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>惊雷总在无声处</title>
		<link>http://michael.nona.name/archives/190</link>
		<pubDate>Mon, 03 Nov 2008 15:13:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/190</guid>
		<description></description>
		<content:encoded><![CDATA[花了大约整整两周的时间，在地铁上，电梯里，等车的，上厕所的光阴里，读完了凤歌的新作《沧海》。洋洋六册，数百万字，我居然在两周的空隙时间里读完。比起《昆仑》，我觉得《沧海》场面虽大，但表述的内容却不见得精细。掉的书袋太多，解释的太详细，读起来却没有《昆仑》的酣畅淋漓。

然而，毕竟写成了。21个月笔耕不辍的光阴，两年间不停留的写作，这个庞大的世界，这个完整的世界观，那些有血有肉的角色，已然形成了。凤歌花了3年写《昆仑》，2年写《沧海》。就在大多数碌碌的时候，惊雷无声响起，端的是又一片天。

昨晚看到章子怡的访谈。我惊奇的发现，自己以前完全不入眼的花瓶演员──《尖峰时刻》里面那个只有一个镜头的，《蜀山传》中完全看不出特点的──已经悄然长大，成熟，知性，举手投足，自信，光彩照人，令人不能直视；以至于在出现在我昨夜的梦中：我们在一家西餐厅吃饭，她谈笑自如，而我却惴惴不敢前去，直至天明梦醒。写作时，我随意到她的官网上去看，原来，这些年来，她的努力和进步，从未停止过。无声处，庸人依然是庸人，惊雷于无声处，响起。

天之道，损有余而补不足。

这句话最早出现在<del datetime="2008-11-04T03:04:50+00:00">《射雕英雄传》的“九阴真经”中</del>老子的《道德经》中；然后不断出现在《射雕英雄传》、《昆仑》和《沧海》中，乃至成为很多内功心法的理论基石。莫非大多数庸庸碌碌的人，精力和时间太有余，补给了那些需要的人们，使他们成为不敢直视、掩耳叹息的惊雷？！

11/4 UPDATE: 那句话最早是老子《道德经》里面的，多谢zzzhc。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>190</wp:post_id>
		<wp:post_date>2008-11-03 23:13:47</wp:post_date>
		<wp:post_date_gmt>2008-11-03 15:13:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e6%83%8a%e9%9b%b7%e6%80%bb%e5%9c%a8%e6%97%a0%e5%a3%b0%e5%a4%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:comment>
			<wp:comment_id>68050</wp:comment_id>
			<wp:comment_author><![CDATA[zzzhc]]></wp:comment_author>
			<wp:comment_author_email>zzzhc.cn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.249.41.131</wp:comment_author_IP>
			<wp:comment_date>2008-11-04 10:09:51</wp:comment_date>
			<wp:comment_date_gmt>2008-11-04 02:09:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[天之道，损有余而补不足。
这句是道德经里的]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68080</wp:comment_id>
			<wp:comment_author><![CDATA[PAI]]></wp:comment_author>
			<wp:comment_author_email>pai@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.50.134.238</wp:comment_author_IP>
			<wp:comment_date>2008-11-13 14:14:43</wp:comment_date>
			<wp:comment_date_gmt>2008-11-13 06:14:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[从偏激到宽容到重新认识，成熟了嘢，恭喜你~~~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>单纯的威力</title>
		<link>http://michael.nona.name/archives/192</link>
		<pubDate>Mon, 08 Dec 2008 14:40:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=192</guid>
		<description></description>
		<content:encoded><![CDATA[有时候哲学、理论、学派、认知真是一个很古怪的东西：他可以在任何时候，以任何形式来激励你，或者摧毁你。《蝙蝠侠：黑暗骑士》中那个小丑，成功的腐蚀了高贵正直的检察官。小丑近乎无懈可击的理论，瞬间摧毁了刚刚失去爱人的检察官，也近乎摧毁了我这个观众的情绪。

昨天去看了《梅兰芳》──现在评论已经是铺天盖地了。我最有感悟的是，邱如白气呼呼的跟孟小东说：“从一开始，梅兰芳心里都是孤独的，这份孤独一直陪伴他走到了今天，直到遇见了你。谁毁了梅兰芳的孤独，谁就毁了梅兰芳”；另在片尾，
头发花白的邱如白，烧着一封封的信件，说：我逼走你（梅兰芳）最爱的女人，不让你穿的花哨，不让参加各种活动，是因为只有活得真实，才能演得真实。

好单纯。

中午的时候跟公司的销售出去吃饭，闲间聊天，他问我，Craig Larman给国内某公司做咨询，报价多少。我猜了数次之后才猜到。相对同样做IT咨询，显然比我们高太多。我又问把老马弄出去能报价多少？销售不屑一顾：他现场经验差远了。作为一个软件从业者，听到这样的评论心理确实不爽。将Craig与Martin的书做下比较，就会看到两人专注的方向差异之大了。

显然人们对其他人的评价都是从自己的经验范畴里面进行的。正如梅兰芳，正如Martin. 如果他们不像我们知道的这样成功，或者就如大多数人一样伤仲永，一次次爬起时被现实打翻在地然后索性倒地不起，也就无所谓大师，无所谓伟大。

晚上的《鲁豫有约》，谈到了罗大佑。与其同台的居然还有陈楚生。说实话我很诧异陈楚生能够出现在这样的场合：因为像陈楚生这样很自我几乎没有了──被鲜花、粉丝、掌声包围的陈楚生，在一首《有没有人告诉你》之后，再无新的创意了。活得不真实，感情自然也不会充实。自我型的歌手，当不再有自我，还哪会有歌呢。这个太快的时代，快得以山寨为荣耀的时代，不知道有多少人能够坚持下来。有听说江苏台《绝对唱响》（仿超级女生的选秀节目）的冠军第一名是长得很像小胖的女孩，还是被评委否决、被观众投票拉上去的。我听了她的演唱，也就那样了──作为19岁的女孩，算是不错的，但至少在我这个外行人听来离出众还有不少距离。因此这个结果，要么是听众欣赏水平不高，从造星的角度来说，更注重外型与实力的落差；要么就是，我侥幸的想，人们真的感受到了那份执着追求音乐的单纯。

《追风筝的人》讲述的几乎是现代的战争故事。小说中反复提到的白沙岗，前天刚刚被炸过，死了几十个人。小说中的主角，在自己最亲密的仆人，朋友，兄弟，在遭受最耻辱的对待的时候，反复犹豫，恐惧，冲动，退缩，最后屈辱的跑回去，用更极端的方式来维护自己的那小小的恐惧。而这给他带来的，是数十年良心的煎熬，以及来自上帝的惩罚──无法生育。最终他决定赎罪的时候，为时已晚。他的兄弟却毫不犹豫：“为你，千百遍。”

似是而非、模棱两可的中国式说法太多了：三十年河东，三十年河西；此一时彼一时；与理不容、情有可原；兼收并用……真正操作起来，做起来，却变成了“存在即合理”，一定也可以找到对应的解释。“我们不能取悦所有人”，那么不喜欢我们的人就是我们不屑去取悦的人。

是为记，随便写写。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>192</wp:post_id>
		<wp:post_date>2008-12-08 22:40:42</wp:post_date>
		<wp:post_date_gmt>2008-12-08 14:40:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%8d%95%e7%ba%af%e7%9a%84%e5%a8%81%e5%8a%9b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68090</wp:comment_id>
			<wp:comment_author><![CDATA[痣大才淑]]></wp:comment_author>
			<wp:comment_author_email>choucsl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.94.74.30</wp:comment_author_IP>
			<wp:comment_date>2008-12-09 11:35:35</wp:comment_date>
			<wp:comment_date_gmt>2008-12-09 03:35:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[在Craig Larman等偶像光辉的照耀下，博主和我们信心十足的走在通往大师的道路上。呵呵，赞博主一个]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>专注，在写作室</title>
		<link>http://michael.nona.name/archives/201</link>
		<pubDate>Fri, 06 Mar 2009 16:17:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=201</guid>
		<description></description>
		<content:encoded><![CDATA[从功能上说，这只是一个简单的文本编辑工具。他甚至不支持任何高级的编辑功能，例如加粗。

他甚至没有菜单、工具条、状态栏。

我为什么要做这个“<a href="http://inwritingroom.appspot.com">在写作室</a>”呢？

因为，每当我打开一个庞大的文本编辑工具的时候，除非我特别专心，否则很容易被分心：那些颜色，那些不同的工具条，菜单。

当又一次我的写作因为这个原因中断的时候，我决定做这个“在写作室”。它只需要完成两个功能：

<strong>自动保存</strong>。不仅仅是文字。还包括光标位置、滚动条位置。下次我继续写的时候，他能完全恢复上一次的状态。

<strong>保护注意力</strong>。

现在，如果你 <a href="http://inwritingroom.appspot.com">在写作室</a> ，你会发现，你只看见纯黑的背景，和白色的光标。没有任何多余的信息。开始写吧。放心，它会自动记录你写的每一个字。只需要无聊的时候晃动鼠标，你会发现这个应用的所有功能。简单到不需要帮助文件。

为什么这个名字？因为我在新加坡的公寓里，44楼有FreeWiFi的阅读室，很安静。我通常在那里写代码写到很晚。

<a href="http://inwritingroom.appspot.com">点到这里开始使用吧>></a>
<a href="http://www.douban.com/online/10098592/">分享你的写作体验，豆瓣线上活动：在黑暗中写作>></a>

另外说一下，IE可能会有意向不到的错误。Firefox/Safari完全测试。如果你在使用Mac, 那么最好不过了。

<strong>常见问题解答</strong>

<strong>Q</strong>: 这个。。。到底是个啥东西？除了写东西还能干啥？
<strong>A</strong>: 简单的回答：除了写东西，啥也不能干。甚至，它只是一个纯文本的编写工具，不支持任何格式化、图片等。它的不同之处在于，打开就能用，极其简单的界面（默认情况下没有任何菜单、按钮）和强烈的视觉反差（黑底，大白字），让你在在想写东西的时候能够真正专注在写，而不是其他。在现在这个信息淹没人的时代，注意力是最珍贵的资源。在写作室，尝试着通过更极致的方式来保护你的注意力。

<strong>Q</strong>: 好黑啊。。好空旷啊。。好孤单啊。。。
<strong>A</strong>: 嗯，是的。它不是twitter/google doc/开心网/facebook，热闹到你干点啥别人都能看见。从某种意义上说，它是一个相当私有的空间，专注于给出更高质量的产出。为了避免过于强烈的反差，它并不是纯黑和纯白。有些人觉得很刺眼...有些人觉得很爽。也许在以后会添加更多的配色。但...空旷将会是常态。忍受寂寞是成就高质量必经之路。

<strong>Q</strong>: 为啥子要用google帐号登录呢？不会记录我的密码吧？
<strong>A</strong>：inwritingroom托管在Google Appengine平台上，所有的程序和数据都在Google的服务器群中。每个人都有google帐号，登录的过程只是告诉google，你要使用这个应用程序即可。inwritingroom不可能持有任何跟密码相关的隐私信息。当然，为了保存每个人的文章，需要将文章与google帐号关联起来。

<strong>Q</strong>: 我的文件会丢吗？需要保存吗？
<strong>A</strong>: 一般情况下，你只需要专注的写就行。inwritingroom会随时保存下来你的修改。取决于网络情况，保存可能会延迟几秒。它保存的不仅仅是你写的文章，还包含你当前编辑的位置信息，这样当你下一次进来写的时候，它会自动跳转到你上一次的编辑位置。

<strong>Q</strong>: 多文件支持吗？
<strong>A</strong>: 如果你写累了，将鼠标移动到页面的顶端，你会发现一个工具条：保存，文件列表，全屏三个按钮。点击文件列表，你会看到写新文章的按钮。

<strong>Q</strong>: 全屏。。。好像有bug
<strong>A</strong>: 嗯，是的。有时候全屏模式和普通模式之间切换的时候内容不能同步。请少用这个功能，我正在考虑采用其他技术实现真正的全屏。

<strong>Q</strong>: 嗯，再问一次，你为啥要做这个，未来计划？
<strong>A</strong>: 出差的时候，忙起来很累，闲起来很无聊。想写点什么的时候太容易分心。花了大概4个晚上的时间写了这个（Python忘的差不多了，不然能更快些）。这些文字就是在写作室写的。除了自己用之外，我也很想看到有类似经历的用户。未来打算的功能，主要是两方面吧，配色的多样化，页面功能继续精简。现在功能还是太多了。







]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>201</wp:post_id>
		<wp:post_date>2009-03-07 00:17:13</wp:post_date>
		<wp:post_date_gmt>2009-03-06 16:17:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e4%b8%93%e6%b3%a8%e7%9a%84%e5%a8%81%e5%8a%9b%ef%bc%9a%e5%9c%a8%e5%86%99%e4%bd%9c%e5%ae%a4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68146</wp:comment_id>
			<wp:comment_author><![CDATA[糖]]></wp:comment_author>
			<wp:comment_author_email>td84101@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.112.92.3</wp:comment_author_IP>
			<wp:comment_date>2009-03-08 12:32:20</wp:comment_date>
			<wp:comment_date_gmt>2009-03-08 04:32:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[谢谢你，我喜欢这个地方~~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68148</wp:comment_id>
			<wp:comment_author><![CDATA[Zhenkai]]></wp:comment_author>
			<wp:comment_author_email>zk.jiang@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zhenkai.spaces.live.com</wp:comment_author_url>
			<wp:comment_author_IP>210.13.101.115</wp:comment_author_IP>
			<wp:comment_date>2009-03-09 18:11:58</wp:comment_date>
			<wp:comment_date_gmt>2009-03-09 10:11:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[怎么删除呢。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68145</wp:comment_id>
			<wp:comment_author><![CDATA[thinkcear]]></wp:comment_author>
			<wp:comment_author_email>thinkcear@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.thinkcear.com</wp:comment_author_url>
			<wp:comment_author_IP>116.11.15.193</wp:comment_author_IP>
			<wp:comment_date>2009-03-08 12:29:03</wp:comment_date>
			<wp:comment_date_gmt>2009-03-08 04:29:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://www.baara.com/q10
我觉得这个软件比你说的这个web版的好一点儿]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68183</wp:comment_id>
			<wp:comment_author><![CDATA[okokok]]></wp:comment_author>
			<wp:comment_author_email>spartak@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.131.252.119</wp:comment_author_IP>
			<wp:comment_date>2009-07-23 19:30:01</wp:comment_date>
			<wp:comment_date_gmt>2009-07-23 11:30:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[前几行似乎被什么东西遮住了，显示不出来。要按几下回车到三行以后才能显示出来，希望能改进一下。

另外写好的txt是存在什么地方的，能导出来吗。我要是经常用这个写东西万一哪天没有了咋办。

谢谢]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68184</wp:comment_id>
			<wp:comment_author><![CDATA[haode]]></wp:comment_author>
			<wp:comment_author_email>haodede@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.131.140.254</wp:comment_author_IP>
			<wp:comment_date>2009-07-28 22:02:01</wp:comment_date>
			<wp:comment_date_gmt>2009-07-28 14:02:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[很好的东西，我现在经常使用了，谢谢]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68195</wp:comment_id>
			<wp:comment_author><![CDATA[MAO]]></wp:comment_author>
			<wp:comment_author_email>xulei516@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.15.129.156</wp:comment_author_IP>
			<wp:comment_date>2009-08-22 15:10:57</wp:comment_date>
			<wp:comment_date_gmt>2009-08-22 07:10:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[可以成独立包下载使用么？那样用户体验会更好。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68170</wp:comment_id>
			<wp:comment_author><![CDATA[晴小画]]></wp:comment_author>
			<wp:comment_author_email>qingxiaohua@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.0.29.226</wp:comment_author_IP>
			<wp:comment_date>2009-05-04 16:25:24</wp:comment_date>
			<wp:comment_date_gmt>2009-05-04 08:25:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[貌似我是黑色的屏幕和黑色的字，什么都看不到~~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68171</wp:comment_id>
			<wp:comment_author><![CDATA[13]]></wp:comment_author>
			<wp:comment_author_email>rr@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.235.233.66</wp:comment_author_IP>
			<wp:comment_date>2009-05-05 15:18:44</wp:comment_date>
			<wp:comment_date_gmt>2009-05-05 07:18:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68156</wp:comment_id>
			<wp:comment_author><![CDATA[yananay]]></wp:comment_author>
			<wp:comment_author_email>yanrong79@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.46.235.237</wp:comment_author_IP>
			<wp:comment_date>2009-03-20 16:04:58</wp:comment_date>
			<wp:comment_date_gmt>2009-03-20 08:04:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[嗬嗬，俺的显示器好脏。。。一下全看出来了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>RichClient最佳实践在InfoQ发表</title>
		<link>http://michael.nona.name/archives/213</link>
		<pubDate>Sat, 21 Mar 2009 14:59:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/archives/213</guid>
		<description></description>
		<content:encoded><![CDATA[基本上就是过去两年做RichClient的总结，谈到了异步、事件管理、视图、缓存等。内容相对来说有点小高端，面向读者是至少有几年分层Web开发经验的开发者；或者正在做RichClient/RIA开发的开发者。

<a href="http://www.infoq.com/cn/articles/thoughtworks-practice-partiii">RichClient/RIA原则与实践（上）</a>，谈到异步和视图；

<a href="http://www.infoq.com/cn/articles/thoughtworks-practice-partiii-ii">RichClient/RIA原则与实践（下）</a>，谈到事件、线程、缓存。

PS. 春节前就写完的东西，到现在才墨墨迹迹的发完，这样算来，一年也写不了几篇像样的东西。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>213</wp:post_id>
		<wp:post_date>2009-03-21 22:59:42</wp:post_date>
		<wp:post_date_gmt>2009-03-21 14:59:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>richclient%e6%9c%80%e4%bd%b3%e5%ae%9e%e8%b7%b5%e5%9c%a8infoq%e5%8f%91%e8%a1%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68158</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>117.20.185.158</wp:comment_author_IP>
			<wp:comment_date>2009-03-23 12:30:02</wp:comment_date>
			<wp:comment_date_gmt>2009-03-23 04:30:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你在说GWT?或者类似的java-&gt;javascript的框架？或者类似于招行网银的客户端，核心功能是ActiveX, 页面都用html画，内嵌IE?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>68157</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68160</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>116.87.98.89</wp:comment_author_IP>
			<wp:comment_date>2009-03-25 21:54:41</wp:comment_date>
			<wp:comment_date_gmt>2009-03-25 13:54:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Adobe Air也许能够满足你的要求。他能够支持Dhtml+ajax应用程序，并无缝提供local storage、offline等支持。meebo、Yammer的客户端就是采用Adobe Air技术实现。相对其他方案而言，这种方式你可以最大限度的使用web的经验。在文中提到的那些点，仍然需要考虑，特别是应用程序规模会很大的时候。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>68159</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68161</wp:comment_id>
			<wp:comment_author><![CDATA[flyisland]]></wp:comment_author>
			<wp:comment_author_email>flyisland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://flyisland.blogbus.com</wp:comment_author_url>
			<wp:comment_author_IP>119.129.112.39</wp:comment_author_IP>
			<wp:comment_date>2009-03-26 00:04:51</wp:comment_date>
			<wp:comment_date_gmt>2009-03-25 16:04:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Michael, 谢谢了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68159</wp:comment_id>
			<wp:comment_author><![CDATA[flyisland]]></wp:comment_author>
			<wp:comment_author_email>flyisland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://flyisland.blogbus.com</wp:comment_author_url>
			<wp:comment_author_IP>148.87.1.167</wp:comment_author_IP>
			<wp:comment_date>2009-03-23 14:37:37</wp:comment_date>
			<wp:comment_date_gmt>2009-03-23 06:37:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[应该说类似招行网银的那种情况。我是想有否采用WebApp的视图管理方式的Local Client App的开发模式。

另外，我主要是做后台应用（没有UI）的，偶尔写一些自己用的本地客户端程序，经验不多，往往就被swing/swt的视图管理搞得很烦。

现在在应用中内嵌一个浏览器的成本应该很低了，所以想知道是否有这样的开发框架，我自己Google不到什么东西。

你的两篇文件等于写出了一个优秀的RichClient应该涵盖的范畴，我的问题就是，现在有没有这样的这样的支撑架构？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68157</wp:comment_id>
			<wp:comment_author><![CDATA[flyisland]]></wp:comment_author>
			<wp:comment_author_email>flyisland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://flyisland.blogbus.com</wp:comment_author_url>
			<wp:comment_author_IP>119.129.108.51</wp:comment_author_IP>
			<wp:comment_date>2009-03-22 16:34:16</wp:comment_date>
			<wp:comment_date_gmt>2009-03-22 08:34:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[关于那个“视图管理”，想问问有否这样的框架，就是把Web View和Rich Client整合在一起的。

比如一个swing/swt + browser + embedded web server，swing/swt负责最高层的架构或者一些浏览器不适合的场所，其他大部分view采用browser实现。

而且不管采用什么view，编程模式做到尽量一样]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>侬今葬花人笑痴，他年葬侬知是谁</title>
		<link>http://michael.nona.name/archives/215</link>
		<pubDate>Sat, 18 Apr 2009 04:49:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=215</guid>
		<description></description>
		<content:encoded><![CDATA[不清楚要为什么取这个标题，事实上我要说的只是关于一个名叫魔兽世界的游戏，在九城运营近4年之后，丢掉了代理权，被网易夺走的商业故事。

新闻链接：<a href="http://news.178.com/zt/wowdl/index.html">九城与暴雪谈判破裂 网易拿下魔兽世界代理</a>

1. 变，与不变

小的时候我总在看，好像好多东西都是长久不变的。每天要上的学，要见的老师，要走的路；每学期要放的假，每个季度要干的农活，每年要变冷的冬天，要发大水的夏天。从05年公测开始的时候就开始玩的魔兽世界，在我看来从开始就天经地义。不只是我，还有几百万拥趸的玩家。我们习惯了在游戏中交互，习惯了在半夜喊着OOXX强力队一边鄙视着一边M过去，习惯了跟朋友一起大呼小叫，习惯了25人乃至40人开荒灭到装备红，当然，也习惯了在服务器卡，红延迟，宕机的时候大骂着九城，的机器，的客服，的老板。这一切似乎不会变。

从合约的解除几个月后，这一切都变。未来是不是变得更好我不知道，NGA上大多数的玩家居然更倾向于不要换代理。因为担心几十万分钟的点卡，因为这是第一个游戏，因为这个游戏带来了太多的换了。

我在想，我们抱怨只是因为，我们习惯了抱怨吧，这么大的用户基数，出错的哪怕是万分之一，虽然宏观数量不大，但摊到自己头上都不好受。我自己就遇到过一天不能登录的情况，然而事后证明不是服务器的问题，是某省网络切割的问题。我不在网吧玩，不用简单密码，不跟别人共享帐号，号也没丢过，也没有麻烦过GM。平心而论，九城代理的魔兽给我带来的更多的是欢乐而不是痛苦。

2. 真的是香饽饽？

在4年的代理时间里，魔兽世界给九城带来了无比的财富：上市，大量的现金储备，几百人的研发团队，丰富的运营经验。“离开了魔兽世界的九城，是没有魔兽世界的九城”，这是一种姿态。不得不说商业是残酷的。魔兽世界占据九城90%以上的收入来源，这使得他谈判完全没有筹码。魔兽的成功又进一步刺激暴雪的胃口，下一轮谈判的筹码只会越来越高。魔兽真的会给网易带来更多的收入？我完全不这么想。魔兽世界对我而言早已没什么吸引力，游戏体制的僵化，游戏创意的枯竭，换不换代理商我都不会继续玩了。这款游戏已经进入了老年期。就像一根甘蔗，九城已经咀嚼了精华的部分的60%，剩下的头和根的一点点：要么有水分却没甜头，要么有甜头却很难啃。

3. 闲聊扯淡

这世界已经扁平。看看NGA或者游侠网，你会感叹玩家的探索能力和创造能力：汉化的，做音乐的，绘图的，写同人小说的。玩家的品味在这个国际化的舞台下已经提升。与此同时，只有约莫10年历史的中国游戏产业却再挣扎。GameRes上每一年的总结评估都让人沮丧。“人傻钱多”的玩家逐渐成为曾经有追求的游戏策划者要娱乐的对象，并一再挑战着玩家的智商。我玩过一些现在流行的免费游戏。我老婆看见的时候说，跟魔兽相比，他们就像玩具。玩家的品味是国际水平的；国内开发商的开发能力却差了好大的档次。因此我钦佩能够真正自主研发并且做出来的，比如剑网三。这是一个最好的时代，这是一个最糟糕的时代。很多人把游戏当作商业，特别是资本人。但在更多人眼里，游戏是艺术。真正的艺术品的产生需要你拥有崇高的信仰，以及不被俗世侵蚀的决心。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>215</wp:post_id>
		<wp:post_date>2009-04-18 12:49:51</wp:post_date>
		<wp:post_date_gmt>2009-04-18 04:49:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e4%be%ac%e4%bb%8a%e8%91%ac%e8%8a%b1%e4%ba%ba%e7%ac%91%e7%97%b4%ef%bc%8c%e4%bb%96%e5%b9%b4%e8%91%ac%e4%be%ac%e7%9f%a5%e6%98%af%e8%b0%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68208</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen. H. Wang]]></wp:comment_author>
			<wp:comment_author_email>whl7971@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.231.35.142</wp:comment_author_IP>
			<wp:comment_date>2009-09-24 15:30:53</wp:comment_date>
			<wp:comment_date_gmt>2009-09-24 07:30:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[建议看看 关于征途的传销模式的说法。敛钱迅速，但是危机四伏。（该说法未经证实，来自网上。）

另外，建议修改错别字:

换了  ==&gt; 欢乐
香孛孛 ==&gt;  香饽饽]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68168</wp:comment_id>
			<wp:comment_author><![CDATA[Verdana]]></wp:comment_author>
			<wp:comment_author_email>verdana.cn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://phpvim.net</wp:comment_author_url>
			<wp:comment_author_IP>221.237.122.174</wp:comment_author_IP>
			<wp:comment_date>2009-05-01 10:05:32</wp:comment_date>
			<wp:comment_date_gmt>2009-05-01 02:05:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[嗯，老早就不玩了，WOW 已经没了当年 1.x 时代那种感觉了~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68167</wp:comment_id>
			<wp:comment_author><![CDATA[晃倒乔丹]]></wp:comment_author>
			<wp:comment_author_email>martin_tree@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.124.206.82</wp:comment_author_IP>
			<wp:comment_date>2009-04-22 14:00:34</wp:comment_date>
			<wp:comment_date_gmt>2009-04-22 06:00:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[oracle 收购 sun 这才是大事！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>请理解交付</title>
		<link>http://michael.nona.name/archives/218</link>
		<pubDate>Fri, 05 Jun 2009 16:51:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=218</guid>
		<description></description>
		<content:encoded><![CDATA[不知不觉间，似乎我可以开始归类一类程序员：他们有着相当厉害的编程功底，熟悉数据结构、算法、设计模式，能够熟练应用这些模式；在项目开发中承担主要编码职责，并守护着代码质量和设计的纯粹。然而，由于种种原因，他们没能参与最终项目的交付，而被调到别的项目，等等等等。在他们的经验体系中，交付，是个很遥远的词。

世界并不完美。我不得不这么说。因此当完美并具革命性的重构、设计遭遇到无法修改的却不能不做的实际业务功能时，我遗憾的看到，这类天才的程序员并没有表现出应有的职业素养。他们消极的抵挡着这些需求，并期待着有某些更富于承担责任的人来承担这些看起来无聊无趣的任务。与在开发阶段相比，在交付阶段，他们的贡献显得如此暗淡。

请理解交付。完美的项目几乎不存在。在开发阶段出现的问题，部署阶段会放大无数倍：环境的不确定性，以及人们对新事物的怀疑，以及对失败、错误记得比较牢固的天性，使得一个新项目的成功交付显得希望飘渺。要认识到，这个阶段没有人能逃离。保持坚定不移的勇气，和以交付为目的的广阔视野来度过这一阶段，才是真正为了交付而做出的努力。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>218</wp:post_id>
		<wp:post_date>2009-06-06 00:51:34</wp:post_date>
		<wp:post_date_gmt>2009-06-05 16:51:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%af%b7%e7%90%86%e8%a7%a3%e4%ba%a4%e4%bb%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68179</wp:comment_id>
			<wp:comment_author><![CDATA[XM]]></wp:comment_author>
			<wp:comment_author_email>wxm505@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ossme.com</wp:comment_author_url>
			<wp:comment_author_IP>82.109.87.242</wp:comment_author_IP>
			<wp:comment_date>2009-06-17 21:59:00</wp:comment_date>
			<wp:comment_date_gmt>2009-06-17 13:59:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[交付是检验质量的途径。只有用户对交付的产品满意的接受才能说明产品质量合格。
如果一个没有缺陷，拥有美丽代码的产品不被用户接纳，或许是产品没能提供用户需要的功能，或许是项目严重超出预算；或许因为其他的原因不能被用户接纳，这个产品就没有提供其商业价值。这时候无论是质量，还是价值观，等等都成了浪费。

团队的成就感应该来源于客户使用此产品而产生大量的价值。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68196</wp:comment_id>
			<wp:comment_author><![CDATA[martin miao]]></wp:comment_author>
			<wp:comment_author_email>martinmiao1982@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.124.206.82</wp:comment_author_IP>
			<wp:comment_date>2009-09-15 10:36:58</wp:comment_date>
			<wp:comment_date_gmt>2009-09-15 02:36:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[项目的发展，就是一个寻找balance的过程]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68182</wp:comment_id>
			<wp:comment_author><![CDATA[kent]]></wp:comment_author>
			<wp:comment_author_email>weihello@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>125.122.210.254</wp:comment_author_IP>
			<wp:comment_date>2009-07-07 00:27:25</wp:comment_date>
			<wp:comment_date_gmt>2009-07-06 16:27:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[其实有时候还有条路可以走，鼓足勇气，重构掉他。当然，前提是你得有测试.

最近我就干了这么一件事情。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68173</wp:comment_id>
			<wp:comment_author><![CDATA[k.l]]></wp:comment_author>
			<wp:comment_author_email>killvin.liu@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.36.112.83</wp:comment_author_IP>
			<wp:comment_date>2009-06-06 16:58:59</wp:comment_date>
			<wp:comment_date_gmt>2009-06-06 08:58:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[为什么不用扩展性来主动拥抱变化呢？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68174</wp:comment_id>
			<wp:comment_author><![CDATA[Lin Sheng]]></wp:comment_author>
			<wp:comment_author_email>linsheng.cn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.221.8.141</wp:comment_author_IP>
			<wp:comment_date>2009-06-07 10:46:20</wp:comment_date>
			<wp:comment_date_gmt>2009-06-07 02:46:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[1.作为一个优秀的程序员，当他预感到自己做的产品或项目最终会慢慢成为一砣shit的时候，消极抵抗是正常的。

2.交付非常重要。问题是，是不是为了交付就可以牺牲质量。如果一个质量不好的产品交付给客户，它对客户的价值又再哪里？对整个项目团队来说，提交这样一个产品，团队的成就感又在哪里？

3.请理解程序员，尤其是这些能坚持自己价值观的程序员。毕竟，这些人才是项目成败的关键。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68175</wp:comment_id>
			<wp:comment_author><![CDATA[dreamhead]]></wp:comment_author>
			<wp:comment_author_email>dreamhead.cn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dreamhead.blogbus.com</wp:comment_author_url>
			<wp:comment_author_IP>219.235.233.66</wp:comment_author_IP>
			<wp:comment_date>2009-06-08 10:26:35</wp:comment_date>
			<wp:comment_date_gmt>2009-06-08 02:26:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[还有运气这么好的人，一次都没有赶上过？
或许，这些人在道上混的时间还短，有经验者要耐心。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68176</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>202.156.12.226</wp:comment_author_IP>
			<wp:comment_date>2009-06-08 21:57:47</wp:comment_date>
			<wp:comment_date_gmt>2009-06-08 13:57:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[-- 当他预感到自己做的产品或项目最终会慢慢成为一砣shit的时候，消极抵抗是正常的  为什么？为什么会有这种预感？为什么有了这种预感不想办法阻止？为什么消极抵抗？为什么有了这样的心态还是“优秀的程序员”？好吧，也许是一个优秀的程序员，但至少是一个不成熟的人。

-- 是不是为了交付就可以牺牲质量。。。这个靶子是怎么树起来的。。。当然，我完全同意你后面若干对这个观点的排比句论证。

-- BTW & FYI， 我也是程序员]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>68174</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68177</wp:comment_id>
			<wp:comment_author><![CDATA[D]]></wp:comment_author>
			<wp:comment_author_email>fake@email.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.64.89.23</wp:comment_author_IP>
			<wp:comment_date>2009-06-08 22:19:37</wp:comment_date>
			<wp:comment_date_gmt>2009-06-08 14:19:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[– 当他预感到自己做的产品或项目最终会慢慢成为一砣shit的时候，消极抵抗是正常的 为什么？为什么会有这种预感？为什么有了这种预感不想办法阻止？为什么消极抵抗？为什么有了这样的心态还是“优秀的程序员”？好吧，也许是一个优秀的程序员，但至少是一个不成熟的人。

没法阻止.因为客户只是做一个'简单的改动'.于是你得到的时间是'两个工作日'.你除了用一个让项目逐渐变成shit的work around的,别无它法.之后,这样'简单的改动'越来越多,项目就成了一坨shit.如果你说你需要更多的时间,你就会从项目经理和市场部门听到刚才你说的那番话,"我们不要一个完美的项目,我们需要shipment".

任何人都不会乐意做自己不喜欢和违背自己价值观的事情,这肯定不限于程序员.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>文化的风化与侵蚀</title>
		<link>http://michael.nona.name/archives/224</link>
		<pubDate>Sun, 20 Sep 2009 15:43:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=224</guid>
		<description></description>
		<content:encoded><![CDATA[常常听说，一个团队的文化就是团队负责人的文化; 一个公司的文化就是公司领导人的文化。究其原因，就是因为领导人的喜好和评判标准极大的影响着团队成员的荣誉感与价值观。这些观念和标准是在长期的工作和合作工程中不断碰撞不断沉淀下来最终得到的一个利益博弈的结果，表现出来的形式就是形式各异的企业文化，或者公司文化。

企业文化具备强大的同化能力。它是超越规章制度之外的一个做事方式、价值观的基本指导。许多公司的新员工培训采取的各种各样的方式，无不是想尽快让新员工适应这个公司这个大团体，与其他成员一起，向同一个方向使力。在《额尔古纳河右岸》中，年迈老人采用眩晕、饥饿、清洗肠胃等方法来训练原本桀骜不驯的老鹰称为帮手的过程，与这种文化上的趋同手段并无本质不同。

当在一个环境中已经具备一些文化认同的人，到了另外一个环境，有哪些行为会使得原本坚信的东西觉得恍惚？哪些事情会导致原本坚定的信仰开始动摇？哪些则会干脆彻底的重建原有的行事方式？

首先是寂寞。在东西方的神话中这类的例子屡试不爽。比如西游记里面各式各样的妖怪，大多是寂寞的发疯，逐渐忘记了规矩，成精之后下凡找点乐子。甚至是魔兽世界中众神的代表，泰坦萨格拉斯，在长达数万年的孤身与恶魔斗争中的，逐渐丧失了对正义的信仰，结果导向了恶魔的一方，称为整个世界的敌人。电影《无间道》中的卧底，长时间在正义与邪恶之间游走，最终也恍惚的分不清正义与邪恶。将一个人或者一个团队扔到孤立的地步是使其受到侵蚀的最简单的方式。有些人意志坚定，能撑较长的时间，有些人意志薄弱或者干脆正处于文化成型期，此时的寂寞很有可能直接导致文化上的风化、孤立与重塑。

随之而来的是诱惑。西方的哲学体系里面，人是有原罪的——例如贪婪、背叛。当有足够多的诱惑来临的时候，诱惑带来的好处、守护带来的艰辛，使得人的原罪发挥作用，原本坚信的东西开始逐渐动摇。

在实际的工作中，这些首先能看到的好处就是荣耀的来源。例如，在公司里面，人人崇尚敏捷，尊重事实，注重实效。做到这些能够得到同事、领导的赞赏。而当进行长期咨询工作的时候，发现客户对面面俱到的计划、华丽的图表等表面的东西更加赞赏。长期下去，工作的中心出现偏移，获得认可与赞赏的诱惑使得行事方式发生变化，长期下去，当这些行事方式成为思维习惯，带来的文化的变迁使得返回到原来的工作岗位时觉得陌生。

与荣耀相对的是惩罚。我们都是在正确与错误的事情中不断获得反馈和成长。一旦得到某些惩罚，很有可能对心灵造成很长时间的创伤，并且在长时间内处于敏感戒备状态，无论是新的环境还是旧的环境，都处于不信任状态。例如，派一个来公司不久的人，接受了公司文化培训，去处理客户现场问题，结果被客户大骂一顿。这位新员工可能在很长时间内萎靡不振，并且对公司和客户处于非常不信任的心理状态。

趋同心理则是最后一个效果最缓慢的因素，它的表现最快但是影响最慢。每当我们到一个新环境我们总想表现的跟当地的人一样，以获得最大程度的认同——起码从外表上——那些妖精都知道变成人形呢——如果客户西装领带，我们也不好短袖T恤；如果客户习惯在每个周五举办酒会，我们也乐于参与，等等。这些都是外观上的，但长时间的趋同很容易让人从外观上和内心上逐渐妥协并转换——就像中药，虽然见效慢，但终究是见效的，而且有可能是最能根治的。

< 请谨慎理解这篇文章——我没有在这片文章中给出任何防御性或者建设性的建议，甚至你都有可能无法看出我的立场。文化的变迁很大程度上是主观的，根据原因不同，我所经历过的文化沙漠的形成大多数组织领导在既得利益与文化建设之间的平衡不足造成。>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>224</wp:post_id>
		<wp:post_date>2009-09-20 23:43:41</wp:post_date>
		<wp:post_date_gmt>2009-09-20 15:43:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e6%96%87%e5%8c%96%e7%9a%84%e9%a3%8e%e5%8c%96%e4%b8%8e%e4%be%b5%e8%9a%80</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68210</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen. H. Wang]]></wp:comment_author>
			<wp:comment_author_email>whl7971@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.231.35.142</wp:comment_author_IP>
			<wp:comment_date>2009-09-27 08:46:52</wp:comment_date>
			<wp:comment_date_gmt>2009-09-27 00:46:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[即使你从骨子里不愿意接受ISO的东西，我还是建议看看
PDCA相关的东西。

我觉得ISO也好，CMMI也好，他们其实和Agile并不矛盾。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68203</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen. H. Wang]]></wp:comment_author>
			<wp:comment_author_email>whl7971@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.231.35.142</wp:comment_author_IP>
			<wp:comment_date>2009-09-23 12:18:04</wp:comment_date>
			<wp:comment_date_gmt>2009-09-23 04:18:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我得说一句，不论是什么企业，“满足客户”应该作为第一要义。

如果因为满足客户而导致文化侵蚀，那么是不是反过来要想，文化本身出现什么问题。

举例来说，
做CMMI的时候，跟客户说，敲定了的需求，如果变更需要加钱，客户不满意。
改版以后，5%的需求变更不收钱，经过改版的流程，一直都取得比较高的客户满意度。当然，公司收益也提高了（因为无论变不变，都已经收钱了）。

难道不是文化本身有问题吗？Agile不也强调：唯有变化是不变吗？

企业建立文化的目的是什么，
 - 对股东来说，有更好的回报。
 - 对员工来说，增强归属感，荣誉感，凝聚力……
 - 对经理来说，有统一的行动方针，便于管理……
 - 对客户来说，提高满意度。

如果文化所带来的服务或者产品不能提高带来80%收益的客户的满意度，那么文化就应该改变。因为，客户不满意了，收入就降低了，员工凝聚力就减少了，经理就难管了，股东的回报就减少了……谁都没满意，何苦呢？


==================================
最后说一句，适应客户，不是削足适履。不要无休止的适应客户无理的要求，要会谈判。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68200</wp:comment_id>
			<wp:comment_author><![CDATA[Jinyang li]]></wp:comment_author>
			<wp:comment_author_email>lijinyang@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.229.64.120</wp:comment_author_IP>
			<wp:comment_date>2009-09-21 01:25:12</wp:comment_date>
			<wp:comment_date_gmt>2009-09-20 17:25:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[环境造人]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>闲话：关于敏捷</title>
		<link>http://michael.nona.name/archives/229</link>
		<pubDate>Wed, 23 Sep 2009 01:15:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=229</guid>
		<description></description>
		<content:encoded><![CDATA[(10:09:50 PM) Stephen H. Wang: 好像很久没看到你上网了。:)
(10:10:52 PM) Michael: 最近白天都不用电脑
(10:10:58 PM) Michael: 工作原因
(10:11:06 PM) Stephen H. Wang: 哦，不用电脑？太神气了。
(10:11:11 PM) Stephen H. Wang: 神奇
(10:11:22 PM) Stephen H. Wang: IT业居然不用电脑*-)
(10:11:45 PM) Michael: 做咨询了...主要靠说话
(10:11:59 PM) Stephen H. Wang: 我们领导明天准备给我们安排一个讲座：Refactoring - Martin Fowler的书。
(10:12:04 PM) Michael: 哦
(10:12:08 PM) Stephen H. Wang: 哦~~~~原来如此，好工作！
(10:12:12 PM) Michael: 谁来讲
(10:12:17 PM) Stephen H. Wang: 内部安排的。
(10:12:28 PM) Stephen H. Wang: 可是就是这个领导，居然不认可你们公司的工作流程...
(10:12:33 PM) Stephen H. Wang: 我只有无语了。
(10:13:04 PM) Stephen H. Wang: 我第一次看这个书，说实在的，收获太大了。
(10:13:20 PM) Stephen H. Wang: 越接触敏捷，越觉得你们公司厉害。
(10:13:54 PM) Michael: 哈哈
(10:14:00 PM) Stephen H. Wang: 越来越觉得ISO，CMMI那一套似乎说得好，行不通。 - 软件还是人写的。不是过程写的。
(10:14:17 PM) Michael: 。。。
(10:14:21 PM) Stephen H. Wang: 除非有无限的资源，否则，初级程序员写出的代码质量不高。
(10:14:22 PM) Michael: 你不是现在才了解吧...
(10:14:41 PM) Stephen H. Wang: 第一次接触敏捷的时候知道这个概念，但是现在是实践出真知。
(10:15:06 PM) Stephen H. Wang: Daily Build, Night Release....
(10:15:37 PM) Stephen H. Wang: 而采用瀑布式根本做不到，怎么应对市场变化。
(10:16:00 PM) Stephen H. Wang: 不过，近期也有疑问，就是敏捷如何做测量。
(10:16:21 PM) Stephen H. Wang: 怎么判定软件的质量好坏。例如，以前提到的千行代码缺陷率。
(10:16:42 PM) Michael: 。。。
(10:16:45 PM) Michael: 你自己觉得呢
(10:16:51 PM) Stephen H. Wang: 不知道
(10:16:54 PM) Stephen H. Wang: 所以才疑惑
(10:16:57 PM) Michael: 我们的客户前一阶段就问了这个问题
(10:17:12 PM) Michael: 我的回答是 -- 这就是一个扯蛋的指标
(10:17:12 PM) Stephen H. Wang: 我想转型的时候都会有此一问。
(10:17:24 PM) Michael: 当然没这么说...
(10:17:27 PM) Stephen H. Wang: 那么，如何判定敏捷以后的质量呢？
(10:17:38 PM) Michael: 按照Story来
(10:17:46 PM) Stephen H. Wang: 是因为自动测试 - All passed 所以就是质量过关了吗？
(10:17:47 PM) Michael: 每个Story的缺陷数量
(10:18:00 PM) Stephen H. Wang: 可是，每天一个发布，如何统计缺陷数量？
(10:18:22 PM) Michael: 你要想到  缺陷率是典型的后置式检查
(10:18:32 PM) Stephen H. Wang: 对！完全同意
(10:18:37 PM) Michael: 而敏捷里面所有的实践，质量是隐含的，不可侵犯的
(10:18:49 PM) Michael: 这就是我们所说的Built Quality In
(10:19:09 PM) Stephen H. Wang: 嗯，这个概念的确是很好。
(10:19:12 PM) Michael: 从项目的一开始，质量检测环节就贯穿始终
(10:20:11 PM) Michael: 比如，刚开始写Story, 就要和测试人员定义验收条件；开发Story采用TDD的方式，通过测试来检验功能，类似于砌墙的时候先扯水平线，然后开始铺砖
(10:20:27 PM) Stephen H. Wang: 嗯。
(10:20:34 PM) Michael: 一般的敏捷项目，测试代码与开发代码的比例至少是1:1。我们的项目一般是2:1甚至3:1
(10:20:50 PM) Michael: 千行代码缺陷率对于敏捷项目而言是个笑话
(10:20:57 PM) Michael: 因为代码行数是个很扯淡的指标
(10:21:16 PM) Stephen H. Wang: 呵呵，这个指标是针对以前的过程式开发而设立的。
(10:21:20 PM) Michael: 分母都没意义，分子除以分母更没意义
(10:21:50 PM) Michael: 比如说，你用2000行写了一个功能，发现了1个bug；我只用了20行，也发现了同样的bug. 是不是说你就比我厉害呢
(10:22:07 PM) Stephen H. Wang: 同意。
(10:22:49 PM) Stephen H. Wang: 可是 - 社会平均生产率这个词总还是能够说明一些问题的吧。
(10:22:50 PM) Michael: 开发软件是一项艺术活动。代码行导向的指标完全将其视作计件工人。
(10:23:13 PM) Stephen H. Wang: 是的，即使MS，也有Software Factory一说。
(10:23:23 PM) Stephen H. Wang: 日企更是大行其道。
(10:23:44 PM) Stephen H. Wang: 所以，有一个词：软件蓝领就应运而生了。
(10:23:56 PM) Michael: 软件的生产率仅仅取决于可工作的软件。所谓的生产率应该是产生可工作的软件的效率。代码行只是手段
(10:25:27 PM) Michael: 比如，你每天写1000行代码，没有可工作的软件，因为你只写数据库后台了；我每天只写50行，数据库弄一点，前台加一点，当天发布，第二天客户就能用。按照代码行统计，你的工作效率是我的20倍；但按照可工作软件的角度，你的效率是0
(10:25:52 PM) Stephen H. Wang: 换个贴切的词，我的效果是0
(10:26:34 PM) Stephen H. Wang: 也就是说，我每天都给客户发一个“可用的”软件，永远的beta是这个意思吗？
(10:27:20 PM) Stephen H. Wang: 那么你研究过ISO关于质量的6个特性吗？
(10:28:13 PM) Stephen H. Wang: 错了，是ANSI/IEEE
(10:28:39 PM) Michael: 没..
(10:28:41 PM) Michael: 啥特性
(10:28:57 PM) Stephen H. Wang: Functionality, Reliability, Usability, Effetioncy, Maintenability, Portablity.
(10:29:11 PM) Stephen H. Wang: 他们还分解成20几个小的特性。
(10:29:15 PM) Michael: 这个没错啊
(10:29:37 PM) Stephen H. Wang: 我们的测试人员在担心，如果不用手工测试，无法确保这些特性都达到预期的指标。
(10:29:51 PM) Stephen H. Wang: 这个就是我疑惑的地方。
(10:30:16 PM) Stephen H. Wang: 当然，我也在想，他们是为了保住饭碗，拼命地证明自动测试工具无法全面达到测试目的。
(10:30:33 PM) Stephen H. Wang: 但是Agile的团队，会不考虑这些吗？我想不会的。
(10:31:41 PM) Stephen H. Wang: 比如说吧，一个B/S的系统，应该能够运行在,windows 2000/xp/vista + IE 6,7,8  or Linux + FF or Chrome or Mac + Safari...
(10:32:01 PM) Stephen H. Wang: 可是这些全测试的话，人工测试会花开发几倍的时间。.....
(10:32:22 PM) Michael: 保住饭碗是个很正常的需求。正视这个需求，Agile有更好的办法解决
(10:32:50 PM) Michael: 那就是，测试人员与开发人员属于同一个团队，在一张桌子上一起工作
(10:33:36 PM) Michael: 测试人员的手工测试有价值，但正因如此，所以要将那些无价值的人肉回归测试纳入到自动化中，让测试人员有时间做更有价值的手工测试
(10:34:01 PM) Stephen H. Wang: 我知道Agile的这个做法，可是这正是CMMI最反对的地方。他们认为开发和测试应该分属两个不同团队，测试人员的工资，奖金，评定等都不受开发经理的制约，这样他们才能有勇气去测试并公开全部的bug.
(10:34:23 PM) Michael: 你觉得合理么...
(10:34:30 PM) Stephen H. Wang: 似乎两者都合理。
(10:34:40 PM) Michael: 开发人员跟测试人员彼此仇恨就对来两者都好吗
(10:34:40 PM) Stephen H. Wang: 所以我最近一直在迷惘着。
(10:34:50 PM) Michael: follow your heart...
(10:35:17 PM) Stephen H. Wang: 而那个做法正是规避仇恨的方法。如果归于同一团队（非Agile模式下），测试人员真的没有勇气提出Bug。
(10:35:37 PM) Stephen H. Wang: 所以，我想Agile肯定有另外的理由，使得测试人员勇于提出自己的见解。
(10:35:42 PM) Michael: 勇气是敏捷基本价值观之一
(10:35:54 PM) Michael: 你不提bug, 是对开发活动的不贡献
(10:36:03 PM) Michael: 这只是个假设
(10:36:30 PM) Michael: 事实上，敏捷团队里面，测试人员的成长比普通测试团队里面的成长更快
(10:36:39 PM) Michael: 而且开发人员的测试观念也成长更快
(10:36:40 PM) Stephen H. Wang: 比如：刚才提到的千行代码缺陷率，这个可能才是真正的引起开发和测试之间有矛盾的地方？ - 因为Bug率直接影响了对开发人员的评价。
(10:36:58 PM) Michael: 其实从根本上说，就是个绩效问题
(10:37:09 PM) Michael: 按bug数量基本上是没戏的
(10:37:47 PM) Stephen H. Wang: 可否这么理解，开发团队和测试团队在一起，组成一个新的Agile团队，他们在一起，为了一个共同的目标而奋斗，一荣俱荣，一损俱损，才是能够让测试人员勇于提出Bug的根本原因？
(10:37:54 PM) Michael: 程序员产生代码行，测试人员消费代码行并提出bug, 这个貌似完美的生态系统粗鲁的无视软件开发完整性的客观规律
(10:38:00 PM) Michael: 没错
(10:38:13 PM) Michael: 整个团队只有一个目标：产生高质量的交付
(10:38:45 PM) Michael: 在此目标之下，以尊重  交流  反馈 勇气  简单为基本做事价值观和原则
(10:38:55 PM) Stephen H. Wang: okay，Quality和Delivery你都提到了，那么Cost呢，前两天听到一个老实说，敏捷是高成本的。我就更疑惑了。...
(10:39:06 PM) Michael: 谁说的...
(10:39:12 PM) Michael: 胡扯
(10:39:17 PM) Stephen H. Wang: 一个搞ISO/CMMI的老师...
(10:39:30 PM) Stephen H. Wang: 来跟我们讲如何进行软件的QA活动和Measure活动。
(10:39:50 PM) Michael: 靠，这样的话，如果没有充分的根据，会被喷的不像样子
(10:40:21 PM) Stephen H. Wang: 是啊，可是听课的大部分都是CMMI的忠实粉丝，所以我就没有多言，但是心里却很鄙视她的说法。
(10:40:53 PM) Michael: 你读过精益相关的书吧
(10:41:08 PM) Stephen H. Wang: 没有读过，只是听过TW的讲座。初步了解一点。
(10:41:24 PM) Stephen H. Wang: 知道这是起源于Toyota的一个生产汽车的思想。
(10:41:27 PM) Michael: 精益里面的核心观念：价值  价值流  流动  拉动 尽善尽美  这个你应该略有所知...
(10:42:32 PM) Michael: 核心思想是分析所有经营活动，找出其中的价值，找出价值流及其浪费点，使其流动，通过前端市场拉动，并让整个过程尽善尽美
(10:43:17 PM) Michael: 例如，软件开发中有价值的活动有 需求分析，架构设计，编码，测试，部署，客户演示等
(10:43:32 PM) Michael: 价值流基本与上述过程类似
(10:44:08 PM) Michael: 然而，这个价值流存在巨大的浪费：从需求分析到最终客户演示，在CMMI中需要几个月甚至一年的时间
(10:44:12 PM) Michael: 这是流不动的
(10:44:42 PM) Michael: 而敏捷里面，消除了漫长的等待而状态转换
(10:45:01 PM) Michael: 在一个短短的2周迭代开发中，上述所有活动都有一个完整的闭环
(10:45:23 PM) Michael: 客户可以在最多2周的时间里，得到一个完整可用的应用
(10:45:34 PM) Stephen H. Wang: 嗯，看来还是这个说法，就是非常多的瀑布迭代组成了一个敏捷整体。
(10:45:59 PM) Michael: 嗯
(10:46:01 PM) Stephen H. Wang: 那我有个故事要跟你分享一下。
(10:46:11 PM) Stephen H. Wang: 我去年到今年做了一个项目。
(10:46:24 PM) Stephen H. Wang: B/S的，java +jsp + DB2 + websphere
(10:46:33 PM) Stephen H. Wang: 采用了CMMI的开发方式。
(10:46:55 PM) Stephen H. Wang: 大约有100个左右的story（不知道你们的story是以什么级别划分的）
(10:47:10 PM) Stephen H. Wang: 最终制作了130多个页面。
(10:47:44 PM) Stephen H. Wang: 我的做法是这样的，先进行需求分析，彻底的分析，将每个细节都分析透彻，没有遗漏，没有二义性，没有错误....
(10:47:51 PM) Stephen H. Wang: 然后，组织开发团队进行开发。
(10:48:13 PM) Michael: 嗯...
(10:48:17 PM) Stephen H. Wang: 在我们公司几近变态的测试下，1次性通过测试。（这是以往没有的经历）
(10:48:33 PM) Stephen H. Wang: 我想知道，如果用敏捷的话，这么大规模的系统，你们大概需要多少个人月。
(10:49:03 PM) Stephen H. Wang: 我现在已经收到客户的需求变更要求。 - 我知道，如果用敏捷，那么这些要求将会在中间出现。而不是现在。
(10:49:22 PM) Michael: 我们不会这样估计。
(10:49:36 PM) Stephen H. Wang: 是的，我了解，这正是不同之处。
(10:49:59 PM) Michael: 我们会每个迭代给出一个交付版本，一般每两周给客户看一次
(10:50:05 PM) Michael: 让客户决定优先级
(10:50:25 PM) Michael: 当然在这之前，有一个大约2-4周的需求全面分析和优先级排序阶段
(10:51:13 PM) Stephen H. Wang: 我的需求分析投入了4个人，2个月。也制作了Demo和上千页的文档。我跟客户用了3整天，确认了所有细节。
(10:51:34 PM) Stephen H. Wang: 然后客户签字，这个就作为开发的依据  （当然，我这次的做法和以前比已经改革了许多）
(10:52:40 PM) Stephen H. Wang: 状态图，流程图，ER图....这些都是辅助我对需求进行分析的工具
(10:53:07 PM) Stephen H. Wang: Demo做的和成品都差不多了。就是数据是假的。
(10:53:38 PM) Michael: 这种做法叫lofi-prototype
(10:53:50 PM) Michael: 俗称原型法
(10:53:53 PM) Michael: 也不错
(10:54:13 PM) Stephen H. Wang: 正是如此，惭愧的说一句，我是在本公司第一个这么做的人。
(10:54:33 PM) Stephen H. Wang: 之前的系统更糟糕。质量不如意  - 这也是我一直探究如何解决的问题。
(10:54:51 PM) Stephen H. Wang: 举例来说，你们的测试人员会不会对左对齐右对齐，进行定义？
(10:55:31 PM) Stephen H. Wang: 就如这MSN的IM框，显示的log一定是左对齐的。
(10:55:31 PM) Michael: ...啥叫左对齐？
(10:55:39 PM) Michael: 有啥用呢？
(10:55:49 PM) Stephen H. Wang: 并且，换行的时候必须根据窗口的大小自动调整。
(10:55:57 PM) Stephen H. Wang: 这是Usability的一项。
(10:56:10 PM) Michael: 如果客户需要，我们就做
(10:56:13 PM) Stephen H. Wang: 试想一下，如果Log都是右对齐的，我们看起来会是什么效果？
(10:56:28 PM) Stephen H. Wang: 可是如果客户没提呢？你们会主动的询问客户吗？
(10:56:33 PM) Michael: 当然会了
(10:56:43 PM) Michael: 但...这个左对齐是常识吧
(10:56:50 PM) Michael: 我们不做决定
(10:57:04 PM) Stephen H. Wang: 呵呵，这个不是常识……这个是技术。
(10:57:26 PM) Michael: 通过每个迭代的客户showcase, 让他们来提。然后统一放到剩下的，没有开发完的需求中，进行估计和优先级排序
(10:57:54 PM) Stephen H. Wang: 金额怎么对齐？日期怎么对齐？页面太宽了，HTML不能对每一列都设置固定宽度，如果这么做，等于对所有的都没有设置。
(10:58:37 PM) Stephen H. Wang: 所以，需要空一列不设置宽度。这样才能够在窗口缩放的时候自动适应大小。并且，可以适应多种分辨率，从1024*768 ~ 1280*1024都可以
(10:58:55 PM) Michael: 。。。你想说啥
(10:59:16 PM) Stephen H. Wang: 那么，空出的那一列，基本上都是显示内容最多的那列，okay,我们通常会对齐进行截断字符串，并且以tooltip的形式显示出来。
(10:59:24 PM) Stephen H. Wang: 那么截多长呢？
(10:59:29 PM) Stephen H. Wang: 这个也要问客户吗？
(11:00:15 PM) Stephen H. Wang: 我想，客户不会像我这么细，连这个问题都一一说明的。
(11:00:49 PM) Stephen H. Wang: 所以，我们的做法是，主动提案。这个地方左对齐，那个地方右对齐....并且有一套我们自己的标准（这是CMMI的常见词），然后经客户认可就行。
(11:01:41 PM) Michael: 核心思想是一样的，就是多与客户交流
(11:02:07 PM) Stephen H. Wang: 可是，CMMI的缺点也在于此。
(11:02:27 PM) Stephen H. Wang: 就是做事的是人，虽然有标准，但是遵守的程度却无从判定。
(11:02:40 PM) Stephen H. Wang: 于是，就出现了千奇百怪的现象。
(11:02:44 PM) Michael: 哈哈
(11:02:46 PM) Michael: 没错
(11:02:54 PM) Michael: 这边的客户提了一个观点
(11:03:27 PM) Michael: CMM的规矩多，但大多数都是用来破坏的；Agile的纪律少，但是要求绝对遵循的
(11:03:41 PM) Stephen H. Wang: 比如：那个截断字符串，有人认为应该写一个java函数，然后，讲显示的内容截成20个字符固定长度，结果中英文不一样长……
(11:04:11 PM) Stephen H. Wang: 而CMM中不会规定，截断字符串应该怎么截断。编码规范当中也没有写，于是就有了余地。
(11:04:26 PM) Michael: 呵呵
(11:04:48 PM) Stephen H. Wang: 然而这样的程序交到客户那里，客户说不合格。
(11:05:43 PM) Stephen H. Wang: 而Agile用的都是高手吧？
(11:05:58 PM) Stephen H. Wang: 所以，不会出现这样的问题也会出现错误的情况吧？
(11:08:13 PM) Stephen H. Wang: 我最近在写一套新的系统，准备采用Agile的方式，（可惜，还是我一个人，扮演n个角色）。
(11:09:23 PM) Michael: Agile对人的要求确实很高
(11:09:36 PM) Michael: 不仅仅是技术层面
(11:09:46 PM) Michael: 态度和人品也有相对较高的要求
(11:10:36 PM) Stephen H. Wang: 我觉得知识范畴需要的太广了。
(11:11:20 PM) Stephen H. Wang: 光页面布局就非常多的知识。
(11:11:35 PM) Stephen H. Wang: 你看过那本书没 《Don't meke me think》
(11:11:51 PM) Michael: 看过
(11:12:01 PM) Michael: 这类的书多了
(11:12:06 PM) Michael: About Face 2.0也不错
(11:12:29 PM) Stephen H. Wang: 可是我所看过的软件，大多数都是左右结构，上下结构，或者上左右结构，左上下结构....
……]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date>2009-09-23 09:15:49</wp:post_date>
		<wp:post_date_gmt>2009-09-23 01:15:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e9%97%b2%e8%af%9d%ef%bc%9a%e5%85%b3%e4%ba%8e%e6%95%8f%e6%8d%b7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68209</wp:comment_id>
			<wp:comment_author><![CDATA[binlib]]></wp:comment_author>
			<wp:comment_author_email>caomingbin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.106.184.62</wp:comment_author_IP>
			<wp:comment_date>2009-09-24 16:30:48</wp:comment_date>
			<wp:comment_date_gmt>2009-09-24 08:30:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68202</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen. H. Wang]]></wp:comment_author>
			<wp:comment_author_email>whl7971@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.231.35.142</wp:comment_author_IP>
			<wp:comment_date>2009-09-23 11:02:25</wp:comment_date>
			<wp:comment_date_gmt>2009-09-23 03:02:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You posted it?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68206</wp:comment_id>
			<wp:comment_author><![CDATA[binlib]]></wp:comment_author>
			<wp:comment_author_email>caomingbin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.106.184.62</wp:comment_author_IP>
			<wp:comment_date>2009-09-23 17:24:15</wp:comment_date>
			<wp:comment_date_gmt>2009-09-23 09:24:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[未完？待续？想用agile，公司没有大环境，自己一个人想练习怎么搞？请赐教。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68207</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen. H. Wang]]></wp:comment_author>
			<wp:comment_author_email>whl7971@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.231.35.142</wp:comment_author_IP>
			<wp:comment_date>2009-09-24 08:50:22</wp:comment_date>
			<wp:comment_date_gmt>2009-09-24 00:50:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[给你支个招，

开发内部增加测试人员，比例可以稍低，这样可以在开发内部进行agile，然后再经过传统的测试过程。

重要的是，你要用结果来证明，这么做的效果比以前好，而且好很多。
质量提升了，成本下降了，交货期缩短了。
如此，就可以潜移默化的让公司接受你的做法了。

强行改革，你就会被改革。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68204</wp:comment_id>
			<wp:comment_author><![CDATA[Tao]]></wp:comment_author>
			<wp:comment_author_email>gazein@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.128.25.151</wp:comment_author_IP>
			<wp:comment_date>2009-09-23 13:28:23</wp:comment_date>
			<wp:comment_date_gmt>2009-09-23 05:28:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[思想的碰撞，很精彩，发出来不好吗:)
越来越觉得，精益的思想在很多地方都适用]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68205</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen. H. Wang]]></wp:comment_author>
			<wp:comment_author_email>whl7971@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.231.35.142</wp:comment_author_IP>
			<wp:comment_date>2009-09-23 16:53:55</wp:comment_date>
			<wp:comment_date_gmt>2009-09-23 08:53:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[沟通才是王道]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>我们所不知道的Code Review</title>
		<link>http://michael.nona.name/archives/233</link>
		<pubDate>Tue, 29 Sep 2009 13:58:50 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=233</guid>
		<description></description>
		<content:encoded><![CDATA[也许是待得太久，就像被一桶草莓酱从头浇到脚，尝哪里都是甜味一样，当初次看到Code Review成为一个如此重型并且低效的活动的时候，我才知道，草莓酱的外面，是空气，裹着大地的气息，大部分无味，又或者是烟草味，或者汽车的尾气。

先看一看我们看到的一个代码审查过程：

<ul>
	<li>开发人员领到任务。</li>
	<li>一周之后，代码写完了。他觉得没底，需要找业务专家技术专家来评审一下。这个时候他代码还没有提交。于是他把本地所有没有提交的、修改过后的文件，放到一起，压缩成rar包。找到他认为的技术高手业务高手（们），定会议室，发邮件通知。2小时过去了。</li>

	<li>技术专家业务专家收到了邮件，由于缺乏上下文理解，以及长达数千行的源代码，这类邮件一般不看——因为看了也是白看。</li>

	<li>终于到了Code Review的那一天。七七八八的来了几个人。一般来不全。因为高手之所以是高手，表现之一就是超级忙。</li>

	<li>于是代码的作者开始，一行一行的将代码讲下去。前几十分钟高手们也没办法理解——毕竟是一个星期的工作沉淀，哪有那么快理解的。大约30分钟之后，专家开始提出建议意见。这些意见一般涵盖了语法、编码规范、可能的业务错误、模块间关系等。专家们毕竟是专家。2个小时之后，专家们离去。</li>

	<li>开发人员虚心的把这些意见、建议写到小本子上。</li>

	<li>开发人员可能根据专家的建议进行相应的代码修改并且提交，也可能不；可能改对了，也可能不。评审过后，后续的实施成为黑洞……</li>

	<li>没了。</li>

</ul>


先思考一下，这个过程中的问题。

<hr />

首先必须承认Code Review的价值。经验丰富的专家们在做代码审查的时候，能够根据以往经验，规避重大缺陷的发生，对开发人员给予有价值的指导。然而，这个过程，太冗长，太低效。

<strong>Code Review必须基于事实。</strong>这里的事实，就是，源代码库。SVN Repository, 或者HG/Git Repository. 在多人协作环境中，对于一份不在源代码库代码是基本不可信的 —— 你无法预知，他是否将会成为最终可工作软件的一部分。

<strong>积攒下来众多的代码修改，使得产生重型、低效的沟通方式成为必然。</strong>这类众型的沟通方式往往成本惊人 - 需要占用最好的人很长时间。

<strong>过分夸大专家的作用。</strong>根据以往经验，许多最终发现问题，回溯上来，其实是一些简单的逻辑问题。这些问题如果分散在平时结对或者更频繁的过程中，则更容易发现。很多情况下，是开发人员对常见的bad smell了解和修炼不足，而这些bad smell常常是导致问题的地方。例如在一个已经有3重循环的方法中加入了新的判断而没有测试；修改了函数的返回值而没有任何说明；if 判断中包含了多达4-5个变量的比较判断而没有抽象为一个更具业务含义的方法，等等。

Review手段的原始落后。<strong>Review必须基于变化。</strong>会看报表的人都知道，看报表只需要看两个东西：趋势和拐点。Code Review也一样，只需要看变化。SVN/Hg/Git这类现代化的工具给我们提供了丰富的，基于changeset的compare工具。查看一天，整个团队的check in情况，顶多只需要10分钟-15分钟。

在敏捷过程中，Code Review几乎是一个被忽视的环节——不是不做，而是时时在做。结对时，我们会对结对伙伴的编码习惯、新写的类、变量表示质疑；提交之后，有代码静态检查工具、单元测试工具、覆盖率工具帮助我们检查有没有犯简单愚蠢的错误、有没有破坏既有功能；持续集成服务器则中立、不知疲倦的在每次我们提交之后运行所有的过程。

Code Review不是一个审查环节。不是一个考核环节。它是交流和反馈环节。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>233</wp:post_id>
		<wp:post_date>2009-09-29 21:58:50</wp:post_date>
		<wp:post_date_gmt>2009-09-29 13:58:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e6%88%91%e4%bb%ac%e6%89%80%e4%b8%8d%e7%9f%a5%e9%81%93%e7%9a%84code-review</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="agile"><![CDATA[敏捷]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68214</wp:comment_id>
			<wp:comment_author><![CDATA[dreamhead]]></wp:comment_author>
			<wp:comment_author_email>dreamhead.cn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dreamhead.blogbus.com</wp:comment_author_url>
			<wp:comment_author_IP>117.32.131.194</wp:comment_author_IP>
			<wp:comment_date>2009-09-29 23:45:31</wp:comment_date>
			<wp:comment_date_gmt>2009-09-29 15:45:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看来你在大公司混得时间短，经受的催残少。:)

正经的。这里的Code Review，和我们理解的Code Review稍有差别。所谓专家，看的是业务上有没有遗漏，对于代码的Bad Smell很少嗅到，或是容忍度太高，根本没有人知道好代码应该是个什么样子，这才让代码的味道越来越大。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68215</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen. H. Wang]]></wp:comment_author>
			<wp:comment_author_email>whl7971@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.231.35.142</wp:comment_author_IP>
			<wp:comment_date>2009-09-30 10:23:18</wp:comment_date>
			<wp:comment_date_gmt>2009-09-30 02:23:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[严重同意！
Pair-Programming不就是减少Code-Review - Re-Review的工时的方法吗？

Inline checker不也是辅助检查并减少code问题的有效工具吗？

感慨！一方面，这世界上有些人在努力地变革，寻求更好的方法来解决现实中的问题。另一方面，有些人在因循守旧，并且将勇于变革视为毒草猛兽。扼杀创新。

准备跳了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68216</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen. H. Wang]]></wp:comment_author>
			<wp:comment_author_email>whl7971@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.231.35.142</wp:comment_author_IP>
			<wp:comment_date>2009-09-30 10:24:04</wp:comment_date>
			<wp:comment_date_gmt>2009-09-30 02:24:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Will your company accept human like me?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68217</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.90.16.218</wp:comment_author_IP>
			<wp:comment_date>2009-09-30 19:58:50</wp:comment_date>
			<wp:comment_date_gmt>2009-09-30 11:58:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵，当然欢迎了。但是，软件技术是一回事，作为组织由此产生的盈利是另外一回事。很多组织笼罩在盈利能力的光环下，所谓一俊遮百丑，由此之下的过程、工具、技术往往就不够看；而另一方面，一些有想法、过程优秀的公司，却规模大不了……这世界永远都这么公平。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68218</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen. H. Wang]]></wp:comment_author>
			<wp:comment_author_email>whl7971@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.130.199.113</wp:comment_author_IP>
			<wp:comment_date>2009-09-30 21:01:31</wp:comment_date>
			<wp:comment_date_gmt>2009-09-30 13:01:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[dreamhead&gt;&gt;

Bad smell没有人管，不是因为大牛不看，而是所谓的大牛们根本看不出来。

大牛们需要按照过程定义一步一步的执行。至于每一个过程什么是正确的，什么是优秀的，根本就没有定义。而只是定义了过程需要什么工作。

举例来说，他们会定义一个比较莫名其妙的目标：千行代码Bug数，CodeReview必须发现多少，Unit Test发现多少，Integration Test发现多少。而且必须是一定的范围，理由是：发现太少是因为Review不充分，发现太多是因为编码不合理。最后，导致交货以后，被客户发现的不合格率很高。另外，对于测试覆盖率的要求居然不是路径覆盖率和条件覆盖率等，要求的是，每千行多少个测试点。

所谓过程的公司更多的是关心过程的执行有无，而不是过程执行的合理性。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68234</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen. H. Wang]]></wp:comment_author>
			<wp:comment_author_email>whl7971@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.231.35.142</wp:comment_author_IP>
			<wp:comment_date>2009-11-13 12:16:43</wp:comment_date>
			<wp:comment_date_gmt>2009-11-13 04:16:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[合理的应该是诸如Unit Test Coverage 100%之类的目标。
这个指标达到了，一定程度上说明了质量的状况。
但是发现多少Bug根本就是扯淡，高手做的程序Bug很少，新手满篇都是Bug，凭什么定义一个统一的指标？

有的公司也挺有意思，定义了一个多少年工作经验的人的指标是多少。这就跟说多大岁数才能升到什么位置一样可笑。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68226</wp:comment_id>
			<wp:comment_author><![CDATA[DenMark]]></wp:comment_author>
			<wp:comment_author_email>fake@email.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.64.244.141</wp:comment_author_IP>
			<wp:comment_date>2009-10-21 21:42:25</wp:comment_date>
			<wp:comment_date_gmt>2009-10-21 13:42:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[举例来说，他们会定义一个比较莫名其妙的目标：千行代码Bug数，CodeReview必须发现多少，Unit Test发现多少，Integration Test发现多少。而且必须是一定的范围，理由是：发现太少是因为Review不充分，发现太多是因为编码不合理。

看到这段我真是又想说好,又想说我cao,又想哭.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68219</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen. H. Wang]]></wp:comment_author>
			<wp:comment_author_email>whl7971@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.130.199.113</wp:comment_author_IP>
			<wp:comment_date>2009-09-30 21:03:07</wp:comment_date>
			<wp:comment_date_gmt>2009-09-30 13:03:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我想我应该写一篇文章：SQA does nothing in software developing procedure.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68220</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen. H. Wang]]></wp:comment_author>
			<wp:comment_author_email>whl7971@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.130.199.113</wp:comment_author_IP>
			<wp:comment_date>2009-09-30 21:16:26</wp:comment_date>
			<wp:comment_date_gmt>2009-09-30 13:16:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[盈利的好办法就是保留Bad Smell。因为这样用户用一段时间不爽了，就要求变更需求。这个时候，就可以开始估计新的工作量，而工作量当中包含了很多前一次开发就可以防止的事情....返工还要跟客户收钱。
&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
agile很适应产品开发，因为节省成本，易于变更是为自己服务的。
而定制项目更适应与CMM开发，因为各种报价依据充分，有说服力。看起来很规范。
Agile或者Refactoring,Design Pattern等技术方法更适于对已有项目的改造，告诉客户我们的比以前的好。
&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>杂记：这乱乱的秋季</title>
		<link>http://michael.nona.name/archives/239</link>
		<pubDate>Wed, 04 Nov 2009 14:55:44 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=239</guid>
		<description></description>
		<content:encoded><![CDATA[1. 用上ubuntu 9.10了。感谢小罗，在我的刻录机坏了的情况下帮我下载好，然后把把ubuntu.iso文件直接刻进了光盘中，于是乎光盘中只有一个文件：ubuntu.iso. 我纳闷了好久，为什么光盘启动不来呢...

2. 说到换操作系统这个事情，我原来也以为会惊天地泣鬼神一把将所有文件该刻盘的刻盘，该保存的保存，结果发现什么都不需要。大多数的稍微有点价值的东西都在公司的svn里；在dropbox中，在Google Doc中，在slideshare里，在DreamHost的虚拟主机的Mercurial里，于是乎，毫不犹豫的Format整个磁盘重装。Ubuntu 9.10比起以前配置简单太多了，配上cn99的源，安装上无线和显卡驱动，半小时搞定……散热问题：遥想6.04的时候，写两个小时代码左手中指小指无名指就该烫熟了。ibus比SCIM输入那个舒服啊。以后PC笔记本就Ubuntu了。。。

3. IDEA开源了。终于可以堂而皇之的干掉eclipse这个不思进取的东西了。我仍然记得三年前Shane说，Eclipse的快捷键命名比IDEA容易记忆，例如绝大多数的重构都是Alt+Shift+XXX, 而IDEA则F5, F6, Alt-Shift全上。然而为什么这个不规则的快捷键没有成为IDEA的阻碍呢？也许，也许只是在“好用”与“合理”之间，“好用”带来的非理性稍占上风。

4. 到了11月天气迅速冷了下来。记起很久以前穿着破了两个大洞的牛仔裤，凉风肆无忌惮的灌进来，凉飕飕的感觉

5. 最近在阅读《第五项修炼》，建议咨询工作者都读一下，特别是OT相关的。对我而言，几乎是字字珠玑；书也挺厚，晚上在床上敲键盘垫上，避免烫到大腿。

6. 儿子明天满两个月，好动，很不老实，话多，真是集他爹妈之大成。

7. 新闻版署要终止网易《魔兽世界》审批，并酌情处罚。不说什么了，”互联网数据中心主任胡延平表示，这是网络游戏管理乃至整个互联网治理历程中极为荒唐的一个事件。本来国务院已经明确了管辖权和管辖范围问题，文化部主导网游管理，但是新闻出版署在十一前后的一些举措以及针对网易的惩罚动作，使得局面又一次陷入混乱。惩治网易，杀鸡给猴看、明示管辖权的意思远远大于个案本身。” 丢人。丢人。丢人。

8. 这个年代，破坏权威的东西一般来说是好的。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>239</wp:post_id>
		<wp:post_date>2009-11-04 22:55:44</wp:post_date>
		<wp:post_date_gmt>2009-11-04 14:55:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e6%9d%82%e8%ae%b0%ef%bc%9a%e8%bf%99%e4%b9%b1%e4%b9%b1%e7%9a%84%e7%a7%8b%e5%ad%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68231</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen. H. Wang]]></wp:comment_author>
			<wp:comment_author_email>whl7971@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>125.34.207.168</wp:comment_author_IP>
			<wp:comment_date>2009-11-08 14:24:55</wp:comment_date>
			<wp:comment_date_gmt>2009-11-08 06:24:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[IDEA open source license restricts your purpose of use.

http://www.jetbrains.com/idea/buy/buy.jsp#openSource

so I do not use it at that time.
If I use, I must buy a commercial version.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68259</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen. H. Wang]]></wp:comment_author>
			<wp:comment_author_email>whl7971@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.231.35.142</wp:comment_author_IP>
			<wp:comment_date>2010-01-26 15:30:39</wp:comment_date>
			<wp:comment_date_gmt>2010-01-26 07:30:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我最近在思考这些问题：

行政体系与改革创新之间的冲突。
  - 僵化体制与灵活体制的肉搏战，究竟鹿死谁手。

滥用职权与越级许诺之间的冲突。
  - 擅作主张的职员和敢于在顾客面前承诺的职员，到底怎么界定？

到底我们是应该宁可为了信息安全而限制员工自由，还是应该为了鼓励创新而随员工的便。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>体制化</title>
		<link>http://michael.nona.name/archives/247</link>
		<pubDate>Sun, 07 Feb 2010 15:40:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=247</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>These walls are kind of funny like that. First you hate them, then you get used to them. Enough time passed, get so you depend on them. That’s institutionalizing</blockquote>

来自《肖申克的救赎》。

越来越觉得，所有的咨询工作，最终的目的，是唤醒被体制化的人，唤醒他们原本的认知，唤醒他们原本为之追求的希望，唤醒那些原本属于他们现在却不得不依赖于指令规则的直觉。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>247</wp:post_id>
		<wp:post_date>2010-02-07 23:40:12</wp:post_date>
		<wp:post_date_gmt>2010-02-07 15:40:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e4%bd%93%e5%88%b6%e5%8c%96</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>成长的分量</title>
		<link>http://michael.nona.name/archives/252</link>
		<pubDate>Thu, 25 Mar 2010 14:08:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=252</guid>
		<description></description>
		<content:encoded><![CDATA[作为咨询顾问，近大半年以来我都很少在工作时间触碰键盘。思考得太多，然后迅速的在工作场合释放，思考的过程很难传到指尖行之成文出来。

今天进入一个新的团队。一个物理位置四分五裂的团队。开始搭建项目管理工具。花了大约20分钟之后，在繁杂的页面流转中，终于开了个头。想到还有很长的配置工作没有做，客户长舒一口气之后，问到：为什么这么复杂的工具，我们自己公司还要推行呢？？？

我也奇怪的问。这些违背直觉的行为背后的原因是我一直想探讨的。得到的答案是这样的：

“当初也就有一个人找到了。看到公司有人帮你把流程配置好了，帮你把服务器弄好了，你只需要用就好了，那就用呗”

“那么。。。这么复杂，难道不觉得难用吗？”

“难用啊，后来就不用了呗。我以为只有我不会用……这么复杂的功能，感觉挺专业的……”

我无语的看着他们。

我想他们只是没有意识到，工具本身远远不知自己看到和用到的。工具背后所支撑的方法学和理念，是无法被给予的。逃避学习的痛苦，逃避选择的痛苦，最后逃避指出真相的痛苦莫非是从小孩到成年人的通病。在完全没有了解真相的前提下，去接受他人的选择，这些原本不属于自己的信息，如果不去思考，永远无法与自己的大脑产生反应成为自己的知识。

什么忙碌啊，都只是让自己大脑放弃成长的借口。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>252</wp:post_id>
		<wp:post_date>2010-03-25 22:08:10</wp:post_date>
		<wp:post_date_gmt>2010-03-25 14:08:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e6%88%90%e9%95%bf%e7%9a%84%e5%88%86%e9%87%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68279</wp:comment_id>
			<wp:comment_author><![CDATA[coderzh]]></wp:comment_author>
			<wp:comment_author_email>pythonzh@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.cnblogs.com/coderzh</wp:comment_author_url>
			<wp:comment_author_IP>125.89.21.135</wp:comment_author_IP>
			<wp:comment_date>2010-03-27 00:33:49</wp:comment_date>
			<wp:comment_date_gmt>2010-03-26 16:33:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[正是因为难用，才需要咨询。把工具做的很复杂，很难用，再加个云之类的概念，让别人觉得非常专业，不会用甚至怀疑是自己的问题。
做通用软件就不一样了，要是难用，用户马上就会抛弃你。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68315</wp:comment_id>
			<wp:comment_author><![CDATA[kingfish]]></wp:comment_author>
			<wp:comment_author_email>niufish@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>115.170.221.188</wp:comment_author_IP>
			<wp:comment_date>2010-04-02 00:00:31</wp:comment_date>
			<wp:comment_date_gmt>2010-04-01 16:00:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[问题的复杂性让我们寻求思考问题的捷径，这是不可避免的。但可能真正的问题在于：长时间的肯定式的教育已经磨平了我们的思维，禁锢住我们的创意，打消了我们的斗志。这也是管理者需要的吧，而且充斥在考评体系中。是不是？人件们？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>何为完美</title>
		<link>http://michael.nona.name/archives/254</link>
		<pubDate>Mon, 12 Apr 2010 16:26:19 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=254</guid>
		<description></description>
		<content:encoded><![CDATA[iPad出来了，这个被压扁的iPod立刻引起了大众的吹捧。当然也迎来了众多评论家挑剔的眼光，什么不支持多任务，没有摄像头，没有USB插口之类的“七宗罪”。作为乔布斯粉丝，我一笑而过：乔布斯如此聪明并且追求完美的人，难道没有意识到这些缺陷吗？在他眼里，难道这些不值得去做吗？

无独有偶。今天有个人打开浏览器窗口，打开CruiseControl的Dash Board页面，等着看Build Result Tab下面会不会出来构建过程的输出结果（其实就是构建控制台的输出）。他等啊等啊，5分钟过去了，就是没等到。

“你为什么要看到这个信息？”
“因为这个信息有用啊”
“有什么用呢？”
“这是用户友好的一部分，不然我只看到一个正在构建的图片，却不知道他正在做什么”
“……嗯，听起来有道理，那么，即便你能看到了，又能做什么呢？”
“……还是有点用的吧？”
“你看到这个信息无法停止无法取消只能等着，如果你真的想看，完全可以到CruiseControl服务器上看，否则只能影响自己手头的工作。再说了，哪个人提交之后会等着刷这个屏幕来看构建信息呢？”

我承认能够显示这些状态当然更好。但是在过去多年使用持续集成服务器的经历中，我却不记得是否真正想起看这个构建过程——老实说新版本的dashboard我一直是不喜欢用的 - 老式的更好用一些，信息精炼，有效，迅速，直观，加上声音指示，团队所需要的仅此而已。完美的持续集成服务器，就像所有的服务器应用一样，需要的是健壮，稳定，不错报，主动通知，而不是像愚蠢的Windows更新程序一样，隔一段时间弹出来告诉你，我要如何如何了，你是否同意——很多时候都没有选择（现在的更新程序已经好很多了）。

我见过许多在错误的完美之路上走得太远的产品：Notes - 大量的功能堆砌，我敢肯定80%的菜单都没人点开过；HTC Dream (G1) - 在硬件尚不完美的情况下使用Android多任务操作系统导致系统响应毫无悬念的变慢；Windows Vista - 错误的认为华丽是系统的首要任务而将可用性置之于外；金山的剑网三 - 模仿了魔兽大多数设计在山水场景花了太多功夫但打击感和操作感觉使其无法真正引人入胜。

你要的完美是什么？这是一个值得思考的问题。有时候我们被完美蒙蔽了眼睛，过多的专著于某些细节不能自拔而对主功能产生忽视。精雕细琢的局部完美往往耗时过久，如果这些不能在真正意义上产生巨大的价值那么就是一种更为巨大的浪费。例如37Signals的Campfire - 直到现在开发团队都拒绝在聊天框里加入富文本编辑的功能（例如加粗、笑脸符号之类的），他们说“用户完全可以通过字符，例如 *强调* ^_^ 笑脸 来表达。这种功能，我们不会做”。但是与此同时，他们在图片的分享，复制粘贴的支持上花了大量的功夫。

完美不完美，取决于产物想向外界传达的意图。只有充分理解了这些意图，才能真正明白完美的局限性 - 不是处处完美，而是在必要的地方。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>254</wp:post_id>
		<wp:post_date>2010-04-13 00:26:19</wp:post_date>
		<wp:post_date_gmt>2010-04-12 16:26:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e4%bd%95%e4%b8%ba%e5%ae%8c%e7%be%8e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68323</wp:comment_id>
			<wp:comment_author><![CDATA[小初]]></wp:comment_author>
			<wp:comment_author_email>phoenixtoday@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.phoenixchu.com</wp:comment_author_url>
			<wp:comment_author_IP>76.102.228.236</wp:comment_author_IP>
			<wp:comment_date>2010-04-14 00:40:21</wp:comment_date>
			<wp:comment_date_gmt>2010-04-13 16:40:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[举ipad这个例子不是很好，multitask是因为技术所限，但苹果下一版的iphone和ipad就支持了，而没有摄像头等则多是由于商业目的，这些其实跟讨论的主题不是很搭]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68322</wp:comment_id>
			<wp:comment_author><![CDATA[aqingsao]]></wp:comment_author>
			<wp:comment_author_email>vinci.zhang@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.131.14.20</wp:comment_author_IP>
			<wp:comment_date>2010-04-13 23:35:56</wp:comment_date>
			<wp:comment_date_gmt>2010-04-13 15:35:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[提到持续集成服务器，建议用一下teamcity，就像idea一样完美]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68321</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>218.2.187.204</wp:comment_author_IP>
			<wp:comment_date>2010-04-13 23:06:13</wp:comment_date>
			<wp:comment_date_gmt>2010-04-13 15:06:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@X

这不是我想表达的观点。像电梯这些常见的工具，显示进度已经成为标配，不做只能成为笑话，谈不上完美可言。当新产品出现的时候，要权衡的是真正的完美追求是否放在了产品最有竞争力的地方。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68320</wp:comment_id>
			<wp:comment_author><![CDATA[X]]></wp:comment_author>
			<wp:comment_author_email>regxyzmail@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.127.149.164</wp:comment_author_IP>
			<wp:comment_date>2010-04-13 14:00:34</wp:comment_date>
			<wp:comment_date_gmt>2010-04-13 06:00:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[单纯从这个例子来说是有点问题的
用户需要感知到系统在干什么，干到什么进度了，说好听了，就是用户体验
普通的进度条，等电梯时候的楼层数都只能起来显示作用
用户也只能看，不能干什么，后面的东西嘛～。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68319</wp:comment_id>
			<wp:comment_author><![CDATA[letitbe]]></wp:comment_author>
			<wp:comment_author_email>giser@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.131.185.170</wp:comment_author_IP>
			<wp:comment_date>2010-04-13 02:09:04</wp:comment_date>
			<wp:comment_date_gmt>2010-04-12 18:09:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[没有摄像头，没有USB插口
---------------------
以后会有的，先赚够这个版本的钱再说。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68324</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>218.2.187.204</wp:comment_author_IP>
			<wp:comment_date>2010-04-14 22:35:43</wp:comment_date>
			<wp:comment_date_gmt>2010-04-14 14:35:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[产品开发是有路线的。multitask也好，前置摄像头也好，都是路线图上的一些点。在一个阶段只能将一件事情做到极致，而不是面面俱到而什么都做不好。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68334</wp:comment_id>
			<wp:comment_author><![CDATA[DenMark]]></wp:comment_author>
			<wp:comment_author_email>fake@email.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>114.93.35.197</wp:comment_author_IP>
			<wp:comment_date>2010-04-17 00:47:57</wp:comment_date>
			<wp:comment_date_gmt>2010-04-16 16:47:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[即使缺陷也是保持了完美的balance..是不完美中的完美.. ma.. 无话可说]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>原来是人祸</title>
		<link>http://michael.nona.name/archives/276</link>
		<pubDate>Thu, 15 Apr 2010 15:41:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=276</guid>
		<description></description>
		<content:encoded><![CDATA[从<a href="http://shihb.blog.sohu.com/148501141.html">这里</a>和<a href="http://shihb.blog.sohu.com/148258905.html">这里</a>，读到了如下信息：

<blockquote>西南干旱后，很多人认为，是由于下雨少所致，也即天灾所致。但是，查一下新闻后，发现类似的“天灾”一直在上演（仅以云南的新闻为例）：2004年，我国南方“遭受53年来罕见干旱”，云南在干旱之列；2005年，云南“遭遇近50年来最大干旱”；2006年，“云南遭遇20年来最严重旱情”；2007年，“云南大部地区降水不足，气温偏高，旱情日趋严重”；“2008年云南连续近三个月干旱”；2009年，“云南省遭遇五十年一遇的严重旱情”；2010年，云南“秋冬春连旱”百年一遇……

我实地调查得出的结果是：西南干旱，一分天灾，九分人祸。
</blockquote>

<img src="http://1822.img.pp.sohu.com.cn/images/2010/4/12/23/28/128a5251cb9g214.jpg" alt="如此险地都被刨开用作农田" />
如此险地都被用作农田

<img src="http://1872.img.pp.sohu.com.cn/images/2010/4/12/23/27/128a5249d67g215.jpg" alt="桉树" />
所谓的高经济作物桉树，让物种变得单一，成为绿色的沙漠：雨水来了泥土流失，大旱来了与其他植物抢水。

<hr />

一旦金钱成为从上至下追求的目标，那么什么都变了。由于在认知上的局限性，当时空上因果关系看不到连续性的时候，人索性放弃了任何信仰。60年代建立的水库设施，在改革开放近30年的时间里，就不记得修葺，以至于雨季存不下水，旱季没有水；片面的认为绿化就是种树，将侵略性极强的桉树大面积栽种，所到之处，除了桉树草木不生，动物也不来，彻底破坏生态平衡；一旦没有水，没有想办法解决集水的问题就到处打井寻找地下水，导致地下水位下降，进一步造成不可预知的影响；“先污染、再治理”带来的是花10亿去污染，然后花10倍以上的代价去治理；为了城市供水，农业和农民一起被边缘化，为了GDP, 大量的炸山开矿填海围田……

一些悲剧正在上演：<a href="http://www.google.com/search?sourceid=chrome&ie=UTF-8&q=%E6%83%85%E4%BA%BA%E6%B9%96%E4%B8%8A%E7%9A%84%E5%88%AB%E5%A2%85">情人湖上的别墅</a>听起来如同烹食天鹅肉一样让人悲愤；沙漠上好不容易防风固沙的沙棘生态林被弄成<a href="http://www.google.com/search?sourceid=chrome&ie=UTF-8&q=%E6%B2%99%E6%A3%98%E7%94%9F%E6%80%81%E6%9E%97%E9%AB%98%E5%B0%94%E5%A4%AB">高尔夫</a>；还有一些扑朔迷离的东湖填湖事件，就发生在我的家乡武汉——我不敢想象，失去东湖的武汉人，会愤怒悲伤到何种程度……

这些，我们又能做些什么呢？为什么生活越现代，信仰就越匮乏？《阿凡达》中潘多拉星球上的惨胜，或许只是导演一厢情愿的美好愿望——真实情况也许是，世界之树被连根拔起，所有的树木被砍倒，地面铺上水泥和柏油，大量的超导矿石被拉走——或者留下几棵树，作为观光景点，建立一片别墅群……在最终资源毫无利用价值之后，这颗星球被毫不留情的废弃，成为宇宙中的垃圾……]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>276</wp:post_id>
		<wp:post_date>2010-04-15 23:41:15</wp:post_date>
		<wp:post_date_gmt>2010-04-15 15:41:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%8e%9f%e6%9d%a5%e6%98%af%e4%ba%ba%e7%a5%b8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>不信任的博弈</title>
		<link>http://michael.nona.name/archives/289</link>
		<pubDate>Sun, 18 Apr 2010 02:10:32 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=289</guid>
		<description></description>
		<content:encoded><![CDATA[很多人在怀念那过去的年代，那个软件英雄的年代：一两个人废寝忘食通宵达旦搞定某一两个关键问题，甚至对交付产生关键作用。最后交付成功了，这些人成为了英雄，在一年一年的口口相传中，成为英雄般的记忆。

说的是十年前的事情。

然而现在英雄越见少了——英雄们逐渐淡出一线开发视野。现在动辄几十人上百人的团队下，英雄的候选们发现他们处于一个相当悲凉的境地：即便有心救国，看着若干年积累出来的代码；或者正在积累中的代码，充满着无力的挫败感。我依然记得在某个项目中，只有20人左右的团队，当发现架构存在问题的时候，却也无法做什么：交付的压力持续不断的增加着，新的方式需要进行花时间验证才能得到证明，于是一方面团队按照旧的方式将代码往上堆，另一方面对此感到痛苦的不断地修改着——这个循环直到项目结束才算真正意义上的结束。

业务团队与开发团队之间的不信任感从此而产生——

<blockquote>为什么这么简单的一个功能要这么久？
不行，这个功能一定要在某月某日之前出来！
做不出来，丢了这个客户/市场，你负责吗？！</blockquote>

于是，迫于这种压力，开发团队只好采用更加临时的解决方案来快速解决问题——寄希望于某一天能够有时间把这些问题神奇般的解决——可是这一天从来都没有到来过。一个交付周期过去了，下一个接踵而至，带来更大的挑战——“什么？需要时间重构？没时间啦！这个客户比上一个更重要，一定要做出来啊！”

听到一个很形象的例子。一只蚂蚁只能拉100斤的东西。由于要交付更多的东西，蚂蚁工头对小蚂蚁说，120斤，挑战一下吧。小蚂蚁咬咬牙，挑战了一下。这一下真挑战成功了——120斤成功的拉过去了！然而它自己觉得隐隐作痛——受内伤了，它想歇息一段时间，可是工头说：不错，120斤挑战成功了，这一次我们有更大的挑战，150斤，努力吧！

临时的方案往往带来更多的缺陷。我听说过一些团队为了快速解决某一个问题写了100行的SQL代码——这些SQL代码成为后续维护的噩梦。业务团队发现了这些：虽然这些版本通过加班、通宵能够某种程度上如期交付，但是交付出来质量问题太多——不可接受。但同时要求质量和进度看起来是那么的不可行，于是，为了控制风险，好吧，以后做计划的时候给自己留下余量——不信任的博弈由此开始：

用户说，这个功能我要在2010年10月1日完成。
市场/用户服务部门想了想，说，对开发部门的领导说，这个版本必须在2010年9月10日完成。
开发部门领导想了想，对开发团队说，这个需求非常紧急，这样吧，8月15必须如期交付，否则我们就丢掉了这个客户！

一来二往，双方都清楚了这个游戏规则。然而作为生态链的最底端，开发团队做不了什么——既然整个博弈决定了进度第一，那么质量只好放在那些余量里面了。“先污染，再治理”，所有的临时解决方案被使用——配置文件满天飞，SQL随便写，各式的hack写法，等等等等。到了后期交付的时候，测试问题多多，改吧，加班、通宵改吧。

如果质量不是贯穿在开发过程中，那么通过最终的质检环节来提升质量无疑是低效的。Deming说，"Build Quality in". 质量是隐含的。形成这个博弈的最大的原因是，从前到后对交付的轻视，对质量的轻视，对于软件演进必要的理解。<strong>进度必然是<u>符合质量</u>的<u>功能点</u>的<u>交付</u></strong>，而不是狭隘的代码完成。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>289</wp:post_id>
		<wp:post_date>2010-04-18 10:10:32</wp:post_date>
		<wp:post_date_gmt>2010-04-18 02:10:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e4%b8%8d%e4%bf%a1%e4%bb%bb%e7%9a%84%e5%8d%9a%e5%bc%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%92%a8%e8%af%a2"><![CDATA[咨询]]></category>
		<category domain="category" nicename="agile"><![CDATA[敏捷]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68339</wp:comment_id>
			<wp:comment_author><![CDATA[aqingsao]]></wp:comment_author>
			<wp:comment_author_email>vinci.zhang@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.112.212.73</wp:comment_author_IP>
			<wp:comment_date>2010-04-18 10:58:10</wp:comment_date>
			<wp:comment_date_gmt>2010-04-18 02:58:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这里面的很多问题，大家都知道，但是很多人无力去改变。

进度必然是符合质量的功能点的交付，而不是狭隘的代码完成。
──所以计算velocity要以BA Signoff计算。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68416</wp:comment_id>
			<wp:comment_author><![CDATA[Daniel]]></wp:comment_author>
			<wp:comment_author_email>happy.future@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://daniel-journey.com</wp:comment_author_url>
			<wp:comment_author_IP>125.120.65.192</wp:comment_author_IP>
			<wp:comment_date>2010-05-08 10:10:22</wp:comment_date>
			<wp:comment_date_gmt>2010-05-08 02:10:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[几乎每个项目都是这样！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68380</wp:comment_id>
			<wp:comment_author><![CDATA[半个菠萝蜜]]></wp:comment_author>
			<wp:comment_author_email>dengaiping0736@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.136.19.135</wp:comment_author_IP>
			<wp:comment_date>2010-04-26 23:05:18</wp:comment_date>
			<wp:comment_date_gmt>2010-04-26 15:05:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这种博弈在短期或长期内都无法结束，到处都是受伤的小蚂蚁。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>事关信仰</title>
		<link>http://michael.nona.name/archives/296</link>
		<pubDate>Mon, 17 May 2010 03:41:05 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=296</guid>
		<description></description>
		<content:encoded><![CDATA[坐在办公室，听着容祖儿的《可歌可泣》，旁边的乱七八糟坐着的同事，开着让人哭笑不得的玩笑，想到这一次可能待上一个月，突然有点不真实的感觉。算算，自从去年初出差到新加坡到现在，一年三个月，15个月了。在这段时间里，在北京Office待了一周，西安Office待了几个中午。我几乎已经快要习惯做完一个项目就要收拾行李去下一个地方的日子了。

比我还要过分的是袁英杰了。他进公司就没有多少人见过他。让我了解他更多的居然是在客户的公司，从客户口口相传的传说中，我了解到他的技术实力，他对C/C++近乎偏执的热爱。从他写的却众多引起冲突的文字中，我了解到他对于代码、设计的坚持；他写的关于C的编程实践，洋洋数万字，行文流畅，排版优美。相比之下，粗制滥造、妥协、应付，这些在我们工作中常见的问题，近乎绝缘。很意外的是，去年11月跟英杰聊起关于测试的种种，那样的投机。

原来是信仰。

正是对正确事情的信仰，让我们能够即便远隔千山万水，依然能够在精神层面保持联系。我很难描述这一种神秘的力量——这种联系超越了组织、电话、视频、邮件、通知、计划。这些正确的是什么？是对浪费、重复天生的抵制；是对完美绝不妥协的追求，一旦要做，就要超越普通人“应付”的认知标准，成为让自己满意并且自然让大众叹服的作品。

英杰说：君子和而不同，小人同而不和。深以为然。

我越来越悲哀的看到，信仰的缺失成为整个时代的悲剧。诱惑太多，扩张太快，进度太紧，组织的成功建立在无数的人放弃自己信仰的基础上，无数人放弃了自己的直觉，挣扎、痛苦中直至麻木。追求完美难道不是每个人天生的直觉吗？对新生事物保持如婴儿般的新鲜感难道不是每个人的直觉吗？对重复的抵制难道不是每个人的直觉吗？

不坚持，无信仰。

<hr />
PS. 如果别人认为你是一个对软件开发狂热的追求者，对完美代码，对软件设计，对改善人们生活充满激情，不妨考虑加入<a href="http://www.thoughtworks.com/cn/">ThoughtWorks</a>，与一群同样充满激情的聪明人一起工作！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>296</wp:post_id>
		<wp:post_date>2010-05-17 11:41:05</wp:post_date>
		<wp:post_date_gmt>2010-05-17 03:41:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e4%ba%8b%e5%85%b3%e4%bf%a1%e4%bb%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%92%a8%e8%af%a2"><![CDATA[咨询]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68524</wp:comment_id>
			<wp:comment_author><![CDATA[yanying]]></wp:comment_author>
			<wp:comment_author_email>yy@tw.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>114.252.86.62</wp:comment_author_IP>
			<wp:comment_date>2010-05-27 20:12:14</wp:comment_date>
			<wp:comment_date_gmt>2010-05-27 12:12:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[坚持做你自己！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68472</wp:comment_id>
			<wp:comment_author><![CDATA[半个菠萝蜜]]></wp:comment_author>
			<wp:comment_author_email>dengaiping0736@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.136.19.139</wp:comment_author_IP>
			<wp:comment_date>2010-05-18 20:23:23</wp:comment_date>
			<wp:comment_date_gmt>2010-05-18 12:23:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[人生分为物质人生，艺术人生，信仰人生；有信仰并为之坚持奋斗的人，是值得尊敬的。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68475</wp:comment_id>
			<wp:comment_author><![CDATA[Zoom.Quiet]]></wp:comment_author>
			<wp:comment_author_email>Zoom.Quiet@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zoomquiet.org</wp:comment_author_url>
			<wp:comment_author_IP>116.19.107.101</wp:comment_author_IP>
			<wp:comment_date>2010-05-19 00:47:03</wp:comment_date>
			<wp:comment_date_gmt>2010-05-18 16:47:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[原来不仅仅我一人感觉到技术信仰的力量，
希望是个虚词，当人开始希望时，已经预先假定要失败了，
只有从一而终的信仰自个儿的选择，才可能交付精品，
当然，精品一般不可能是公司产品...
所以，降一级，追求代码/模块级别的优美,就成了没有技术信仰的暂时寄托了...

在信仰之下的坚持是快乐并痛的生活,
丧失信仰中的漂移是麻木也能快乐的生存&gt;..]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>访谈：发现团队真正的问题</title>
		<link>http://michael.nona.name/archives/302</link>
		<pubDate>Mon, 17 May 2010 09:21:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=302</guid>
		<description></description>
		<content:encoded><![CDATA[咨询工作期间，受邀去一个团队，帮助他们制定新的计划，以改善他们的交付现状，提升交付能力。

之前我并没有一个完善的计划。这类的访谈，如果话语权被管理者把持，访谈本身会迅速失去其意义。因此在我要求之下，他们整个团队进来了。开始之前，我并没有要求开电脑，场景被设定为一个圆桌旁边的开放聊天。

团队领导者先进来了，他迅速打开了电脑，熟练的打开了PPT。团队成员也陆续进来。我注意到几乎全部面色疲倦，表情灰暗。他们中有长相帅气的男生，也有年轻美丽的女生。然而他们默默的进来，除了抬头看一眼大屏幕上即将进行的PPT, 他们一言不发的坐下，等着，也许，这只是另一场没有任何不同的宣讲式会议。

管理者开始了。他描述了他理解的团队中的问题，并且提出了他自己的想法。我看着这些计划，心里毫无把握：这真的是团队想要的吗？这么多的实践操作下去，团队是否有空间去进行？他们是否深深的理解，这些实践是为了真正的解决团队中的实际问题，而非另一场运动？

带着这些问题，我环顾四周，我看到的仍然是面无表情的听众。

等管理者说完这些之后，我打断了他想继续表达的意愿，说：我想听听团队每个人怎么说的。用一个毛绒猴子作为令牌, 拿到猴子的人才能说话，其他人不能说话。第一个人开始了。我注意到他仍然不能自如的表达出来自己的想法。

“你们测试团队在另外一个地方？”
“是的。”
“在哪里？”
“A地。”
“哦，就是那个经常停电的地方吗？”

大家楞了一下，然后哈哈大笑起来。气氛立刻缓和了许多。很多人的眼神里面也有了神采。

“是啊！每次他们总找我们要文档！本来我们这里都讨论好了，由于他们在另外一个地方，因此不得不写些文档。但我们交付这么忙，写不全是常事啊！”
“——我总觉得他们做什么我们根本不知道。我们做完了得交给他们测试，他们测完了又要转回来，也不见得比我们测得全面。”

……

这些鲜活的例子一旦出现，似乎所有人的那根神经被触动了，一个开发人员说：

“有时候我不知道这些任务从哪里来的，有个人给我打电话，说这个东西很急，于是我就改了。”
“这些工作占据你日常工作的多少？”
“30%左右吧”
“等一下，我重复一下：你是说，耗费了你30%的工作时间，你居然都不知道你在为谁工作？”我故意强调了这个。
现场大笑。
“请问组长，你知道这个情况吗？”
组长讪笑着摇头。
我留意到现场有人眼神一亮，似乎有所感悟。

……

访谈过程持续了一个小时左右。访谈结束的时候他们的领导者出去，去询问这些参与者的反馈，回来跟我说：这次会议是他们觉得最有参与感的。

有了这个讨论作为铺垫，我将所有的可以进行的操作实践全都列出来，大家进行了投票，最终，一键式构建脚本、成立业务分析小组和识别并细分任务表成为优先级最高的三项。整个过程非常顺畅，细节几乎不用讨论，大家对这些工作的意义表现出惊人的一致。

三天后，我回访他们团队，发现状态墙已经建立了。询问他们领导，他们领导指着正在讨论的两个人，感慨地说：瞧，现在组内讨论很频繁，以前都很安静的。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>302</wp:post_id>
		<wp:post_date>2010-05-17 17:21:59</wp:post_date>
		<wp:post_date_gmt>2010-05-17 09:21:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%ae%bf%e8%b0%88%ef%bc%9a%e5%8f%91%e7%8e%b0%e5%9b%a2%e9%98%9f%e7%9c%9f%e6%ad%a3%e7%9a%84%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%92%a8%e8%af%a2"><![CDATA[咨询]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68474</wp:comment_id>
			<wp:comment_author><![CDATA[Zoom.Quiet]]></wp:comment_author>
			<wp:comment_author_email>Zoom.Quiet@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zoomquiet.org</wp:comment_author_url>
			<wp:comment_author_IP>116.19.107.101</wp:comment_author_IP>
			<wp:comment_date>2010-05-19 00:41:01</wp:comment_date>
			<wp:comment_date_gmt>2010-05-18 16:41:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[真实的感动！
领导不是不愿意改进团队，往往是积习难改，
成员也没有动力担当，在被意外任务不断打挠，所有人都永远繁忙时，
什么改进都是想象了...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68465</wp:comment_id>
			<wp:comment_author><![CDATA[半个菠萝蜜]]></wp:comment_author>
			<wp:comment_author_email>dengaiping0736@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.136.19.134</wp:comment_author_IP>
			<wp:comment_date>2010-05-17 23:34:24</wp:comment_date>
			<wp:comment_date_gmt>2010-05-17 15:34:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[原来IT人可以这样技术化、艺术化、文艺化；对比之前我写的，再看看你写的，确实大不一样，惭愧。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68464</wp:comment_id>
			<wp:comment_author><![CDATA[半个菠萝蜜]]></wp:comment_author>
			<wp:comment_author_email>dengaiping0736@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.136.19.138</wp:comment_author_IP>
			<wp:comment_date>2010-05-17 22:54:02</wp:comment_date>
			<wp:comment_date_gmt>2010-05-17 14:54:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有幸完整见证了这一过程。对于这场沟通产生的神奇效果，是引导式的提问，刻意营造的轻松氛围，对每个在场的人的尊重和关注产生的综合作用。按cjz的话来说，就是沟通的化学作用。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68463</wp:comment_id>
			<wp:comment_author><![CDATA[flyisland]]></wp:comment_author>
			<wp:comment_author_email>flyisland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://flyisland.blogbus.com</wp:comment_author_url>
			<wp:comment_author_IP>183.3.20.171</wp:comment_author_IP>
			<wp:comment_date>2010-05-17 22:35:22</wp:comment_date>
			<wp:comment_date_gmt>2010-05-17 14:35:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["用一个毛绒猴子作为令牌, 拿到猴子的人才能说话，其他人不能说话。"

这个方法不错嘛，感觉只要能成功让拿到猴子的人说话，就会让其他还没有拿到猴子的人更加希望说]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Disconnection(连接中断)</title>
		<link>http://michael.nona.name/archives/306</link>
		<pubDate>Fri, 21 May 2010 15:37:50 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=306</guid>
		<description></description>
		<content:encoded><![CDATA[连接中断这件事情其实不仅仅是物理现象。

《阿凡达》里面，氧气舱里Jack的连接线被拔除意味着他无法在潘多拉星球上与那些纳美人无法再交流。此时纳美人看见的Jack似乎是一个毫无生气的尸体，而氧气舱内的Jack则对发生在纳美人群体内的事情一无所知。还记得面对即将碾压而来的巨型机器，公主疯狂的拖拽着毫无知觉的Jack。而已经断线的Jack则像一个橡皮偶一般，毫无知觉。而一旦连接线被接上，Jack瞬间可以对现状作出反应。

《水云间》中，梅若鸿的十年前的结发妻子为了成全他而投湖自尽，大受刺激的梅若鸿近乎成为植物人，似乎他与整个世界已经断线。无数的好友、亲人都没办法叫醒他。最终是杜芊芊胸前的红玫瑰纹身，唤醒了他，使他与这个世界重新相连。

<hr />

在我注意到的沟通不畅的现象中，很多情况是，参与沟通的个体与与整个沟通场景之间连接中断。如果只是一个人产生中断，那么沟通过程对于这个人而言会是比较痛苦的；但如果这个人非常重要，比如是领导或者其他话语权比较强烈的，那么其他人会比较痛苦。他们的痛苦，与上面描述的两个案例是没有太多不同的——花<strong>费了大量的气力，其实不是为了最终解决什么问题，而是为了与场景产生连接。</strong>简单的表现就是：花费大量的时间去描述问题本身，而非去谈论解决方案。

在<a href="http://michael.nona.name/archives/302">前一篇文章</a>中，我发现我所花费的大量的时间所营造的，只是让每个参与沟通的个体与场景之间产生连接。在绝大多数情况下，一旦连接建立，问题就已经解决了一大半——剩下的事情就是依赖每个人的创造力去将问题解决。沟通最大的问题，是你以为它发生了，其实它没有。在《世界咖啡——创造集体智慧的汇谈方法》这本书里面，我看到大多数费尽心思的氛围营造——包括4-6人小圆桌，无处不在的摄像头，大屏幕，可以书写的餐桌布，等等，都是为了将连接建立的成本降到最低，让连接迅速建立，从而让沟通的效率更为集中的体现在价值创造上，而非问题澄清上。

这个说法也可以解释为什么我们需要可视的状态墙进行任务管理，为什么需要将应用程序的原型图贴到到处都是，为什么需要尽可能多的保持结对更换、尽可能多的进行面对面沟通，一切都是为了保证连接是常在的，否则连接一旦中断，你期待着谁会在胸前纹上鲜艳的红梅花去让谁清醒呢。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>306</wp:post_id>
		<wp:post_date>2010-05-21 23:37:50</wp:post_date>
		<wp:post_date_gmt>2010-05-21 15:37:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>disconnection%e8%bf%9e%e6%8e%a5%e4%b8%ad%e6%96%ad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68501</wp:comment_id>
			<wp:comment_author><![CDATA[半个菠萝蜜]]></wp:comment_author>
			<wp:comment_author_email>dengaiping0736@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.136.19.136</wp:comment_author_IP>
			<wp:comment_date>2010-05-22 20:02:20</wp:comment_date>
			<wp:comment_date_gmt>2010-05-22 12:02:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵，梅花三弄也能联想到沟通问题呀]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>兴趣？</title>
		<link>http://michael.nona.name/archives/320</link>
		<pubDate>Fri, 16 Jul 2010 14:19:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=320</guid>
		<description></description>
		<content:encoded><![CDATA[我时常听到类似这样的说法：

“小时候我很喜欢音乐的，唱歌很好，老师经常夸我。我自己也很喜欢唱歌。可是后来上大学的时候家里人不让我报考音乐学院……”

结果呢，我看到的是基本被搁置一边的天赋，和大量的时间用来看花边新闻八卦杂志研究时尚美容等等等等。

“其实我是个写代码的。我不应该在这里，应该在一个角落里快乐的编写着代码。”

结果呢，我看到的是在真正需要写代码的时候，表现出来的迟钝和生疏。

我也看到很多很多时常将兴趣挂在嘴边，行动上却吝惜投入的人。相信你也看到。或者你就是。

<strong>兴趣是一种信仰。</strong>

当你真的觉得某些事情是你真正热爱的方向的时候，就应当真正的花时间去追求。原地期待不会有任何结果，朝三暮四更不会。朝九晚五然后说没有时间不是借口，全力投入的一两个小时的产出将远远超出你的想象。

我曾经劝说过很多人，放弃平凡的工作去追求自己真正热爱的人和事。然而真正接受建议的人很少。四平八稳往往是大多数人的选择。很多时候激情、冲动、莽撞之间划上约等号，弄的人搞不清楚这股情绪到底是什么。年长者考虑太多，出于善意，他们往往会说，

“年轻人，别冲动。”

可是，不冲动，是年轻人么？！

兴趣是一种信仰。而信仰要体现力量，需要长时间的近乎虔诚的朝拜和练习。整天挂在嘴边的兴趣不是兴趣。天天练习，以此为生活准则和行为习惯，并且得到广泛认可的小有所成，那才是真正的兴趣。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>320</wp:post_id>
		<wp:post_date>2010-07-16 22:19:02</wp:post_date>
		<wp:post_date_gmt>2010-07-16 14:19:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%85%b4%e8%b6%a3%ef%bc%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68619</wp:comment_id>
			<wp:comment_author><![CDATA[River]]></wp:comment_author>
			<wp:comment_author_email>river@china.hz</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>115.197.37.194</wp:comment_author_IP>
			<wp:comment_date>2010-07-18 09:05:50</wp:comment_date>
			<wp:comment_date_gmt>2010-07-18 01:05:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[某位长者总结过：同样一个道理，出自耄耋老人之口和出自弱冠少年之口，对同一听受者的影响完全不同。

因此历史上不少张冠李戴的名言警句，为的就是加强受众(包括自己)的心理暗示。

例如：Jobs says: The Apple Mac: It's a religion.

然后的解释就顺理成章]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68664</wp:comment_id>
			<wp:comment_author><![CDATA[lung]]></wp:comment_author>
			<wp:comment_author_email>lungxie@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.253.183.222</wp:comment_author_IP>
			<wp:comment_date>2010-07-24 14:53:46</wp:comment_date>
			<wp:comment_date_gmt>2010-07-24 06:53:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[深有同感, 但有时生活所逼也没办法, 也许这也是一个借口吧.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68622</wp:comment_id>
			<wp:comment_author><![CDATA[hu kai]]></wp:comment_author>
			<wp:comment_author_email>iamkaihu@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://iamhukai.com</wp:comment_author_url>
			<wp:comment_author_IP>219.144.240.123</wp:comment_author_IP>
			<wp:comment_date>2010-07-18 11:47:37</wp:comment_date>
			<wp:comment_date_gmt>2010-07-18 03:47:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I like this post a lot]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>8小时之外</title>
		<link>http://michael.nona.name/archives/323</link>
		<pubDate>Mon, 01 Nov 2010 14:28:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=323</guid>
		<description></description>
		<content:encoded><![CDATA[很多人说，工作是工作，生活是生活。8小时之外的工作，与我无关，让我们上班时间再谈。

很多时候这是正确的。敏捷也说，提倡每周40小时工作不加班。

但说着说着，这个话题就逐渐走向了两个极端：一个是为了完成工作而拼命加班，一个是严格恪守工作生活之间的泾渭，8小时之外则完全抵御任何“工作”。

10年前我开始使用手机。那个时候开始有人在非工作的时候找我。那个时候也没有想这么多工作生活的分别，那种时刻被连接的感觉还是很不错的。后来混迹社区，更难以分辨工作生活：白天写公司的代码，晚上写开源软件，得到一些线索第二天接着在公司写，有了一些想法难以抑制也就直接工作下去了。看起来是一直在工作吗？也不全是，但显然也不是生活。

从使用G-Phone到iPhone, 工作看起来与大多数人越来越近。也许在那一刹那，你就收到了哪里的邮件需要处理，哪里的一条聊天消息。这些事情，有可能发生在任何时间，无论工作还是生活。

我想起真正的工匠，画家，艺术家。他们似乎从未区分工作与生活的差别。固定的作息时间并非完全的限制了他们的“工作”时间，在大部分的时间里，那些冥想，采风，写生，难道不是“工作”？

我感到迷惑了。到底什么是工作？

纺织工人是工作。在8小时甚至更长的时间里，坐在缝纫机前，机械的按照流水线的要求，完成一道道的工序；富士康里的电焊工是工人，在0.5平米的工位下，连伸手的动作都被规定；写代码是工作，在8小时的时间里，老老实实把代码堆出来，中规中矩的开发，下班回家。

还有一些人，在8小时之外看起来没有工作，例如思考，讨论，研究发现新的解决办法以便让日子过得更好。这些不可见的、无法以常规评估体系来衡量的“工作”，却很快成为这些人脱颖而出异于常人的重要因素。例如，在工作时间里有个问题已经完成了，在工作之外的时间里琢磨的时候发现了更好的解决办法。

工人与创新者的区别在于，前者通过不断重复，后者则通过不断创新。创新多少是从不断的重复和思考中而来。只有在“工作之外”仍然能够不满现状、提升技能、优化方案的人，才算得上是热爱这个职业的人，才算是“工匠”。

在现代的通讯和沟通工具下，绝对脱离工作是不现实的，就像绝对脱离生活是不现实的一样。说8小时之外“绝对”不碰不想不锻炼的人，也许应该考虑一下，现在从事的工作是自己真正热爱的么？

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>323</wp:post_id>
		<wp:post_date>2010-11-01 22:28:59</wp:post_date>
		<wp:post_date_gmt>2010-11-01 14:28:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>8%e5%b0%8f%e6%97%b6%e4%b9%8b%e5%a4%96</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68779</wp:comment_id>
			<wp:comment_author><![CDATA[半个菠萝蜜]]></wp:comment_author>
			<wp:comment_author_email>dengaiping0736@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>112.3.238.70</wp:comment_author_IP>
			<wp:comment_date>2010-11-01 23:26:16</wp:comment_date>
			<wp:comment_date_gmt>2010-11-01 15:26:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[太阳春白雪了；又有几个人在真正热爱着自己的工作？凭兴趣工作？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68901</wp:comment_id>
			<wp:comment_author><![CDATA[isxylands]]></wp:comment_author>
			<wp:comment_author_email>isxylands@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://t.sina.com.cn/isxylands</wp:comment_author_url>
			<wp:comment_author_IP>222.129.41.246</wp:comment_author_IP>
			<wp:comment_date>2010-11-21 23:10:54</wp:comment_date>
			<wp:comment_date_gmt>2010-11-21 15:10:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[对于为理想工作的人来说，工作是生活其中的一部分。enjoy!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68888</wp:comment_id>
			<wp:comment_author><![CDATA[107467824]]></wp:comment_author>
			<wp:comment_author_email>107467824@qq.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.148.86.141</wp:comment_author_IP>
			<wp:comment_date>2010-11-16 08:19:24</wp:comment_date>
			<wp:comment_date_gmt>2010-11-16 00:19:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[通过精准的分析 竟然推论出 逼迫的也得精进自己工作的 结论。精彩 赞一个。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>8小时之外2 - 到底排斥的是什么</title>
		<link>http://michael.nona.name/archives/325</link>
		<pubDate>Tue, 02 Nov 2010 00:15:45 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=325</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://michael.nona.name/archives/323">上一篇</a>谈到了在如今的现实情况下，想要在8小时之外完全脱离工作是不现实的。人们可以主动的关闭视听，但这并不意味着工作真的不存在。随着描述的深入，“工作”这个词已经逐渐变得语义不明。一类是事务性工作。这类工作的特点是往往需要具备工作相关的工具和环境，并且需要当事人以某种形式出现在现场。例如制造业的工人，需要人、机器和厂房。第二类是与事务性工作本身并不直接相关，但从系统的角度来说，能够进行边缘性的研究和思考则能够在短期或者长期促进事务性工作效率，我称之为改进型探索。

我发现人们在说8小时之外不再工作的时候，他们实际上是在说：“不要让我加班写公司的代码了”，“不要让我在回家的时候还要电话24小时开着做客户支持了”。人们需要一个节奏来平衡和调整工作与生活，而排斥在8小时之外被动的出现在工作的现场（无论是何种形式，现场或者在线），则是违背这种精神诉求的。

但说着说着，这些话题便变了味道──某些恪守8小时之外不再工作的人，最终连提升工作技能的兴趣都完全放弃了──就是前面称之为改进型探索的“工作”。一旦离开了工作环境，大脑也停止了这方面的运转，一些有可能优化和改进的地方，则冻结在了8小时的时间里──人们主动地关闭了这部分联系。为了片面的精神诉求，大脑消极的防御了这一挑战。“我可以尽责的在上班时间完成这些工作，但你无法要求我尽心的去改进”。人们又往往站到工作的对立面，以更为复杂的场景和理由（如职业、老板、薪水等等）去解释8小时之外不再进行任何与主职工作进行创造性思考的原因。

我发现大多数人其实什么兴趣都没有。然而我始终坚信的人天生具备创造力和想象力。这些想象力和投入被所谓的8小时的门槛拦住的时候，挡住的不仅仅是那几个小时的“工作”，挡住的还是主动思考、寻求自我价值、发现真正兴趣的心。


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>325</wp:post_id>
		<wp:post_date>2010-11-02 08:15:45</wp:post_date>
		<wp:post_date_gmt>2010-11-02 00:15:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>8%e5%b0%8f%e6%97%b6%e4%b9%8b%e5%a4%962-%e5%88%b0%e5%ba%95%e6%8e%92%e6%96%a5%e7%9a%84%e6%98%af%e4%bb%80%e4%b9%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Staying Real</title>
		<link>http://michael.nona.name/archives/331</link>
		<pubDate>Mon, 29 Nov 2010 09:47:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=331</guid>
		<description></description>
		<content:encoded><![CDATA[37Signals的一篇<a href="http://t.co/Mf0xwYk">Blog</a>，谈到了在现实项目中的种种问题已经应对措施，给我印象最深的，就是由于实际情况，而将固定长度的迭代变成变长的……例如，将完整的14天（两周）的迭代，变成7个工作日的迭代（第一周4天，第二周3天──因为第一周可能需要有大量的讨论，第二周要部署和进行及时的support）。而且每个迭代都会根据实际情况进行调整──比如某些周假期非常多，那就进行更少的计划等。

对于我这种“纪律就是纪律”的守序主义者而言，这确实有些不可思议。我一贯觉得，在长期的项目开发中，工作的节奏需要保持，这种节奏不应该、或者说应该尽可能少的受到现实情况的干扰。比如，在过去的项目中，为了让每个迭代的交付产物看起来差不多，采取了比如延长迭代时间（比如在假期众多的月份）或者主动进行计划预期降低（比如在特定的月份交付更少的功能）。但“减少有效工作日并将其作为计划的基础”，这个则完全没有考虑过。

除了计划层面的考虑之外──其实这方面仔细想想也不难理解，我另外想到的是，对现实的尊重。老外对自己的个人生活都很看重，假期能享受的，绝不工作，8小时之外绝不多工作；工作之外其他的兴趣也照顾的很周全──奇怪的是，对于37Signals这家公司，这些现实的局限丝毫没有阻碍他们成为一家在现代独树一帜、颠覆并成为新一代商业公司典范──无论从技术上、还是商业上超级成功的公司。

然而这就是现实，一个以现实为基础并造成另外一个现实的现实。他们从根本层面尊重员工──将第二周的工作时间变成3天而不是5天是因为部署和support也需要算到工作时间中而不是通宵或者加班；理解浪费的产生不是太少太慢而是太多太快，因此宁愿将事先的讨论放到工作时间之外并放到计划中；理解精致的东西来自手工因此愿意投入两周甚至一个月的时间仅仅为了实现更好的日期选择方式。

也许37Signals是产品公司，对自己的产品有充分的控制能力，因此可以自如的控制进度；然而现实的产生往往来自于当初的意愿。如今的现实让他们公司愿意，也让他们的客户满意。

那么，我们能看到的项目中有哪些影响进度的真实呢？
<ul>
	<li>马上就是假期了</li>
	<li>随着功能的逐渐堆砌，连有经验的人对现在的工作都失去了兴趣</li>
	<li>新人比例大，成长慢</li>
	<li>张三家里需要帮助</li>
	<li>李四每个周二都会早走1小时，因为他要陪老婆去看打折电影</li>
	<li>王五抱怨每天上班需要1个多小时</li>
	<li>每隔一个周末都需要部署，目前采用轮换的方式，来值班</li>
	<li>……</li>
</ul>


以每个人的都具备职业素养为前提：即在有效的工作时间里，大多数时间我们都高效的完成了工作。上述的真实情筐里，所有额外产生的工作量，是放入团队自行消化，还是将其看作真实的一部分，让项目所有受众理解并且接受？

我们的西安分公司的<a href="http://iamhukai.com/">胡凯</a>给了这个问题很好的一个<a href="http://www.infoq.com/cn/articles/hk-build-full-function-team">答案</a>。在一个新人众多的项目里，这些真实充分的体现到了计划和实际中，得到了客户、团队所有人的认可和尊重。他们不加班，不熬夜、不强调个人英雄主义，最终交付最终成为了一个团队成功、客户成功中所有结果的一小部分。我印象很深刻的是，他们充分考虑到了员工成长需要的空间和时间，在我们每次提出给他们做培训和帮助的时候，当我仍然惴惴不安的这是否会打扰团队的时候，他们似乎比我们还要急切想要分享我们能够提供的。

也许有人会说，只需要做计划的时候留够余量就好了。然而我更相信这个余量就是对现实的尊重程度。没有什么比加班更容易抹杀人的想象力了；没有什么比盲目冲刺更容易产生浪费了；没有什么比个人英雄主义更容易让牛人成为牛了。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>331</wp:post_id>
		<wp:post_date>2010-11-29 17:47:12</wp:post_date>
		<wp:post_date_gmt>2010-11-29 09:47:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>staying-real</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%92%a8%e8%af%a2"><![CDATA[咨询]]></category>
		<category domain="category" nicename="agile"><![CDATA[敏捷]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68925</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>211.27.20.51</wp:comment_author_IP>
			<wp:comment_date>2010-11-30 14:20:06</wp:comment_date>
			<wp:comment_date_gmt>2010-11-30 06:20:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@weakish  多谢。已经修改。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68924</wp:comment_id>
			<wp:comment_author><![CDATA[weakish]]></wp:comment_author>
			<wp:comment_author_email>weakish@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://weakish.github.com</wp:comment_author_url>
			<wp:comment_author_IP>221.136.152.232</wp:comment_author_IP>
			<wp:comment_date>2010-11-30 13:41:42</wp:comment_date>
			<wp:comment_date_gmt>2010-11-30 05:41:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[「紧紧为了实现更好的日期选择方式」

僅僅？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>项目管理工具：他们只是不适合分布式小团队</title>
		<link>http://michael.nona.name/archives/338</link>
		<pubDate>Mon, 06 Dec 2010 01:47:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=338</guid>
		<description></description>
		<content:encoded><![CDATA[时不时的，我会有一些小项目需要其他人的参与和帮助。贡献者往往处于不同的地区、公司。出于现实的考虑，大家白天需要上班，下班还有各种社交需求，也许在时不时的某一天的某个时候，他们开始为这个小项目工作，却发现需要很久才能跟上其他人的节奏。一般来说，我自己的catch up的方式是这样的：

1. 阅读代码
2. 将应用运行起来，看看有什么新特性
3. 阅读来往邮件 -  往往很少
4. 琢磨一下还剩什么可以做的……开始工作

我感到很郁闷。我估计其他贡献者，除非是一直持续的进行code review和功能编写的，也应该感到很郁闷。我开始反思自己的开源项目其他贡献者很难参与、进展得不好不仅仅是因为项目本身，而更多的是因为缺乏一个更加有效的沟通机制。我开始尝试解决这个问题。于是：

1. 代码放到了<a href="http://www.assembla.com/">Assembla</a>上，这样每次SVN提交，参与者都能得到邮件通知
2. 我在<a href="http://bitbucket.org/">BitBucket</a>上建立了任务列表，任务的变更就能得到通知
……

于是我又尝试了采用<a href="http://www.thoughtworks-studios.com/mingle-agile-project-management">Mingle</a>, <a href="http://www.fogcreek.com/fogbugz/">FogBugz</a>. 在针对具体任务的跟踪和流程配置上，他们表现非常优秀，然而，会话信息的丢失，却使得在“分布式团队”这个场景下变得沟通困难。简单的说，他们都无法回答这个问题：

“作为一个开发人员，当我开始工作的时候，我想看到其他人都做了什么，以便我能迅速了解上下文，开始工作”

目前，针对分布式、小团队的项目管理需求有哪些呢？

最高设计思路：项目管理就是沟通。对于项目管理的核心基本上创新已经不多，无非就是计划、实现、跟踪、检查。界面和功能实现的创新会更加重要。我能想到的设计如下：

0. 界面！界面！界面！与时俱进、不断进化、直观清爽的界面是吸引使用的第一准则。

1. ActivityStream是一种现代非常流行的设计模式，常见于社交网站的如Facebook、开心网之类。基本的设计思路将“谁在什么时候做了什么”按照时间线的方式展现出来，并且作为默认展示。针对项目管理，一个典型的ActivityStream如下例：

<blockquote>
张三昨天上午完成了任务：添加登录支持，并且评论：“现在支持OpenId登录了”
李四前天提交了代码：< 代码文件列表>，注释：修改了界面
……
</blockquote>

对于我而言，能够在一个地方看到这些信息非常重要，特别是团队不在一起工作或者工作时间没有重叠的时候。

2. 开放的登录支持。不知道为什么，我逐渐对任何需要重新注册的应用感到逐渐不可忍受。我想也许会有跟我差不多的人……如果能够使用OpenID/Gmail进行登录，那么体验会更好

3. 所有的信息都可评论、回复。无论是一个新的提交，还是完成了一个新的任务，还是写了一个份新的wiki文档，总有时候希望对这些信息发起讨论。邮件的集成不应该仅仅“知会”，而应该能够直接回复，并且会展示到这个系统中。

4. 移动支持。系统在移动浏览器上看起来应该也不坏。

5. 开放API，而非插件机制，让第三方的应用可以接入。

<a href="http://www.thoughtworks-studios.com/mingle-agile-project-management">Mingle</a>很好。<a href="http://www.fogcreek.com/fogbugz/">FogBugz</a>很好。<a href="http://trac.edgewall.org/">Trac</a>很优秀。<a href="http://www.redmine.org/">Redmine</a>也不错。但对于我而言，他们真的不适合分布式小团队。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>338</wp:post_id>
		<wp:post_date>2010-12-06 09:47:48</wp:post_date>
		<wp:post_date_gmt>2010-12-06 01:47:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e9%a1%b9%e7%9b%ae%e7%ae%a1%e7%90%86%e5%b7%a5%e5%85%b7%ef%bc%9a%e4%bb%96%e4%bb%ac%e5%8f%aa%e6%98%af%e4%b8%8d%e9%80%82%e5%90%88%e5%88%86%e5%b8%83%e5%bc%8f%e5%b0%8f%e5%9b%a2%e9%98%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="product"><![CDATA[产品设计]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>68984</wp:comment_id>
			<wp:comment_author><![CDATA[半个菠萝蜜]]></wp:comment_author>
			<wp:comment_author_email>dengaiping0736@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>112.3.238.124</wp:comment_author_IP>
			<wp:comment_date>2010-12-21 22:21:33</wp:comment_date>
			<wp:comment_date_gmt>2010-12-21 14:21:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[既然没有一个比较理想的，那就赶紧开发一个吧，开源的 ：） 
其实不仅是小团队，分布式大团队同样适用哦。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68939</wp:comment_id>
			<wp:comment_author><![CDATA[weakish]]></wp:comment_author>
			<wp:comment_author_email>weakish@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://weakish.github.com</wp:comment_author_url>
			<wp:comment_author_IP>221.136.152.232</wp:comment_author_IP>
			<wp:comment_date>2010-12-06 16:49:19</wp:comment_date>
			<wp:comment_date_gmt>2010-12-06 08:49:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哦，忘了說，其實gitorious也是開源的，也可以在它基礎上定製。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68940</wp:comment_id>
			<wp:comment_author><![CDATA[weakish]]></wp:comment_author>
			<wp:comment_author_email>weakish@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://weakish.github.com</wp:comment_author_url>
			<wp:comment_author_IP>221.136.152.232</wp:comment_author_IP>
			<wp:comment_date>2010-12-06 16:52:30</wp:comment_date>
			<wp:comment_date_gmt>2010-12-06 08:52:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[暈，前面的評論不通過，後面的倒直接通過，看來帶鏈接的要審覈？重新發個不帶鏈接的。

gitorious.org

0 界面比较清爽
1 dashboard上可以看timeline 支持rss订阅
2 支持openid直接登录
3 changset和pull request等都可以评论。wiki麼，反正可以直接修改页面评论，所以也无所谓了。
5 无api。不过由于支持REST，url也比较齐整，所以其实直接来也不难  www.mail-archive.com/gitorious@googlegroups.com/msg01017.html

bitbucket.org

基本同gitorious，除了：
3 changset pull request不能评论
5 有api

github.com

基本同gitorious，除了：
1 不支持openid
5 有api

这些站点都不支持的是：
支持回覆的邮件集成（我觉得这个非常有用，可惜上面没一个实现的。）
移动界面（不过有人会在手机上review code麼?)

或者，在Trac/Redmine的基础上自己定制一个？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68941</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>222.90.132.156</wp:comment_author_IP>
			<wp:comment_date>2010-12-06 20:53:16</wp:comment_date>
			<wp:comment_date_gmt>2010-12-06 12:53:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@weakish 多谢你详细的回复。 我想我忘了说一点，那就是针对一个项目管理工具而言，最根本的功能还是需要具备的：就是对项目任务、功能点、缺陷的跟踪。这些在github/gitorious都没有。他们充其量只有一个很小的缺陷系统和feature request系统，谈不上跟踪。github有基本的issue记录，针对常规的bug还可以，但要针对传统项目制作计划还是有些力不从心；gitorious的timeline只有针对代码库变更展现的能力（至少是目前）。

移动界面不仅仅是为了review code...实际上为沟通提供了更多的能力。最新的Mingle 3.0提供了Murmur的功能，目的就是为了track项目中非结构化的信息……虽然用的不多。比如你在某个地方突然想到了一个点子，来不及记下，就不必非得等到电脑跟前就可以记录。

Trac/Redmine/Mingle/Fogbugz等等都很好……除了Mingle在流程和任务类型的创新外，其他的项目管理工具似乎朝着功能、报表方向渐行渐远，而对项目级别的成员沟通需求忽视了……]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>68940</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68944</wp:comment_id>
			<wp:comment_author><![CDATA[telking]]></wp:comment_author>
			<wp:comment_author_email>telking@telking.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>183.8.130.44</wp:comment_author_IP>
			<wp:comment_date>2010-12-07 08:50:35</wp:comment_date>
			<wp:comment_date_gmt>2010-12-07 00:50:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[redmine:可使用OpenID进行登录，也有REST（可支持PHP、python、ROR）支持第三方应用，支持回覆的邮件集成，界面很清爽，权限设置可以任意评论，有Code Review、Scrum PM这两个插件很好用,也可以支持gtalk]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>2010</title>
		<link>http://michael.nona.name/archives/346</link>
		<pubDate>Tue, 28 Dec 2010 11:35:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=346</guid>
		<description></description>
		<content:encoded><![CDATA[2010是过的最离散的一年。

出差，这一年并没有因为小羽辰的来临而减少一些：

3月-5月，南京
5月-7月，费城，之间零星时间在西安
9月，西安，休假一个月
10月-11月，北京
11月，悉尼
11月，西安
12月，悉尼

而这一年想得也很多。

一些新的信仰，在咨询、交付、travel、与不同肤色人的交流中，开始逐渐建立：

<ul>	
<li>兴趣是珍贵的。当你说你的兴趣是什么的时候，花时间琢磨它练习它，直到达到常人无法企及的高度，直到它成为你的信仰。就像你无法说喜欢一个女孩子却不肯花时间陪她，兴趣也是如此。</li>
<li>时间是有限的，但这并不意味着你要耗掉每天十几二十个小时来完成自己的工作。想清楚要做什么，然后拆分任务，然后关掉所有干扰你的东西，如IM/网页，专注在这一件事情上。如果连续工作超过2个小时，后面的时间投入性价比低到可能你根本没有考虑过</li>
<li>不要相信别人说的。相信他们做出的。廉价的梦想是人就有一大把</li>
<li>在眼下这个神奇的社会，同流合污和出污泥不染的成本是一样的。把灵魂交给恶魔的后果是短暂的获得了物质的享受却永远失去了清洁的灵魂。使用高质量的产品，为其付钱，拒绝任何形态的盗版，如软件、复制的网站、版权不明的文章</li>
<li>在现实与梦想之间有时感到痛苦是一件好事。这种轻微的张力会让你产生改变现实的勇气。</li>
<li>不能做得完美并不表示做的丑陋是可以接受的。我不再接受“我已经尽了全力”却交出一份丑陋作品的理由。现代的信息渠道下，几乎没有什么阻挡任何人创造一份还过得去的作品。</li>
<li>办公室是一个很难做成什么事情的地方。</li>
<li>增强沟通和保护注意力，是绝大多数现代软件需要考虑的因素，无论这个软件是什么</li>
<li>忘掉所谓“现实的压力”。读我博客的人都有现实的压力这并不意味着他永远都是你对梦想妥协的唯一理由</li>
<li>群体的智商大约等于群体中智商最低所占的权重。所谓领导力，就是想办法降低这个比重：要么提升个体，要么减少数量</li>
<li>机场的那些所谓管理大师的演讲，你就当单口相声听好了。</li>
<li>人多力量小</li>
</ul>

然而，我却逐渐失去了对生活的掌握。再过两个月，我将在ThoughtWorks工作5年。这段时间里，不断的出差让我不断的失去与同事之外的北京、西安同学朋友的持续联系。已经很久不知道曾经一起工作过近两年的同事了，我甚至已经记不清大学同学的名字和样貌。现在，工作与生活彻底混在一起，同事就是朋友，家人，生活圈子，界限逐渐模糊。

2011，会是什么样子呢？

我会完成2个产品：

1. backfield - 项目协作软件。其实已经开始在用了，不过目前只支持ThoughtWorks email. 我想自己先用一用，然后再考虑其他的事情。作为对传统敏捷项目管理软件的对比，我想将自己在项目协作方面的考虑放到这个软件中。将会是在线软件（SaaS）。不会开源。会收费，但不会太高，每个月不会超过一个月魔兽的费用，或者每年不会超过北京一家中等规模一次团队聚餐的费用。不是为了挣钱，但它应该有自己的价值。

2. inwritingroom - 个人写作工具。这个早期放在了inwritingroom.appspot.com上，然而伟大的国家把整个appspot都封掉了，inwritingroom成为outside writing room. 但我不能放弃432个用户写的694篇文章。2011年这个产品将会上线，保留所有用户数据，免费提供給所有人。

其他的呢？谁知道呢。

再见，2010. 我来了，2011.

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>346</wp:post_id>
		<wp:post_date>2010-12-28 19:35:38</wp:post_date>
		<wp:post_date_gmt>2010-12-28 11:35:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>2010</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>69008</wp:comment_id>
			<wp:comment_author><![CDATA[半个菠萝蜜]]></wp:comment_author>
			<wp:comment_author_email>dengaiping0736@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>112.22.170.97</wp:comment_author_IP>
			<wp:comment_date>2011-01-05 21:31:20</wp:comment_date>
			<wp:comment_date_gmt>2011-01-05 13:31:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[期待你的2011新作品]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69005</wp:comment_id>
			<wp:comment_author><![CDATA[roody]]></wp:comment_author>
			<wp:comment_author_email>wangyan87@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://wangyan.info</wp:comment_author_url>
			<wp:comment_author_IP>117.32.153.145</wp:comment_author_IP>
			<wp:comment_date>2011-01-04 21:18:28</wp:comment_date>
			<wp:comment_date_gmt>2011-01-04 13:18:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[工作和生活混在一起是不是幸福？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>艺术馆</title>
		<link>http://michael.nona.name/archives/352</link>
		<pubDate>Sat, 01 Jan 2011 23:25:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=352</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://farm1.static.flickr.com/16/92531285_50546f968c.jpg" alt="图腾" />

圣诞左右的时候到悉尼Art Gallery去转了半天，看到原汁原味的土著艺术品，草编制的eel trap, 树皮上的不断重复却又独具特色的纹理画，还有神秘的图腾。当然作为一个大型的艺术博物馆，当然也少不了欧洲中世纪的油画，雕塑和中国的瓷器、书法等。

让我印象深刻的固然是那些美轮美奂充满神秘气息的艺术品，但井然有序的作品成列，精心挑选的作品，有意识用小字表明的作品介绍，以及与作品相应成趣的环境，让人欣赏的过程始终充满愉悦。欧洲油画的展厅有粗大的柱子，不时有雕塑；中国瓷器的展厅，白色的现代墙则被红木板细心的盖住，灯光也暗了下来；原住民艺术展厅则整个变得更加粗放，空荡荡的大厅没有任何额外的装饰，所有的艺术品都在四周的墙上。

如果，同样是这些作品，放到一个大的空间中，胡乱的摆放上，参观者还会有如此好的体验吗？

那将是杂物室，而不是艺术馆。

新年夜里，我们一起Darling Harbor看新年焰火。如果你要问我具体烟火的情况，我只能很羞涩的说：比起中国的烟火，从壮观程度、时间长度、规模上，差得太远了。总共只有7分钟时间。期间真正精彩的烟火也就那么几出。

然而这确实我见过最令人难以忘记的烟火表演。开场前节奏明快的黑人现场音乐演奏；临近新年的时候数万人一起倒计时；与烟火几乎同步的现场音乐节奏，让这原本平凡的烟火立刻充满了生命力。原来，人的需求是如此的全方位，那些极速上天的爆炸和光影，配合着音乐，以及周围游客的赞叹声，让这个烟花表演充满了生机。

== 老本行的分割线 ==

回到我的老本行，软件。很多软件都只是功能的堆砌。说得更具体一些，只是数据库表的一个直接的展现：增删改查某一项信息，以表的形式显示查询结果等等。粗制滥造的功能肆无忌惮的充斥着使用者的眼球，丝毫不顾及用户在使用的过程中的心理的引导和除功能之外的满足。一个好的产品，核心功能的完成也许很小部分的完成，但更多的，如何将产品成为一个艺术馆，引导用户一步步发现并获得满足，才应该是在满足功能之外需要更多考虑的方面。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>352</wp:post_id>
		<wp:post_date>2011-01-02 07:25:49</wp:post_date>
		<wp:post_date_gmt>2011-01-01 23:25:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%89%ba%e6%9c%af%e9%a6%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>组件化：企业级大型项目必经之路</title>
		<link>http://michael.nona.name/archives/359</link>
		<pubDate>Sun, 23 Jan 2011 01:05:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=359</guid>
		<description></description>
		<content:encoded><![CDATA[超过一年以上、活跃开发的项目往往到后期陷入了一些共性的问题：
<ul>

	<li>构建速度慢，往往生成一次最终输出产物需要一小时以上；</li>

	<li>架构复杂：虽然说架构本身可以用类似于MVC/Service Bus之类的通用进行描述，但实际上使架构变得复杂的往往是业务本身；</li>

	<li>开发速度慢，构建速度是因素之一，它使得持续集成的反馈大大低于预期；然而这类大的项目往往被通过各种技术手段进行了分层、分project的切割，你要面对的可能不是一个project，而是一组项目群。我之前参与过、咨询过的项目里，开发人员打开IDE要面对的project少则几十个，多则上百个。即便以目前最强劲的开发机器，面对这动辄几十万上百万行的代码，依然显得力不从心。</li>

	<li>以及由上面而引来的一系列问题：例如新人培养，知识传递等等。</li></ul>

在提出这些问题的解决方案之前，我们看看这些问题是如何产生的。通常需要很长时间这些问题才成为问题，而且往往在一开始出现的时候，总有一些快速而有效的解决方案去掩盖，进而加剧了问题的升级，最终成为一个旷日持久需要大量人力才能解决的问题。

<strong>项目的产生</strong>

新的项目来了。团队成员兴奋的引入了最新的MVC技术框架（比如SpringMVC/ASP.NET MVC）、持久框架、依赖注入框架等等。现在流行的迭代开发方法也被引入。于是前几个迭代过去了，Domain, Service, Web等，分层良好的应用产生了。需求也快速的实现了。代码非常健康。构建速度非常快。所有人都很高兴。

2个月过去了。有心的团队成员不断的重构着代码，确保重复的逻辑、重复的代码被消除。新的人加入了团队。新的业务需求也来了。这些不断重构的代码进一步被不断重构着：终于引发了一些问题：由于只有一条主线：Domain -> DAO -> Service -> Web, 在并行开发下（比如同时有5-8个并行工作）那么公共使用的那条线会不断的产生代码合并冲突/或者业务逻辑冲突。

这不算一个多严重的问题。然而这个问题却制约了团队的规模扩张。比如需要更多的人加入这个项目的时候，耗费在沟通上的时间会大大增加，新加入的成员有效生产力也难以得到提升。

并不算太难解决的的问题。现在团队还不大。团队的架构角色只需要花上一个周末的时间，将现有的代码按照业务逻辑进行纵向切分，划分为不同的小项目，问题算是基本解决。

<strong>问题来了</strong>

更多的代码被提交。构建速度从2分钟上升到6分钟的时候有人抱怨了一下，于是花点时间优化了构建脚本，时间减少到5分钟。代码继续增长——这是不可避免的趋势——构建时间继续加长，从5分钟上升到11分钟的时候，大家的工作习惯开始发生了一些变化：一旦开始构建，就开始跟旁边的伙伴聊聊天，或者趁这机会喝点咖啡。本地提交在这个时候与持续集成服务器有点不同——本地可能只运行少量的构建步骤、必要的测试，服务器则运行所有的。

从11分钟上升到23分钟的时候，大家觉得要做点什么了。升级了所有开发人员的开发机器，最新的四核8G内存的机器，酷毙了。分布式构建集群也被引入。原来需要23分钟，现在通过分布式之后时间回落到10分钟以内了。

<strong>更多的问题</strong>

需求在不断的扩张着。代码的规模随之膨胀着。构建时间不引人注意的增长着。直到几年后的一天，突然发现：

1. 即便已经使用分布式，构建需要一个小时
2. 打开IDE面对的是72个项目
3. 虽然能忍，但干什么都有点慢
4. 架构呢？架构呢？

<strong>解决思路</strong>

大多数解决这类问题的思路仍然停留在表象层面：加机器（改善构建速度）、增强结对编程（改善交流）、写更多的Wiki（增加对代码的共识）。然而却逐渐忽略了一个事实，那就是：

<strong>这么庞大的“业务需求”，根本不是<u>一个</u>项目能够承载的。</strong>

让我们从代码层面开始。

一个大型项目需要在IDE里面打开数十个project. 这些project之间有着千丝万缕的联系——无论依赖被管理的多么好，没有人能够很清楚的知道他们之间如何被依赖的。更重要的是——大多数时间你都不会碰60%以上的project以及80%的代码。那么这些代码存在的意义何在？

因为你处在一个团队中，别人会用。

于是引用就成了依赖最强、最脆弱的代码引用。

那么，如果我们将这些项目的引用变成二进制引用呢（如JAR, DLL）？由于依赖的这些项目已经经过构建，那么编译的时间可以减少。你也只需要关注自己的项目。

听起来似乎太轻巧了。的确如此。如何获得这些二进制引用？对于JAR而言，假设一个Maven依赖仓库是必须的；对于DLL似乎没有太成熟的方案但总不是太难的问题。

这个过程之中有非常多的实现细节，很可能大多数团队在第一步：分析project依赖就跘住了脚。这么多的project想要拆开是很有挑战的事情，在业务需求的并行压力下，缺乏勇气的团队很可能止步于此。

<strong>这些依赖是组件吗？</strong>

在进行二进制引用的进程中，你应该不断的问自己这个问题：这个依赖是组件吗？还是只是一个简单的压缩包？

评估一个project是否为一个组件，在我看来有几个约束条件：

1. 是否有超过2个project依赖于它？注意，这里的依赖，不是IDE里面你指定的依赖，而是真实的、API调用的依赖。对于组件化意识不好的团队，这类项目往往成为临时代码堆放地，需要通过识别、迁移，才能将真正有用的组件提取出来。

2. 是否稳定？所谓稳定是指，在过去一段时间内（比如一个月），这个模块没有经过大的调整，API基本稳定，未来的变化只在于增加API的数量而非调整API的架构。

3. 自己依赖于外面的足够少。

通过这一步，往往你可以识别出项目中用到的公共组件、公共API等等。将他们组件化，通过Maven或者自己的依赖库管理起来，标记上版本，然后所有人使用二进制引用。通过这一步，构建时间应当大幅度减少。通过这一过程的梳理，哪些是核心业务逻辑、哪些是可以独立考虑的第三方辅助库，应当可以有一个更为清晰的理解。更重要的是，这些组件可以独立开发、升级、优化，丝毫不会影响到主线的开发过程。

<strong>组件是库（Library）还是服务（Service）?</strong>

经过上面一步，可能项目中仍然存在一些项目依赖，这些项目往往是公共的，通过API调用的。例如，在某一个银行业务中，支付模块被很多其他业务依赖。支付模块有很多代码，也需要在主进程中与其他模块一起被部署。但支付模块实在是太独立了，虽然与其他的domain之间存在一些类上的简单交互。

采用上面步骤的方法不太合适，原因之一就是它是运行时才有效的依赖——它整体上是一个服务，而非一个静态的库。这个时候你可以考虑将其彻底独立，成为一个独立的service。它的形态可以是一个操作系统服务，或者独立部署的应用。然后写一组标准的轻量级API如REST/WebService来对其进行交互。这样这部分也独立出去了。

<strong>重要的考虑</strong>

上面看起来轻巧的过程实际上在操作过程中需要耗费很长很长很长的时间。原因之一是组件很难识别。然而难以识别的原因并非是这个过程很难，而在于我们在完成一个项目的过程中倾向于将所有的东西放到一起，顶多通过project区分但仍然缺乏真正物理意义上的隔离。这是一个认知上的障碍，特别是我们面对的是“项目”而不是“产品”。“项目”这个词本身就透露着短期的、目的性强的意义。识别出来的组件本身短期并不会给团队带来多大的好处，反而会增加工作量。就像所有的知识积累工作一样，它们的好处与他们的投入在因果关系上并不连续。

<strong>我们得到了什么？</strong>

这并非一个理想化的描述，最终我们得到的是：

1. 真正物理隔绝的一组项目群：能够独立构建、开发部署和升级
2. 依赖仓库
3. 分工明确的组件和服务
4. 针对产品的版本和部署策略

(完)

PS. 这里我所说的项目是指业务需求，project(英文)是指代码组织的一种形式例如eclipse/Visual Studio等IDE的“项目”。关于架构的术语之争从未停止过。这篇文章中大量用到了“框架”、“组件”、“库”、“服务”等词汇，也许跟你平时看到的不一样，如果有迷惑之处请谅解并指出。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>359</wp:post_id>
		<wp:post_date>2011-01-23 09:05:13</wp:post_date>
		<wp:post_date_gmt>2011-01-23 01:05:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e7%bb%84%e4%bb%b6%e5%8c%96%ef%bc%9a%e4%bc%81%e4%b8%9a%e7%ba%a7%e5%a4%a7%e5%9e%8b%e9%a1%b9%e7%9b%ae%e5%bf%85%e7%bb%8f%e4%b9%8b%e8%b7%af</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[技术]]></category>
		<category domain="category" nicename="agile"><![CDATA[敏捷]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>69045</wp:comment_id>
			<wp:comment_author><![CDATA[egmkang]]></wp:comment_author>
			<wp:comment_author_email>egmkang@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.cnblogs.com/egmkang</wp:comment_author_url>
			<wp:comment_author_IP>218.80.198.254</wp:comment_author_IP>
			<wp:comment_date>2011-01-24 22:46:56</wp:comment_date>
			<wp:comment_date_gmt>2011-01-24 14:46:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[C/C++的话,应该是静态或者动态库,然后绝对不能给cpp文件,否则那帮人又在里面改来改去!@#$%^&amp;*()_]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69050</wp:comment_id>
			<wp:comment_author><![CDATA[wangyh]]></wp:comment_author>
			<wp:comment_author_email>wangyh.chn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.130.186.178</wp:comment_author_IP>
			<wp:comment_date>2011-01-25 23:57:44</wp:comment_date>
			<wp:comment_date_gmt>2011-01-25 15:57:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我觉得技术上根本不是问题，不管是libxxx还是Maven或者是以后出现的任何手段和工具，都是可以预见到能够实现的，因此组件化的技术手段不是问题所在。

如何在业务上定义组件，如何保证组件能够在较长的一段时期保持业务上的独立和稳定，特别是如何在“行业通用性不强”的定制软件项目中，在BA自己都搞不清业务的情况下，如何能让Dev识别出具有业务含义的组件，才是问题所在。

PS:为什么我们会习惯于把东西都放在一起呢，我觉得是因为Dev本身在业务组件方面就没什么经验，受限于经验，只能用最简单最容易想到的方式来做事。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69040</wp:comment_id>
			<wp:comment_author><![CDATA[dreamhead]]></wp:comment_author>
			<wp:comment_author_email>dreamhead.cn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dreamhead.blogbus.com</wp:comment_author_url>
			<wp:comment_author_IP>117.35.166.11</wp:comment_author_IP>
			<wp:comment_date>2011-01-23 10:20:44</wp:comment_date>
			<wp:comment_date_gmt>2011-01-23 02:20:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[认同这个思路。

还有一些问题：
有哪些手段可以组件化？比如对Java来说，OSGi、Maven等等。那C、.NET、Ruby如何组件化。
何时组件化？项目初期，还是进行到何种程度。
怎样组件化？逻辑上怎样划分以保证团队之间可以协同工作，如何保证整个系统的集成。

还有一点，测试。小项目组应该运行哪些测试，整个团队应该运行哪些测试，由此还会牵扯出提交策略等等。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69041</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>202.124.75.230</wp:comment_author_IP>
			<wp:comment_date>2011-01-23 11:16:38</wp:comment_date>
			<wp:comment_date_gmt>2011-01-23 03:16:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我写的比较仓促，确实有很多的实现细节被忽略了。

C的组件化应当是最容易的，这方面Unix领域已经有无数的实践了，参考libxxx之类的library. .NET和Ruby都有对应的机制DLL和GEM之类。

麻烦的不是组件化本身，而在于如何存档和获取这些组件。Maven是一个很好的例子，他对于internet和intranet都很好的支持，jar的版本、依赖都管理的很好。而.NET则没有这种概念，Ruby的gem则更多的面向public, C里面的各种库只有安装之后才能生效。没有一种针对所有语言和平台的解决方案。

一旦组件化实施之后，相应的部署流程、分支策略和版本机制都会发生巨大的变化——想像一下自己用到的某一个业务功能成为一个组件，像引入spring/hibernate一样引入依赖。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>正版</title>
		<link>http://michael.nona.name/archives/363</link>
		<pubDate>Wed, 30 Mar 2011 17:19:50 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=363</guid>
		<description></description>
		<content:encoded><![CDATA[两周前，我家里的台式机硬盘坏了。2006年买的机器，AMD单核CPU, 1G内存，后来加了个23寸的显示器，发现集成显卡支持不了，于是又买了个显卡。自从在电脑城安装的盗版XP之后就再也没有重装过，兢兢业业居然挺了快五年。期间伴随我实验各种虚拟机的Linux, 玩魔兽世界台服，以及偶尔写写代码。后来沦为家用机之后，主要用来看照片，视频，QQ之类，成为全家的共享机。

某一天开机无法启动之后，我研究了一下，发现机箱显示器显卡键盘鼠标还能用，于是跑到电脑城，买了AMD 4核CPU，4G内存，1T硬盘和技嘉的主板。花了2000块。抱着盒子的时候我琢磨：要不要买个正版的Windows 7呢？

作为资深的IT人士，一份Windows拷贝从来不是难事。作为IT公司的员工，我甚至可以大模大样的把公司的正版拿来装到家里机器上，然后说我是正版。在电脑城四楼走来走去之后，老婆直接说：你就买了吧。于是350元，买回来正版的Windows 7.

一边安装，一边回忆起这些经历来。

99年的时候，去电子市场买软件只看光盘里面哪个装的东西多。光盘一张要好几块，太贵了，里面的软件越多越好。那时候最喜欢的杂志是《数码时代》，一期只要10块钱，一张光盘，还送一本100多页的杂志。里面有很多小软件。那时候最有意思的事情是和同学一起比，谁装的软件多，谁的版本新。那个时候似乎就知道了软件是要收费的。但没办法，电子市场太近了，西工大出门就是。里面的碟片跟太多了，一摞摞用纸片包着，整理在盒子里，随便一个小摊起码能摆出几千几万张，CD，MP3，电视剧，软件，游戏，什么都有。有些卖碟的小妹长得也很正。于是我们几乎每天都去。

那一年的冬天我第一次挣到了10块钱，帮人写了个C程序。

后来去公司帮忙打工。发现一个用VB4.0的人基于Excel写了一个酒店管理系统。界面非常复杂。一套卖好几万。后来我偶尔在电子市场似乎看见了XXX酒店管理系统，与其他YYY管理系统在一张碟上，五块钱。

再后来去了另外一家公司。那家公司把光盘和32开说明书装到一摞A4纸那么大的盒子里面，哐当哐当响，也卖好几万。与CD一起卖的还有一个并口的软件狗。插上软件狗软件才能执行，否则软件无法执行。后来听说江民杀毒软件发现是盗版的时候会自动执行format C:的动作，听起来很是后怕。再后来玩盗版《轩辕剑天之痕》的时候要拔光驱，很是愤怒。现在想起来，这些软件的作者们为了保护自己的心血耗费了多少额外的心思啊。

01年的时候我终于花血本买了Redhet红帽操作系统，4张光盘，包装精美，红色的盒子，好说歹说20块钱买下来——现在想起来这是我买的唯一的正版。学习Linux的日子是痛苦的，但终究体会了至少不蓝屏的自由。于是开始接触Open Source, Free Software。

依然，几千块的操作系统、Office软件即便现在对我而言真的是太贵了。在没有选择的时候，有意无意间，用着盗版，心里偶尔会涌起惭愧。再后来Windows的某次更新加入了正版认证，自从那以后，我的windows就再也没有更新过⋯⋯我连运行那个正版认证程序的勇气都没有。

再后来有了更多的选择。光盘还是5块一张，但原来觉得高高在上的游戏、软件觉得不再昂贵了，或者他们有了替代品。我买了正版的古剑奇谭，50块，高高兴兴的在玩，可惜没有Mac版；买了正版的波斯王子，70块，就印刷粗糙给客服抱怨（后来觉得不好玩了）；花钱玩魔兽世界；AppStore上玩买的起的游戏。Office就不用了，OpenOffice、Google Doc、金山WPS免费版都能用。PhotoShop也不用了，于是我成为了周围人群中GIMP用的最好的。

⋯⋯

Windows 7安装完了。内存上显示可用内存3.5GB。我这才意识到我买的是Windows 7家庭普通32位版本。打电话问客户，32位的序列号能不能用在64位，毫不专业的客户扭捏的半天说不行，还说可以在京东上买64位的⋯⋯我勒个去，毫不客气的奚落了一番。作为合格的消费者，抱怨一下是完全合理的。

后来发现硬盘没坏。无论如何，这将是我最后一台Windows电脑了。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>363</wp:post_id>
		<wp:post_date>2011-03-31 01:19:50</wp:post_date>
		<wp:post_date_gmt>2011-03-30 17:19:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e6%ad%a3%e7%89%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>全面成功</title>
		<link>http://michael.nona.name/archives/370</link>
		<pubDate>Thu, 12 May 2011 03:14:56 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=370</guid>
		<description></description>
		<content:encoded><![CDATA[逐渐的，人们用越来越多的维度来衡量某一个人或者某一项活动的成功。例如，有很多的钱固然是人们对其保持羡慕的主要指标之一，能否行使对应的社会责任，维护公共道德也成为有力的判断准则。

这与过去的，人类一向成王败寇的单一判断观念有些不同。过去的社会关系简单，战争这种纯粹的、一旦失败就意味着国家灭亡的沉重的责任也让个体在群体中泯灭。到了现代，这类竞争关系不再存在。特别是在软件开发领域，你永远有模拟环境实施，犯错误，获得反馈并改进的机会。

奇怪的是，即便在这种情况下面，“交付成功”这一功利的目标，依然成为众多软件开发团队是否运转成功的唯一标准。在这种唯一判断标准之下，有一些行为显得可以理解：

很少的日常质量活动。 最显著的特征就是没有进行持续的测试活动，包括细粒度的单元测试和为业务人员准备的展示。测试本质是一种浪费——如果确定你的代码能够很好的工作，测试的确是增加了工作量。以“交付成功”的唯一目的而言，这些浪费毫无价值。

很少的知识共享和能力提升活动。 在“交付成功”的唯一目的之下，提升个体能力固然从长期看来对组织有利，但对于只有几个月的交付而言，没有项目经理希望这一行为发生在自己的项目之内。什么，需要花点时间学习新的技术？延误交付怎么办？沟通通常被工作环境、分配式的工作内容所隔离，团队中的个体往往只能在开会中聚集到一起，通常好几天、一两周才能偶尔发现一些讨论。

加班。加班显然是所有领导者喜欢的，说不定也是员工喜欢的。在软件行业，大多数人将其与一般的，体力密集型的工作混为一谈，认为工作时间的长度决定了工作内容的产出。就像收割麦子，生产线上的工人，工作时间越长，产出越大。然而智力密集型工作的特点在于思维清楚。很难想象一个人在工作加班十几二十个小时，依然能够保持犀利的想法，对项目进行贡献。当成为一种常态的时候，加班更多的成为一种筹码——一旦交付无法准时，那么就可以说：我们已经加很多班了。

让很多项目管理者感到迷惑的是，即便以“交付成功”或者“客户第一”之类的纯粹的，绝对的目标导向，最终许多项目依然不可避免的走向了无法按期交付、质量低劣、团队士气低落的噩梦。

在这里我不想继续提那些单点的优化策略，例如持续集成、测试驱动开发等等等等。我发现这里面是一个认知的过程。绝大多数的项目领导者，没有意识到在软件开发行业，这种单一的、功利性的目标导向下，只能产生一时的生产力提升，或无法最终产生另所有人满意的交付。在此，作为对“交付成功”唯一目标的对立面，我提出“全面成功”的概念：

全面成功，是指一个软件团队不再以交付成功作为唯一目标，而以团队沟通、个体能力提升、士气、客户沟通、持续的软件质量作为全面的衡量标准，最终获得一个全面成功的团队，交付成功只是必然结果之一。

软件开发事关沟通。写下的每一行晦涩代码，如果存在另外一个人审视，那么也许将不会存在；如果团队以平等尊重为前提，那么所有的错误都被容忍并改进，那么团队将显得更加和谐充满生机。想办法将各种软件交付产物的受众加入到沟通圈来，及早获得反馈，获得信任。

个体只有通过项目才能获得能力提升。这一点在软件行业尤其突出。给予团队成员一定的空间，通过各种活动提升员工的能力，最终这些能力会转化为惊人的生产力。

持续的软件质量，而不是某一刹那的集成。数天的甚至更久的扫缺陷、稳定版本时间不是必然的。通过实时的集成，充分的测试以及良好的测试策略，让软件库任何时刻都处于稳定的状态。这样开发人员才能放心的实现新的功能而不比担心破坏已有的功能。

全面成功并不是一个口号。事实上，我所经历过的成功的项目，都印证了这一论点。我的同事胡凯在InfoQ上分享的团队案例，也印证了全面成功对交付成功的必然性，并且获得了更多的好处。

在此我呼吁，团队停止以“交付成功”作为唯一的目标，将“全面成功”作为追求，不断改进，最终获得令人羡慕的团队，以及理所当然的顺利交付。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>370</wp:post_id>
		<wp:post_date>2011-05-12 11:14:56</wp:post_date>
		<wp:post_date_gmt>2011-05-12 03:14:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%85%a8%e9%9d%a2%e6%88%90%e5%8a%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%92%a8%e8%af%a2"><![CDATA[咨询]]></category>
		<category domain="category" nicename="agile"><![CDATA[敏捷]]></category>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>69112</wp:comment_id>
			<wp:comment_author><![CDATA[Jony]]></wp:comment_author>
			<wp:comment_author_email>jonyzhu@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>194.3.247.4</wp:comment_author_IP>
			<wp:comment_date>2011-05-20 16:05:36</wp:comment_date>
			<wp:comment_date_gmt>2011-05-20 08:05:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[别做会失败的项目，应该就能成功了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1305878736.42";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:57:{s:15:"comment_post_ID";s:3:"370";s:14:"comment_author";s:4:"Jony";s:20:"comment_author_email";s:15:"jonyzhu@163.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:51:"别做会失败的项目，应该就能成功了。";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:11:"194.3.247.4";s:10:"user_agent";s:90:"Mozilla/5.0 (Windows; U; Windows NT 6.1; zh-CN; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13";s:8:"referrer";s:37:"http://michael.nona.name/archives/370";s:4:"blog";s:24:"http://michael.nona.name";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:37:"http://michael.nona.name/archives/370";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:4:"Jony";s:10:"POST_email";s:15:"jonyzhu@163.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:51:"别做会失败的项目，应该就能成功了。";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"370";s:26:"POST_akismet_comment_nonce";s:10:"afb0a213fa";s:15:"SERVER_SOFTWARE";s:22:"Apache/2.2.12 (Ubuntu)";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:9:"HTTP_HOST";s:17:"michael.nona.name";s:15:"HTTP_USER_AGENT";s:90:"Mozilla/5.0 (Windows; U; Windows NT 6.1; zh-CN; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"zh-cn,zh;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:19:"HTTP_ACCEPT_CHARSET";s:26:"GB2312,utf-8;q=0.7,*;q=0.7";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:12:"HTTP_REFERER";s:37:"http://michael.nona.name/archives/370";s:11:"HTTP_COOKIE";s:0:"";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"277";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:16:"SERVER_SIGNATURE";s:78:"<address>Apache/2.2.12 (Ubuntu) Server at michael.nona.name Port 80</address>
";s:11:"SERVER_NAME";s:17:"michael.nona.name";s:11:"SERVER_ADDR";s:13:"61.129.251.98";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:11:"194.3.247.4";s:13:"DOCUMENT_ROOT";s:33:"/home/mechiland/michael.nona.name";s:12:"SERVER_ADMIN";s:15:"cao@redsaga.com";s:15:"SCRIPT_FILENAME";s:54:"/home/mechiland/michael.nona.name/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"16837";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1305878734";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>我为什么删除了在线简历</title>
		<link>http://michael.nona.name/archives/379</link>
		<pubDate>Mon, 08 Aug 2011 14:51:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=379</guid>
		<description></description>
		<content:encoded><![CDATA[大约一个多月前，我删除了所有的在线简历，包括中华英才网、智联招聘以及其他一些不知名的网站，还有被某电信公司直接收录到其内部系统的拷贝。

如同大多数稍微有点沾沾自喜的IT从业人员一样，接到猎头打来的电话的时候总是心中一喜。从业多年之后居然有猎头主动联系了，起码说明这一行做的还不错。然而电话接得多了，开始感到郁闷，因为猎头所询问的，都是我在简历上、互联网上，我的博客上已经写得明确的不能再明确的东西：你工作几年了，擅长什么技术，有个某某公司你是否感兴趣，能否把详细的简历发来看看之类。我之前有更新简历的习惯，最多半年就会更新一下简历，每次更新完之后都会接到数个电话，我只能一而再的重复着“没有换工作的兴趣”。

我最终意识到这是不对的。打开智联或者中华英才，对于IT从业者，我甚至找不到一个地方输入Ruby/Ruby On Rails经验，更不要说早已经成熟的nodejs/云计算之类的。作为面试者，我在ThoughtWorks看了无数简历，每次看到"Java - 36月 - 熟练" 类似的描述的时候都感到很迷惑——如何证明这一点呢？即便工作了这么久，又说明了什么？软件从业者当如同过去的手工业者一样，是依靠产品与声望而获得更好的机会。而这类通用的招聘网站，根本无法提供这类证明。删除前我的简历上密密麻麻的写了一堆，很多都是年少不经事时写下的，如C++ 2年 Oracle 2年，现在我却更乐于提及在架构、新一代web应用、团队建设方面的能力。这些，从我的twitter/blog/发表的文章中都能得到验证。

从另外一方面，这类通用的网站似乎为那些传统的招聘者提供了方便。不难想象，智联或者英才的付费企业用户只需要在搜索中加入3年工作经验、Java之类的就能获得若干份简历。进入简历筛选之后开始cold call - 不管是雇主还是应聘人员，这一阶段显得如此的单调，双方只能获得一些简单的第一印象。这些印象本可以通过IT从业者的github/twitter/blog之类所有的渠道获得，而不得不通过更加低效、主观的方式来进行。

因此，我删除了所有的在线简历。即便有一天我不得不再次找工作，我的<a href="http://github.com/mechiland/">github</a>/<a href="http://sourceforge.net/users/mechiland">sourceforge</a>/blog/<a href="http://www.infoq.com/cn/author/%E9%99%88%E9%87%91%E6%B4%B2">InfoQ</a>等等都会帮助我证明过去的经历。来自招聘网站的电话显然并不了解，除了干扁的简历之外，IT从业者有更丰富的渠道来证明资历。

PS. ThoughtWorks一直在招聘中。西安（我现在工作的分公司）、成都（明年春夏开张）、北京。如果你具备足以在网上证明自己的资历，也许你并不需要花太多时间准备简历。






]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>379</wp:post_id>
		<wp:post_date>2011-08-08 22:51:49</wp:post_date>
		<wp:post_date_gmt>2011-08-08 14:51:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e6%88%91%e4%b8%ba%e4%bb%80%e4%b9%88%e5%88%a0%e9%99%a4%e4%ba%86%e5%9c%a8%e7%ba%bf%e7%ae%80%e5%8e%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>评论的黄昏</title>
		<link>http://michael.nona.name/archives/385</link>
		<pubDate>Wed, 10 Aug 2011 15:29:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=385</guid>
		<description></description>
		<content:encoded><![CDATA[即便是排名数一数二的个人博客，有价值的评论却是越来越少了。这很难说是读者更加懒惰，或者作者内容本身不具备吸引力了。同时产生的现象是开始写作的人更多了。搭建博客这类的复杂技术工作，现在随便找个地方就能得到；微博、轻博客、社交网络之类的，将人们本身的写作诉求发泄的差不多了。人们可以趴在网上一动不动待上好几个小时，却很少能够在某个地方留下留言。即便有，也是只言片语，了了而过。

读者更为珍惜他们的时间。我在别人博客上留言还是有的，也经常期待着其他人能够参与讨论。然而过上一阵就忘记了。太多的信息选择使得那个时候留下的信息并不重要。我也回复过自己博客的留言，想到只会有那么几个人看过，心中不免有些懈怠。不过，对于作者而言，比负面反馈更为糟糕的，是完全没有反馈。这就带来一个更为有意思的命题：人们愿意写其实是为了发起一场讨论，而不仅仅是单向将其表达出来。

基于这种命题，个人博客是不具备这种基础的。每当回复的时候，交流似乎只限于博主与读者之间。太热门的个人博客，前几贴永远是抢到沙发，不那么热门的，则干脆回复寥寥。不是读者/作者不乐意去写，只是博客评论这种方式已经无法引起讨论，并且无法满足人们的社会需求。

这种情况不仅仅发生在个人博客，即便是专业性强的门户网站，也无法获得读者们的青睐。上个月我在InfoQ上发表了《<a href="http://www.infoq.com/cn/articles/cjz-architecture-corruption">架构腐化之谜</a>》，有32份评论，也还算有点讨论；这篇文章却在水木清华引起了更多的讨论，长达6页一百多份回复。虽然期间讨论已经脱离了主题，但起码引起了相关的思考。从我自己而言，这种一个话题引发一场讨论和辩证，却是我乐意看到的。

<a href="http://ycl0.com/topic/4e42a6018a36f4a912000103">有想法？请到ycl0参与讨论。</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>385</wp:post_id>
		<wp:post_date>2011-08-10 23:29:38</wp:post_date>
		<wp:post_date_gmt>2011-08-10 15:29:38</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%af%84%e8%ae%ba%e7%9a%84%e9%bb%84%e6%98%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Don&#039;t Hire B Player</title>
		<link>http://michael.nona.name/archives/388</link>
		<pubDate>Thu, 22 Sep 2011 01:05:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://michael.nona.name/?p=388</guid>
		<description></description>
		<content:encoded><![CDATA[按照贡献、能力、态度等维度的综合评价，如果将员工划分为ABC三等，毫无疑问，A Player是管理者无论如何都要留住的，他们理解公司的核心价值，对组织有着杰出的贡献；而C Player的存在显然只是为了公司的正常运营，他们很少追求职业上的发展，只是为了获得一份工作，很少做工作之外的事情。难以处理的是B Player. 他们表现各异，有些有着不那么出色的能力，却工作很卖力；有些能力出众却在职业态度上乏善可陈。从公司的主营业务上，B Player承担了事实上的大部分工作以及利润来源，从公司的日常活动上，随着在公司资历的提升，他们逐渐参与到公司日常的运作过程中，参与了招聘。

抛开能力上的差异，B Player最大的隐患在于，他们其中很少有人能够真正全心理解所在组织的正确做事方式，以及组织对人的综合要求。因此在特别是招聘、coach、共同做事这些与人相关的关键环节上，表现出的价值取向会一脉相承下去，于是B Player hire C Player, C Player hire D Player, 最终你得到一群Z Player。

有很多的资料谈到如何管理B Player。而大多关注于能力。对于越来越多的start up, 小团队，关注个体与协作效率逐渐成为主流，能力变得不那么重要。特别是对于计算机，有太多的开放免费的资源可供使用，只要投入足够的时间，在能力上完全可以胜任。组织开始花大量的时间关注B Player的时候，潜意识里将关注点从“挑战卓越”变成了“维护优秀”。这很难说不是一种妥协，这种妥协会让B Player更加安逸，C Player更为心安理得，而组织想留住的A Player更觉得失望。

对于依赖机构能力的企业，这并不是一个大问题。通过部门、分工、职位以及精心规划的职业路线，每一个新进的员工只需要按照预定义好的路线前进，在给定的工作时间内输出能用的工作成果即可。这种情况下，任何一种工作成果都可以被评估，接受并且妥协。然而随着第二次互联网创业浪潮的到来，受到影响的不仅仅是startup, 互联网公司，大型企业也逐渐倾向于采用协作更为紧密的小团队来完成工作。这种情况下，共同愿景驱动下的个人创造力显得更为重要。具备事实影响力但在态度上摇摆的B Player为这个团队带来出了平庸产品之外的伟大创新。

如前面所说，对B Player的妥协会影响A Player的表现。当组织花费大量的精力安抚B Player而不是鼓励A Player持续卓越表现的时候，A Player就得为B Player的不优秀买单。整个组织于是表现为平庸和死气沉沉。

以前并没有思考如此的深入。在组织快速发展的过程中，很难不为利润来源进行人员质量上的妥协。而这些带来的影响深远并且重大。与其在后期花费大量的时间进行培训、沟通，尝试将B Player转换为A Player, 不如索性放弃B Player的招聘，直接想办法继续提升A Player的表现，并持续提升整个组织的服务品质，最终达到真正令人向往的团队。从某种意义上说，对人员质量的不妥协也意味着高的准入门槛，那些缺乏热情、缺乏事实证据投入的应聘者，也需要静下来仔细考虑这是否是自己的职业，而非另外一份获得收入的工作。

<a href="http://ycl0.com/topic/4e7a8c9c992bf642380054dd">参与讨论，去ycl0 >></a>




]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>388</wp:post_id>
		<wp:post_date>2011-09-22 09:05:13</wp:post_date>
		<wp:post_date_gmt>2011-09-22 01:05:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>dont-hire-b-player</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[杂谈]]></category>
		<category domain="category" nicename="%e7%ae%a1%e7%90%86"><![CDATA[管理]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>69190</wp:comment_id>
			<wp:comment_author><![CDATA[JT]]></wp:comment_author>
			<wp:comment_author_email>gazein@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.232.87.90</wp:comment_author_IP>
			<wp:comment_date>2011-09-24 20:47:51</wp:comment_date>
			<wp:comment_date_gmt>2011-09-24 12:47:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[同意michael，就想mark zurkberg招人时说的，we don't really want career engineer, we want someone who has the passion to take whaever it takes to make things happen.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1316868471.67";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:57:{s:15:"comment_post_ID";s:3:"388";s:14:"comment_author";s:2:"JT";s:20:"comment_author_email";s:16:"gazein@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:174:"同意michael，就想mark zurkberg招人时说的，we don't really want career engineer, we want someone who has the passion to take whaever it takes to make things happen.";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"123.232.87.90";s:10:"user_agent";s:67:"Mozilla/5.0 (Windows NT 5.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1";s:8:"referrer";s:37:"http://michael.nona.name/archives/388";s:4:"blog";s:24:"http://michael.nona.name";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:37:"http://michael.nona.name/archives/388";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:2:"JT";s:10:"POST_email";s:16:"gazein@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:174:"同意michael，就想mark zurkberg招人时说的，we don't really want career engineer, we want someone who has the passion to take whaever it takes to make things happen.";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"388";s:26:"POST_akismet_comment_nonce";s:10:"4f45c5f77f";s:15:"SERVER_SOFTWARE";s:22:"Apache/2.2.12 (Ubuntu)";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:9:"HTTP_HOST";s:17:"michael.nona.name";s:15:"HTTP_USER_AGENT";s:67:"Mozilla/5.0 (Windows NT 5.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"zh-cn,zh;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:19:"HTTP_ACCEPT_CHARSET";s:26:"GB2312,utf-8;q=0.7,*;q=0.7";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:12:"HTTP_REFERER";s:37:"http://michael.nona.name/archives/388";s:11:"HTTP_COOKIE";s:0:"";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"367";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:16:"SERVER_SIGNATURE";s:78:"<address>Apache/2.2.12 (Ubuntu) Server at michael.nona.name Port 80</address>
";s:11:"SERVER_NAME";s:17:"michael.nona.name";s:11:"SERVER_ADDR";s:13:"61.129.251.98";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:13:"123.232.87.90";s:13:"DOCUMENT_ROOT";s:33:"/home/mechiland/michael.nona.name";s:12:"SERVER_ADMIN";s:15:"cao@redsaga.com";s:15:"SCRIPT_FILENAME";s:54:"/home/mechiland/michael.nona.name/wp-comments-post.php";s:11:"REMOTE_PORT";s:4:"3983";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1316868465";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69165</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Chen]]></wp:comment_author>
			<wp:comment_author_email>mechiland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://</wp:comment_author_url>
			<wp:comment_author_IP>59.108.16.162</wp:comment_author_IP>
			<wp:comment_date>2011-09-22 13:55:37</wp:comment_date>
			<wp:comment_date_gmt>2011-09-22 05:55:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[关于标准的判断，我更看重的是对事情本身的热情和态度，这些并非是简单的说出来的，而是有着事实的证据。随着年龄和阅历的增长，人会变得越来越聪明，而态度和激情却很难有着根本的改变。比如软件行业，每一年都有新的技术产生，每一年都比上一年多懂一些东西，但是不是真的热爱这个行业呢？是不是想着能够做出改变世界的产品？这些是驱动个体成为一流或者二流的根本性因素。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1316670937.32";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:57:{s:15:"comment_post_ID";s:3:"388";s:14:"comment_author";s:12:"Michael Chen";s:20:"comment_author_email";s:19:"mechiland@gmail.com";s:18:"comment_author_url";s:7:"http://";s:15:"comment_content";s:522:"关于标准的判断，我更看重的是对事情本身的热情和态度，这些并非是简单的说出来的，而是有着事实的证据。随着年龄和阅历的增长，人会变得越来越聪明，而态度和激情却很难有着根本的改变。比如软件行业，每一年都有新的技术产生，每一年都比上一年多懂一些东西，但是不是真的热爱这个行业呢？是不是想着能够做出改变世界的产品？这些是驱动个体成为一流或者二流的根本性因素。";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:13:"59.108.16.162";s:10:"user_agent";s:117:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.186 Safari/535.1";s:8:"referrer";s:37:"http://michael.nona.name/archives/388";s:4:"blog";s:24:"http://michael.nona.name";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:37:"http://michael.nona.name/archives/388";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:522:"关于标准的判断，我更看重的是对事情本身的热情和态度，这些并非是简单的说出来的，而是有着事实的证据。随着年龄和阅历的增长，人会变得越来越聪明，而态度和激情却很难有着根本的改变。比如软件行业，每一年都有新的技术产生，每一年都比上一年多懂一些东西，但是不是真的热爱这个行业呢？是不是想着能够做出改变世界的产品？这些是驱动个体成为一流或者二流的根本性因素。";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"388";s:32:"POST__wp_unfiltered_html_comment";s:10:"29078abd6f";s:26:"POST_akismet_comment_nonce";s:10:"9bf883d38f";s:15:"SERVER_SOFTWARE";s:22:"Apache/2.2.12 (Ubuntu)";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:9:"HTTP_HOST";s:17:"michael.nona.name";s:14:"CONTENT_LENGTH";s:4:"1688";s:11:"HTTP_ORIGIN";s:24:"http://michael.nona.name";s:15:"HTTP_USER_AGENT";s:117:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.186 Safari/535.1";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:37:"http://michael.nona.name/archives/388";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:11:"HTTP_COOKIE";s:0:"";s:8:"HTTP_VIA";s:37:"1.1 bjproxy:3128 (squid/2.6.STABLE21)";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:16:"SERVER_SIGNATURE";s:78:"<address>Apache/2.2.12 (Ubuntu) Server at michael.nona.name Port 80</address>
";s:11:"SERVER_NAME";s:17:"michael.nona.name";s:11:"SERVER_ADDR";s:13:"61.129.251.98";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:13:"59.108.16.162";s:13:"DOCUMENT_ROOT";s:33:"/home/mechiland/michael.nona.name";s:12:"SERVER_ADMIN";s:15:"cao@redsaga.com";s:15:"SCRIPT_FILENAME";s:54:"/home/mechiland/michael.nona.name/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"47366";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1316670930";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69166</wp:comment_id>
			<wp:comment_author><![CDATA[kingfish]]></wp:comment_author>
			<wp:comment_author_email>niufish@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.niufish.com</wp:comment_author_url>
			<wp:comment_author_IP>125.36.233.161</wp:comment_author_IP>
			<wp:comment_date>2011-09-22 16:44:05</wp:comment_date>
			<wp:comment_date_gmt>2011-09-22 08:44:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[对于热情很有意思，我更看重是什么驱动出这股热情。驱动热情的最理想是具体的价值观，而不是“我就喜欢编程”或“我想当技术牛人”之类的价值观。当然价值观没有对错之说，更没有好坏之说。只是这些漂浮的价值观会尝试与公司价值观进行交流，从而相互影响。

但是公司的价值观必须具体而坚实的，如果个人的价值观与公司的价值观发生错位，热情就不可能的长久下去。

当个人的价值观与公司的价值观相互碰撞就会产生持续的热情。也可能有些人碰来碰去都没有火花，那些可能就是3流选手。

这也就是说可能一些人才，在某公司是2流选手。很可能到了别的公司成为1流选手，这就是价值观的碰撞。

规章与制度在某种程度来讲是对员工的“误导”，因为员工会更容易看到规章或者制度的表面。对于与公司价值观能够碰撞的员工在我看来才是1类员工，因为他们可以在任何时候实现企业意志。企业的行动也会一次又一次的点燃他心中的热情。他们会为企业的每一次成功而喝彩，会为企业的每一次错误而难过。

从这个角度来说，日本企业的员工大都符合1类员工的特点，不管是不是习惯惯性下来的。

哈哈]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1316681045.21";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:56:{s:15:"comment_post_ID";s:3:"388";s:14:"comment_author";s:8:"kingfish";s:20:"comment_author_email";s:17:"niufish@gmail.com";s:18:"comment_author_url";s:22:"http://www.niufish.com";s:15:"comment_content";s:1367:"对于热情很有意思，我更看重是什么驱动出这股热情。驱动热情的最理想是具体的价值观，而不是“我就喜欢编程”或“我想当技术牛人”之类的价值观。当然价值观没有对错之说，更没有好坏之说。只是这些漂浮的价值观会尝试与公司价值观进行交流，从而相互影响。

但是公司的价值观必须具体而坚实的，如果个人的价值观与公司的价值观发生错位，热情就不可能的长久下去。

当个人的价值观与公司的价值观相互碰撞就会产生持续的热情。也可能有些人碰来碰去都没有火花，那些可能就是3流选手。

这也就是说可能一些人才，在某公司是2流选手。很可能到了别的公司成为1流选手，这就是价值观的碰撞。

规章与制度在某种程度来讲是对员工的“误导”，因为员工会更容易看到规章或者制度的表面。对于与公司价值观能够碰撞的员工在我看来才是1类员工，因为他们可以在任何时候实现企业意志。企业的行动也会一次又一次的点燃他心中的热情。他们会为企业的每一次成功而喝彩，会为企业的每一次错误而难过。

从这个角度来说，日本企业的员工大都符合1类员工的特点，不管是不是习惯惯性下来的。

哈哈";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"125.36.233.161";s:10:"user_agent";s:83:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:6.0.2) Gecko/20100101 Firefox/6.0.2";s:8:"referrer";s:52:"http://michael.nona.name/archives/388/comment-page-1";s:4:"blog";s:24:"http://michael.nona.name";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:37:"http://michael.nona.name/archives/388";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:8:"kingfish";s:10:"POST_email";s:17:"niufish@gmail.com";s:8:"POST_url";s:22:"http://www.niufish.com";s:12:"POST_comment";s:1367:"对于热情很有意思，我更看重是什么驱动出这股热情。驱动热情的最理想是具体的价值观，而不是“我就喜欢编程”或“我想当技术牛人”之类的价值观。当然价值观没有对错之说，更没有好坏之说。只是这些漂浮的价值观会尝试与公司价值观进行交流，从而相互影响。

但是公司的价值观必须具体而坚实的，如果个人的价值观与公司的价值观发生错位，热情就不可能的长久下去。

当个人的价值观与公司的价值观相互碰撞就会产生持续的热情。也可能有些人碰来碰去都没有火花，那些可能就是3流选手。

这也就是说可能一些人才，在某公司是2流选手。很可能到了别的公司成为1流选手，这就是价值观的碰撞。

规章与制度在某种程度来讲是对员工的“误导”，因为员工会更容易看到规章或者制度的表面。对于与公司价值观能够碰撞的员工在我看来才是1类员工，因为他们可以在任何时候实现企业意志。企业的行动也会一次又一次的点燃他心中的热情。他们会为企业的每一次成功而喝彩，会为企业的每一次错误而难过。

从这个角度来说，日本企业的员工大都符合1类员工的特点，不管是不是习惯惯性下来的。

哈哈";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"388";s:26:"POST_akismet_comment_nonce";s:10:"95ffbbcef3";s:15:"SERVER_SOFTWARE";s:22:"Apache/2.2.12 (Ubuntu)";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:9:"HTTP_HOST";s:17:"michael.nona.name";s:15:"HTTP_USER_AGENT";s:83:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:6.0.2) Gecko/20100101 Firefox/6.0.2";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:12:"HTTP_REFERER";s:52:"http://michael.nona.name/archives/388/comment-page-1";s:11:"HTTP_COOKIE";s:0:"";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:4:"4249";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:16:"SERVER_SIGNATURE";s:78:"<address>Apache/2.2.12 (Ubuntu) Server at michael.nona.name Port 80</address>
";s:11:"SERVER_NAME";s:17:"michael.nona.name";s:11:"SERVER_ADDR";s:13:"61.129.251.98";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"125.36.233.161";s:13:"DOCUMENT_ROOT";s:33:"/home/mechiland/michael.nona.name";s:12:"SERVER_ADMIN";s:15:"cao@redsaga.com";s:15:"SCRIPT_FILENAME";s:54:"/home/mechiland/michael.nona.name/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"51899";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1316681042";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69162</wp:comment_id>
			<wp:comment_author><![CDATA[kingfish]]></wp:comment_author>
			<wp:comment_author_email>niufish@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.niufish.com</wp:comment_author_url>
			<wp:comment_author_IP>125.36.233.161</wp:comment_author_IP>
			<wp:comment_date>2011-09-22 11:44:10</wp:comment_date>
			<wp:comment_date_gmt>2011-09-22 03:44:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你不妥协？现实的世界会逼着你跪下，除非你有让世界跪下的东西。而且这个东西leverage很高。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1316663050.92";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:56:{s:15:"comment_post_ID";s:3:"388";s:14:"comment_author";s:8:"kingfish";s:20:"comment_author_email";s:17:"niufish@gmail.com";s:18:"comment_author_url";s:15:"www.niufish.com";s:15:"comment_content";s:125:"你不妥协？现实的世界会逼着你跪下，除非你有让世界跪下的东西。而且这个东西leverage很高。";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"125.36.233.161";s:10:"user_agent";s:83:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:6.0.2) Gecko/20100101 Firefox/6.0.2";s:8:"referrer";s:37:"http://michael.nona.name/archives/388";s:4:"blog";s:24:"http://michael.nona.name";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:37:"http://michael.nona.name/archives/388";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:8:"kingfish";s:10:"POST_email";s:17:"niufish@gmail.com";s:8:"POST_url";s:15:"www.niufish.com";s:12:"POST_comment";s:125:"你不妥协？现实的世界会逼着你跪下，除非你有让世界跪下的东西。而且这个东西leverage很高。";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"388";s:26:"POST_akismet_comment_nonce";s:10:"95ffbbcef3";s:15:"SERVER_SOFTWARE";s:22:"Apache/2.2.12 (Ubuntu)";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:9:"HTTP_HOST";s:17:"michael.nona.name";s:15:"HTTP_USER_AGENT";s:83:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:6.0.2) Gecko/20100101 Firefox/6.0.2";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:12:"HTTP_REFERER";s:37:"http://michael.nona.name/archives/388";s:11:"HTTP_COOKIE";s:0:"";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"504";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:16:"SERVER_SIGNATURE";s:78:"<address>Apache/2.2.12 (Ubuntu) Server at michael.nona.name Port 80</address>
";s:11:"SERVER_NAME";s:17:"michael.nona.name";s:11:"SERVER_ADDR";s:13:"61.129.251.98";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"125.36.233.161";s:13:"DOCUMENT_ROOT";s:33:"/home/mechiland/michael.nona.name";s:12:"SERVER_ADMIN";s:15:"cao@redsaga.com";s:15:"SCRIPT_FILENAME";s:54:"/home/mechiland/michael.nona.name/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"61242";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1316663046";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69164</wp:comment_id>
			<wp:comment_author><![CDATA[高翌翔]]></wp:comment_author>
			<wp:comment_author_email>yixianggao@126.com</wp:comment_author_email>
			<wp:comment_author_url>http://weibo.com/yixianggao</wp:comment_author_url>
			<wp:comment_author_IP>124.193.185.42</wp:comment_author_IP>
			<wp:comment_date>2011-09-22 12:03:38</wp:comment_date>
			<wp:comment_date_gmt>2011-09-22 04:03:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[李开复曾说“二流的人雇三流人才”，在我工作过的3个大公司——苹果、微软、谷歌，都推崇一句话：一流的人雇一流人才，二流的人雇三流人才。一般的经理大部分都不是一流的人，他们更喜欢雇佣一些自己管得住的人。这些人并不只是经验比自己差，而是样样都不如自己，非常听话，但是往往就会把公司搞砸。
——此文与这话如出一辙，不过表面的合理性之下却隐藏着很多悖论：
(1) 二流的人雇三流人才？首先，雇佣新员工之前要对应聘者的能力、水平有着清晰的设计，以及充分的判断方法用于识别潜在员工。如果招聘者做不到或不会做这两点，那么谁去招聘都是白忙活。因此“二流的人雇三流人才”错不在二流雇员，而恰恰是此任务的决策者，其实决策者自己就是一脑袋浆糊！
(2) 怎么评一流、二流、三流？绩效考核么？绩效考核是基于结果的评价，即对员工在特定时段内所完成工作的价值判断。试问，所谓一流员工出生时是几流？大学毕业时是几流？工作一年后是几流？现在是几流？工作三十年后又是几流？就我个人而言，出生时不入流，大学毕业时准三流，工作一年后三流，现在是二流，工作三十年后不可知，因为工作还不到三十年。显然，人是会进步或进化的，一流员工不是天生的，是由二流员工进化而来的，因此，给活生生的人打上xx流的死标签简直太可笑了！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1316664218.5";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:56:{s:15:"comment_post_ID";s:3:"388";s:14:"comment_author";s:9:"高翌翔";s:20:"comment_author_email";s:18:"yixianggao@126.com";s:18:"comment_author_url";s:27:"http://weibo.com/yixianggao";s:15:"comment_content";s:1583:"李开复曾说“二流的人雇三流人才”，在我工作过的3个大公司——苹果、微软、谷歌，都推崇一句话：一流的人雇一流人才，二流的人雇三流人才。一般的经理大部分都不是一流的人，他们更喜欢雇佣一些自己管得住的人。这些人并不只是经验比自己差，而是样样都不如自己，非常听话，但是往往就会把公司搞砸。
——此文与这话如出一辙，不过表面的合理性之下却隐藏着很多悖论：
(1) 二流的人雇三流人才？首先，雇佣新员工之前要对应聘者的能力、水平有着清晰的设计，以及充分的判断方法用于识别潜在员工。如果招聘者做不到或不会做这两点，那么谁去招聘都是白忙活。因此“二流的人雇三流人才”错不在二流雇员，而恰恰是此任务的决策者，其实决策者自己就是一脑袋浆糊！
(2) 怎么评一流、二流、三流？绩效考核么？绩效考核是基于结果的评价，即对员工在特定时段内所完成工作的价值判断。试问，所谓一流员工出生时是几流？大学毕业时是几流？工作一年后是几流？现在是几流？工作三十年后又是几流？就我个人而言，出生时不入流，大学毕业时准三流，工作一年后三流，现在是二流，工作三十年后不可知，因为工作还不到三十年。显然，人是会进步或进化的，一流员工不是天生的，是由二流员工进化而来的，因此，给活生生的人打上xx流的死标签简直太可笑了！";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"124.193.185.42";s:10:"user_agent";s:63:"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)";s:8:"referrer";s:37:"http://michael.nona.name/archives/388";s:4:"blog";s:24:"http://michael.nona.name";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:37:"http://michael.nona.name/archives/388";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:9:"高翌翔";s:10:"POST_email";s:18:"yixianggao@126.com";s:8:"POST_url";s:27:"http://weibo.com/yixianggao";s:12:"POST_comment";s:1583:"李开复曾说“二流的人雇三流人才”，在我工作过的3个大公司——苹果、微软、谷歌，都推崇一句话：一流的人雇一流人才，二流的人雇三流人才。一般的经理大部分都不是一流的人，他们更喜欢雇佣一些自己管得住的人。这些人并不只是经验比自己差，而是样样都不如自己，非常听话，但是往往就会把公司搞砸。
——此文与这话如出一辙，不过表面的合理性之下却隐藏着很多悖论：
(1) 二流的人雇三流人才？首先，雇佣新员工之前要对应聘者的能力、水平有着清晰的设计，以及充分的判断方法用于识别潜在员工。如果招聘者做不到或不会做这两点，那么谁去招聘都是白忙活。因此“二流的人雇三流人才”错不在二流雇员，而恰恰是此任务的决策者，其实决策者自己就是一脑袋浆糊！
(2) 怎么评一流、二流、三流？绩效考核么？绩效考核是基于结果的评价，即对员工在特定时段内所完成工作的价值判断。试问，所谓一流员工出生时是几流？大学毕业时是几流？工作一年后是几流？现在是几流？工作三十年后又是几流？就我个人而言，出生时不入流，大学毕业时准三流，工作一年后三流，现在是二流，工作三十年后不可知，因为工作还不到三十年。显然，人是会进步或进化的，一流员工不是天生的，是由二流员工进化而来的，因此，给活生生的人打上xx流的死标签简直太可笑了！";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"388";s:26:"POST_akismet_comment_nonce";s:10:"95ffbbcef3";s:15:"SERVER_SOFTWARE";s:22:"Apache/2.2.12 (Ubuntu)";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:11:"HTTP_ACCEPT";s:37:"text/html, application/xhtml+xml, */*";s:12:"HTTP_REFERER";s:37:"http://michael.nona.name/archives/388";s:20:"HTTP_ACCEPT_LANGUAGE";s:5:"zh-CN";s:15:"HTTP_USER_AGENT";s:63:"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:9:"HTTP_HOST";s:17:"michael.nona.name";s:14:"CONTENT_LENGTH";s:4:"4918";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:18:"HTTP_CACHE_CONTROL";s:8:"no-cache";s:11:"HTTP_COOKIE";s:0:"";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:16:"SERVER_SIGNATURE";s:78:"<address>Apache/2.2.12 (Ubuntu) Server at michael.nona.name Port 80</address>
";s:11:"SERVER_NAME";s:17:"michael.nona.name";s:11:"SERVER_ADDR";s:13:"61.129.251.98";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"124.193.185.42";s:13:"DOCUMENT_ROOT";s:33:"/home/mechiland/michael.nona.name";s:12:"SERVER_ADMIN";s:15:"cao@redsaga.com";s:15:"SCRIPT_FILENAME";s:54:"/home/mechiland/michael.nona.name/wp-comments-post.php";s:11:"REMOTE_PORT";s:4:"3827";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1316664208";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69229</wp:comment_id>
			<wp:comment_author><![CDATA[Fevin]]></wp:comment_author>
			<wp:comment_author_email>fevin86@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.108.16.162</wp:comment_author_IP>
			<wp:comment_date>2011-09-30 11:52:41</wp:comment_date>
			<wp:comment_date_gmt>2011-09-30 03:52:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Passion, Smart, Honest. 哪个是最重要的, 还是一个听话的人.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1317354761.15";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:58:{s:15:"comment_post_ID";s:3:"388";s:14:"comment_author";s:5:"Fevin";s:20:"comment_author_email";s:17:"fevin86@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:72:"Passion, Smart, Honest. 哪个是最重要的, 还是一个听话的人.";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"59.108.16.162";s:10:"user_agent";s:83:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:7.0.1) Gecko/20100101 Firefox/7.0.1";s:8:"referrer";s:37:"http://michael.nona.name/archives/388";s:4:"blog";s:24:"http://michael.nona.name";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:37:"http://michael.nona.name/archives/388";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:5:"Fevin";s:10:"POST_email";s:17:"fevin86@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:72:"Passion, Smart, Honest. 哪个是最重要的, 还是一个听话的人.";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"388";s:26:"POST_akismet_comment_nonce";s:10:"365751bb42";s:15:"SERVER_SOFTWARE";s:22:"Apache/2.2.12 (Ubuntu)";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:9:"HTTP_HOST";s:17:"michael.nona.name";s:15:"HTTP_USER_AGENT";s:83:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:7.0.1) Gecko/20100101 Firefox/7.0.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:12:"HTTP_REFERER";s:37:"http://michael.nona.name/archives/388";s:11:"HTTP_COOKIE";s:0:"";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"295";s:8:"HTTP_VIA";s:37:"1.1 bjproxy:3128 (squid/2.6.STABLE21)";s:18:"HTTP_CACHE_CONTROL";s:14:"max-age=259200";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:16:"SERVER_SIGNATURE";s:78:"<address>Apache/2.2.12 (Ubuntu) Server at michael.nona.name Port 80</address>
";s:11:"SERVER_NAME";s:17:"michael.nona.name";s:11:"SERVER_ADDR";s:13:"61.129.251.98";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:13:"59.108.16.162";s:13:"DOCUMENT_ROOT";s:33:"/home/mechiland/michael.nona.name";s:12:"SERVER_ADMIN";s:15:"cao@redsaga.com";s:15:"SCRIPT_FILENAME";s:54:"/home/mechiland/michael.nona.name/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"36902";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1317354756";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69302</wp:comment_id>
			<wp:comment_author><![CDATA[Tin]]></wp:comment_author>
			<wp:comment_author_email>iamtin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.diamondtin.com</wp:comment_author_url>
			<wp:comment_author_IP>216.24.206.25</wp:comment_author_IP>
			<wp:comment_date>2011-10-08 22:12:37</wp:comment_date>
			<wp:comment_date_gmt>2011-10-08 14:12:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哥们，问题就出在这个leverage mode呀。 http://www.diamondtin.com/2011/thats-not-the-problem-of-b-player/]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1318083157.82";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:56:{s:15:"comment_post_ID";s:3:"388";s:14:"comment_author";s:3:"Tin";s:20:"comment_author_email";s:16:"iamtin@gmail.com";s:18:"comment_author_url";s:25:"http://www.diamondtin.com";s:15:"comment_content";s:115:"哥们，问题就出在这个leverage mode呀。 http://www.diamondtin.com/2011/thats-not-the-problem-of-b-player/";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"216.24.206.25";s:10:"user_agent";s:111:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50";s:8:"referrer";s:37:"http://michael.nona.name/archives/388";s:4:"blog";s:24:"http://michael.nona.name";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:37:"http://michael.nona.name/archives/388";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:3:"Tin";s:10:"POST_email";s:16:"iamtin@gmail.com";s:8:"POST_url";s:25:"http://www.diamondtin.com";s:12:"POST_comment";s:115:"哥们，问题就出在这个leverage mode呀。 http://www.diamondtin.com/2011/thats-not-the-problem-of-b-player/";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"388";s:26:"POST_akismet_comment_nonce";s:10:"e4368ec40b";s:15:"SERVER_SOFTWARE";s:22:"Apache/2.2.12 (Ubuntu)";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:9:"HTTP_HOST";s:17:"michael.nona.name";s:11:"HTTP_ORIGIN";s:24:"http://michael.nona.name";s:15:"HTTP_USER_AGENT";s:111:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:12:"HTTP_REFERER";s:37:"http://michael.nona.name/archives/388";s:20:"HTTP_ACCEPT_LANGUAGE";s:5:"en-us";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:11:"HTTP_COOKIE";s:0:"";s:14:"CONTENT_LENGTH";s:3:"354";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:16:"SERVER_SIGNATURE";s:78:"<address>Apache/2.2.12 (Ubuntu) Server at michael.nona.name Port 80</address>
";s:11:"SERVER_NAME";s:17:"michael.nona.name";s:11:"SERVER_ADDR";s:13:"61.129.251.98";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:13:"216.24.206.25";s:13:"DOCUMENT_ROOT";s:33:"/home/mechiland/michael.nona.name";s:12:"SERVER_ADMIN";s:15:"cao@redsaga.com";s:15:"SCRIPT_FILENAME";s:54:"/home/mechiland/michael.nona.name/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"62940";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1318083151";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
</channel>
</rss>
